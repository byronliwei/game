var m5i = {
    'i3': '0,4,0,0@0,0,0,2@2,4,0,0@0,0,4,0',
    'S04': "Siguiente nivel",
    'Z3b': "Продолжить игру",
    'u14': "back_menu",
    'E04': '04,0,02,04,0,0,02@0,0,0,0,0,04,0@0,04,0,0,0,0,0@0,0,04,0,0,0,0@0,0,0,0,06,0,0@04,0,0,0,04,02,06@03,0,0,0,0,0,0',
    'o0': '0,0,0,04,0,04,0,0,0@04,0,0,0,09,0,08,0,0@06,0,0,0,0,08,0,0,04@0,0,0,02,0,0,0,0,0@0,0,08,0,0,0,0,0,0@0,0,0,0,0,0,0,0,0@08,0,0,0,0,0,0,08,0@0,0,0,0,0,0,0,0,0@0,04,0,0,0,0,0,0,04',
    'g24': '04,0,0,0,0,0,0,04,0,0,04@0,0,0,0,0,0,0,08,0,0,0@0,08,0,0,0,0,0,0,0,0,04@0,0,0,0,08,0,04,0,0,0,0@0,0,0,0,0,0,020,0,0,0,02@0,0,0,0,0,0,0,0,0,0,0@0,02,0,04,04,0,04,0,02,0,0@04,0,0,0,0,0,0,0,0,02,02@0,0,0,0,0,0,0,0,0,0,0@04,0,0,0,0,08,0,04,0,0,0@0,0,04,0,0,0,0,02,0,0,09',
    'z0': "Результаты",
    'S74': "static/grid0006.png",
    'g0': "Samaya:",
    'i6': "0,02,0,08,0,0,0,0,0,04@02,0,04,0,0,04,04,0,0,0@0,0,0,0,0,0,0,0,0,04@0,0,02,0,0,0,0,0,02,0@0,0,0,0,0,0,0,0,04,0@04,0,0,0,0,025,0,0,0,0@0,0,0,0,0,0,0,0,0,0@0,0,0,0,0,0,0,0,0,04@0,0,0,0,0,0,04,08,02,0@04,02,0,03,0,0,0,04,0,0",
    'Z5': '04,0,02,0,0,0,04,0@0,0,0,0,0,02,0,0@03,0,0,0,0,0,03,0@0,04,02,0,0,0,06,0@0,0,0,0,0,0,0,0@03,0,0,0,0,0,03,0@0,0,0,0,0,0,0,0@04,0,02,016,0,02,04,0',
    'f8b': "Ghasitana",
    'Y8b': 5000,
    'J9': "Kontynuuj poprzednią grę",
    'N64': "fullscreen_off",
    'u1b': "Start New Game",
    'R3': "0,04,0,0,04@0,0,0,0,0@0,0,0,04,0@05,0,0,0,0@0,0,04,0,04",
    'f2': "Tekrar Oyna",
    'W8b': "Puanın",
    'n5': "Aapka Score",
    'X3b': "static/num0017.png",
    'G2b': "back4",
    'U94': "0,04,0,0,0,03,0@02,0,0,0,04,0,0@0,0,0,04,0,0,04@0,04,04,0,0,0,04@02,0,0,0,0,0,0@0,0,0,04,0,0,0@04,0,04,0,0,0,02",
    'a64': "0,02,03,0,0@0,0,0,0,0@0,04,0,0,06@04,0,0,0,0@0,0,0,04,02",
    'U8b': "Zakończ grę",
    'B8': "br_portugal",
    'D3b': "03,0,0,0,0,0,0,04,0@0,0,0,0,0,0,0,0,04@0,0,0,0,0,04,0,0,0@0,0,04,0,0,0,0,04,0@08,0,0,0,0,02,0,0,0@0,08,0,016,0,0,02,04,0@0,0,0,0,0,04,0,0,0@0,0,04,0,0,04,0,0,0@0,0,0,02,0,0,04,0,0",
    'V3': "04,04,0,0,0,0,0,0,0,0@0,0,0,04,0,0,08,04,0,0@0,0,0,0,0,0,0,0,04,0@0,0,04,0,04,0,0,0,0,04@0,0,0,0,0,0,0,0,0,0@0,0,0,0,0,020,0,0,0,0@0,02,0,0,0,08,04,0,0,0@0,04,0,0,0,0,04,0,0,0@0,0,0,04,0,0,0,04,0,0@02,0,0,0,0,04,0,0,04,0",
    'T3': '02,0,04,0,0,02,0@0,0,04,0,0,0,04@0,0,0,0,0,0,0@0,012,0,0,0,0,0@04,0,0,04,0,0,0@0,0,0,0,04,0,0@0,02,04,0,0,0,03',
    'p0b': "tur_turkish",
    'w1': "static/grid0003.png",
    'O8': "暂停",
    'V1b': "Punkty:",
    'U44': 32,
    'y5b': "Más juegos",
    'W6': "Pomoc",
    'X1': "Twój wynik",
    'K4b': "Continua la partita precedente",
    'P8': "Wapas",
    'r4': "0,06,0,04,02,0,0,02,0,0,0,0@04,0,0,0,0,0,04,0,0,0,04,02@0,0,0,0,0,030,0,04,04,0,0,0@0,0,0,0,0,0,0,0,0,0,010,0@02,0,0,0,0,0,0,0,0,0,0,0@0,0,0,0,0,0,0,0,04,0,0,0@0,0,0,0,0,0,0,0,0,0,0,05@0,04,0,0,0,0,0,0,02,02,0,03@0,0,02,0,0,0,0,0,0,04,0,0@0,0,0,0,04,04,0,04,0,0,0,0@0,08,06,0,0,0,0,0,0,0,0,02@0,0,0,0,0,04,0,04,0,04,0,0",
    'A0b': "Level Completed",
    'k3b': "0,02,0,02,0,0,0,03,0@0,0,0,0,0,0,0,0,0@0,08,0,0,0,0,04,0,04@06,0,0,0,0,0,0,0,0@0,0,0,0,016,0,0,04,0@0,0,02,04,0,0,0,04,0@0,0,04,02,0,0,0,0,03@02,0,0,0,0,0,02,0,0@0,0,0,04,0,0,0,0,05",
    'm6b': "Меню",
    'w5': 'level',
    'R44': 11,
    'C44': "Graj ponownie",
    'h7': "static/sound2.png",
    'u5': '04,0,0,0,02,0,0,02,0@0,0,0,04,0,04,04,0,0@02,0,02,0,0,0,0,0,0@0,0,0,0,0,0,0,016,06@0,0,0,0,0,0,0,0,0@0,04,0,0,0,0,0,0,0@0,0,04,0,0,08,0,0,0@0,0,0,0,04,0,02,04,0@04,0,0,0,0,02,0,0,03',
    'd24': "Karıştır",
    'F0': "时间奖励:",
    'z74': '0,03,0,04,0,0,02@04,0,0,0,04,0,0@0,0,0,02,0,0,0@0,0,0,0,0,04,0@0,0,0,0,0,0,0@0,0,09,0,04,0,04@03,0,03,0,03,0,0',
    'c44': "static/num0010.png",
    'Z2': "Goal:",
    'H5': "Nível:",
    'A6b': 'soundMuted',
    'F6': "0,02,0,0,0@03,0,0,0,04@0,0,0,0,0@02,0,0,04,0@0,08,0,0,02",
    'n5b': "Zeit zu Ende",
    'L8': "static/grid0004.png",
    'c8': "SFly",
    'c1b': 'none',
    'y6b': "Więcej gier",
    'p7b': "Enviar pontuação",
    'P44': "Jouw Score",
    'K9b': "04,0,0,0,0,0@04,0,0,0,0,04@0,0,0,0,012,0@0,0,0,0,0,0@0,0,04,0,0,0@0,04,0,0,0,04",
    'W74': "0,0,05,0,0@04,0,0,0,02@0,0,0,0,0@0,04,04,0,04@0,0,0,0,02",
    'O84': "Ziel ist es, durch Ziehen Rechtecke im Spiel zu kreieren. Jedes Rechteck darf nur 1 Nummer enthalten; diese Nummer gibt die Anzahl der Zellen im Rechteck an.",
    'z4': '0,0,04,02,0,0,04,0,0,0,02,0@04,0,0,02,0,02,0,0,04,0,0,0@0,0,0,0,0,0,0,0,0,04,04,0@0,0,0,0,0,0,0,0,0,0,0,02@0,0,015,0,0,0,04,0,06,0,02,0@02,0,0,05,0,0,02,0,0,0,0,02@03,04,0,0,0,0,0,0,0,0,02,0@0,0,0,03,0,0,0,036,0,0,0,02@0,0,02,0,0,0,0,0,0,0,02,0@04,0,0,0,0,0,0,0,0,0,0,02@0,08,0,0,0,0,0,0,0,0,0,0@0,0,0,0,0,0,0,0,0,0,0,04',
    'x44': "Nível seguinte",
    'T8b': "0,0,0,0,04,06,0,0,0,0@04,0,0,0,0,0,0,0,02,0@0,0,0,02,0,0,0,0,0,0@0,0,0,0,04,0,0,0,0,0@04,0,010,0,0,016,0,0,0,08@0,0,02,04,0,0,0,0,0,0@0,0,04,0,0,0,0,0,04,0@0,0,0,0,04,02,0,0,02,0@0,0,0,0,0,0,04,0,0,02@02,04,0,0,02,0,0,0,04,0",
    'G7': "Poziom ukończony",
    'T1b': "时间到",
    't9b': "Objetivo:",
    'b3b': "Linear",
    'v5': "Spiel beenden",
    'D2': "Pontuação Máx.",
    'X24': "Stop spel",
    'Z9b': "-",
    'r04': "0,02,0,0,02,04,0,0@0,0,02,0,0,0,0,0@04,02,0,0,04,0,08,04@0,0,0,0,0,0,0,0@0,0,0,0,0,0,0,0@0,0,0,0,0,0,0,04@04,0,0,0,016,0,0,0@0,04,0,0,0,0,04,0",
    'M64': "提示",
    'Z1': "Уровень завершен",
    'o2': "Puntuación alta",
    'i1b': "Stara:",
    'C8': "Cel:",
    'F4': "高分",
    'Z84': "Yardım",
    'R7': "Bonus temps:",
    'Y2b': "How To Play",
    'C4b': "static/num0014.png",
    'S9b': "Spielen",
    'T04': ")",
    'P3': '0,03,0,0,0,02,0,02@06,0,04,0,0,0,08,0@0,0,02,0,0,04,0,0@0,0,012,0,02,0,0,04@0,0,0,0,0,0,0,0@0,0,0,0,0,0,0,0@02,0,0,0,04,0,0,02@0,03,0,0,0,04,0,0',
    'l7': "Önceki oyuna devam",
    'd4b': "0,0,0,0,02,02,0,0,0,04,04,0@0,0,04,08,0,0,0,012,0,0,0,0@0,06,0,0,0,04,0,0,0,0,0,0@04,0,0,0,0,0,0,0,0,0,08,0@0,0,02,0,0,0,0,0,04,0,0,04@08,0,0,02,0,0,0,0,0,0,0,0@0,0,0,010,0,0,0,0,0,0,0,0@0,0,0,0,03,0,0,0,02,03,0,0@0,0,0,0,0,04,0,02,0,04,04,04@02,0,0,0,04,0,0,0,0,0,0,0@0,02,0,0,0,0,0,08,0,0,0,0@0,02,0,08,0,0,0,04,0,0,0,0",
    'M2b': '0,0,0,0,0,04,0,0,04,0,0,0@0,0,04,0,0,04,0,03,0,0,04,0@0,04,0,0,0,0,0,0,0,04,0,0@05,0,0,0,0,0,08,0,02,0,0,0@0,02,0,0,0,0,0,0,0,0,0,04@0,06,0,0,016,0,0,0,0,0,06,0@0,0,0,0,0,0,0,0,0,08,0,0@0,0,03,0,0,0,0,04,04,0,0,0@0,0,0,0,0,0,0,0,04,0,02,0@0,0,0,04,0,08,0,0,0,0,0,02@04,04,0,0,0,0,0,02,0,0,02,0@0,0,04,0,04,0,0,0,0,0,0,05',
    'u04': "static/num_0009.png",
    'c4b': "02,02,0,0,02@0,0,0,0,0@03,0,0,0,04@0,0,08,0,0@0,0,0,0,04",
    'E2': "num15",
    'P1b': "Tempo scaduto",
    'Q7b': "04,04,0,0,0,0,0,0@0,0,0,08,0,0,0,0@0,0,0,0,0,04,04,0@0,0,0,04,0,0,0,04@0,0,0,0,0,016,0,0@0,0,0,0,0,0,0,0@0,0,0,0,04,0,04,0@0,08,0,0,0,0,0,0",
    'S14': 1000,
    'B8b': 'visible',
    'M3b': "Pauze",
    'Z8': "Najwyższe wyniki",
    'A1b': "Hilfe",
    'B6b': "Level abgeschlossen",
    'F1b': "back_game",
    'm4b': "pol_polish",
    'o8b': "Baralhar",
    'Y94': 'object',
    'h8': 'error',
    'W8': "0,0,0,08,0,0,0,0@0,0,04,0,0,04,0,0@04,0,0,0,02,0,03,0@0,0,0,0,0,0,0,04@0,0,0,0,012,0,0,0@04,08,0,0,0,0,0,0@0,0,04,0,0,0,0,04@0,0,0,0,0,0,03,0",
    'u2b': "music2",
    'W5': "But:",
    'u6b': "Oyna",
    'a4': '02,0,0,0,02,0,0,0@02,0,0,0,04,0,08,0@0,02,03,0,0,04,0,04@0,04,0,0,0,0,0,0@0,0,0,0,0,0,0,0@0,0,09,0,0,0,0,0@04,0,0,0,02,0,0,0@02,0,04,0,0,04,0,04',
    'K04': 40,
    'H4': 'es',
    'K1': "Seviye Tamamlandı",
    'v6': "Tempo:",
    'P4': "num_8",
    'Q94': "es_spain",
    'v94': "static/grid0002.png",
    'y1b': "Your Score",
    'a9b': "num3",
    'g9b': "static/music2.png",
    'q3': "Livello:",
    'R94': "Khel me aayto banane ke liye kheeche. Prtyek aayat kewal aayat me kosikaon ki sankhya ka pratinidhitva karne wale ek sankhya ho sakti hai.",
    'K8': "0,02,0,012,0,0,08,04@0,04,0,0,04,0,0,0@0,0,0,0,04,0,0,0@04,0,0,0,0,0,0,0@0,0,0,0,02,0,0,04@02,0,0,0,0,0,0,0@0,0,0,04,02,02,0,0@0,04,0,0,02,0,0,0",
    'K7': 500,
    'U7': "A sua pontuação",
    'K3b': '0,02,0,0,0,012,0,0,03,0,0@06,0,0,0,0,0,0,0,0,0,0@0,0,0,0,0,0,0,09,0,0,0@0,0,0,0,0,0,05,0,0,0,05@02,0,08,0,0,0,0,0,0,03,0@0,0,0,0,0,0,0,0,0,0,0@0,0,0,0,0,0,0,0,020,0,02@04,0,0,0,0,0,0,0,0,0,0@0,0,0,0,08,0,08,0,0,0,02@0,0,0,0,0,0,0,04,0,04,0@0,04,02,0,04,0,0,04,0,0,0',
    'A4': 5,
    'W2b': "Ayuda",
    'T2': "恭喜过关",
    't1': "Graj",
    'p94': "static/num0002.png",
    'e8': "Start Nieuw Spel",
    'X0b': "Doel:",
    'Y24': "static/num_0017.png",
    'o6': "Faites glisser pour créer des rectangles dans le jeu. Chaque rectangle ne peut contenir qu'un nombre représentant le nombre de cellules dans le rectangle.",
    'm74': "Твои очки",
    'Q4': "Играть",
    'x7': "Termina gioco",
    'f1': "num_3",
    'j1': 'px 0px',
    'y74': "Back",
    's7': "Continuar juego anterior",
    'b04': '0,0,0,08,02,0,0,0,04,0,0,0@0,0,0,0,0,0,04,0,0,0,04,03@0,0,05,0,0,0,04,0,0,02,0,0@02,0,0,03,0,0,0,02,0,04,02,0@0,0,0,0,0,0,0,0,0,0,0,0@06,0,0,0,0,010,0,0,0,0,0,0@0,0,09,0,0,0,0,0,0,0,08,05@02,0,0,03,0,0,0,0,0,04,0,0@0,0,0,0,05,0,02,0,0,0,0,05@0,012,0,0,0,0,0,0,0,0,0,0@0,0,0,0,04,0,0,0,0,04,04,0@0,04,0,04,0,0,04,0,0,0,0,0',
    'T1': "num_16",
    'N04': 'zh',
    'Q5': "Bono",
    'p4b': "Jogar de novo",
    'k6': "num16",
    'P2': "Schudden",
    'w8b': '0,0,0,0,0@3,0,0,8,0@0,0,0,4,0@0,0,0,0,2@2,2,0,4,0',
    'e74': ')',
    'A2': "num_7",
    'A44': 'load',
    'z3': "0,04,0,0,02,02,0,03,0,02,0@0,0,0,02,0,0,0,04,0,0,0@0,0,0,0,0,0,0,0,0,0,0@0,0,0,0,0,0,04,0,0,08,0@0,0,0,0,0,0,0,0,04,0,0@0,020,0,0,0,0,04,04,08,0,0@08,0,0,0,04,0,0,0,0,0,04@0,04,0,02,0,0,0,0,0,0,0@0,0,04,0,0,0,0,0,0,0,0@03,0,0,0,0,06,0,0,0,0,02@0,0,02,0,0,03,0,0,08,0,0",
    'w7b': "Nächster Level",
    'D5': "Zeitbonus:",
    'x8b': "Temps écoulé",
    't5b': "Tu puntuación",
    'g14': "num_15",
    'e5': '0,0,2,0,0@0,0,0,0,8@3,0,0,0,0@2,0,8,0,0@0,0,0,2,0',
    'e9b': '',
    'x3b': '02,0,0,0,04,0,0,06,0,0,0,0@0,0,0,04,0,02,0,0,0,02,04,0@0,0,0,0,0,0,0,0,0,0,0,0@0,0,04,0,0,0,030,0,0,0,0,04@04,0,0,0,0,0,0,0,0,0,06,0@0,0,0,0,0,0,0,0,06,04,0,0@02,06,0,0,0,0,0,0,0,02,0,0@0,0,02,0,0,0,0,0,0,0,0,02@04,0,0,0,04,0,0,0,04,0,02,04@0,0,0,0,0,0,0,0,010,0,0,0@0,0,0,0,04,0,0,0,02,04,0,0@0,02,02,02,04,0,0,0,0,0,0,0',
    'G44': "Вернуться",
    'Z2b': "Neues Spiel starten",
    'h44': "Score Prastuta Karen",
    'q14': "CriOS",
    'X6': "num_2",
    'X7': "Завершить",
    'j04': 24,
    'M7b': 'auto',
    'X84': '04,0,0,0,08,0,0@0,0,0,0,0,0,02@0,0,0,0,0,012,0@02,0,04,0,0,0,0@0,0,0,0,0,0,0@06,0,0,0,0,0,04@04,0,0,0,0,0,03',
    'h9b': "Jak grać",
    'o04': 23,
    't94': '02,0,04,0,0,0@0,0,0,04,0,0@04,0,04,0,0,0@04,0,04,0,0,0@0,0,0,04,0,04@02,0,0,0,0,0',
    'E5': "url(",
    'y7b': "Continuer la partie",
    'H24': 10,
    'c6': "Jouer encore",
    'i9': "Como jogar",
    'r64': "fr_france",
    'p7': "RU",
    'y2': '0,02,04,08,0,0,0,0,0@0,04,0,0,0,0,0,0,04@0,0,0,0,0,04,0,08,0@02,0,0,0,0,0,0,0,0@0,0,0,09,0,0,0,0,0@04,0,0,0,04,0,0,0,04@0,0,08,0,0,04,0,0,0@0,0,0,0,0,0,0,0,0@0,0,0,0,04,0,0,0,08',
    'b44': 14,
    'p3': "it_italy",
    'c5': '0,04,02,02,0,0,0,04,0@0,0,0,0,0,08,0,0,04@0,03,0,0,0,0,0,0,0@0,0,0,012,0,0,0,02,0@06,0,0,0,0,0,0,08,0@0,0,0,0,0,0,0,0,0@04,0,02,0,0,0,0,0,0@0,04,02,0,04,0,08,0,0@0,0,0,0,0,0,0,0,02',
    'z2': "03,0,0,0,0,03,0,0@0,0,0,0,08,0,0,0@0,0,0,0,04,0,06,0@0,0,0,0,0,0,0,0@0,0,0,0,016,0,0,0@02,0,02,0,0,02,0,0@0,02,0,04,0,0,04,0@0,0,0,04,0,0,04,0",
    'R6b': "static/num_0011.png",
    't44': "Vorheriges Spiel fortsetzen",
    'P5b': "Mais Jogos",
    'S2': "Arraste para criar retângulos no jogo. Cada retângulo pode conter apenas um número, que representa o número de células nesse retângulo.  ",
    'f9b': "Android",
    'H4b': "Tiempo:",
    'M5b': "grid6",
    'h3b': "music1_",
    'S5': "Menu",
    'a0b': "static/num_0012.png",
    'l1b': "back2",
    'K4': "Amaç:",
    'W4': "num_5",
    'l9b': "Zurück",
    'r6b': "Ziel:",
    'i6b': "back5",
    'b9': "static/fullscreen.png",
    'x6': '0,0,0,06,0,03,0,0@0,0,0,0,0,0,06,0@08,0,0,03,0,0,0,0@0,0,0,0,0,0,0,0@0,02,0,0,0,0,0,0@0,0,0,0,0,016,0,08@0,04,0,0,0,0,02,0@0,02,0,0,0,04,0,0',
    'L04': "Continuer",
    'x7b': 'NCM1Kkc=',
    'x24': 80,
    'Z6b': "Jari",
    'R8': "static/menu_back.jpg",
    'v9b': "num25",
    'P24': "Terug",
    'a94': "Game Samapti",
    'P14': "0,0,02,0,0,02,0@0,0,0,0,04,0,0@0,08,0,012,0,0,0@0,0,0,0,0,0,04@0,02,0,0,0,0,0@04,0,0,0,0,0,03@0,0,0,0,06,02,0",
    'U2': "static/num0005.png",
    'j2': '3,0,0,0,0@0,0,0,0,8@0,8,0,0,0@2,0,0,0,0@0,2,0,0,2',
    'M8': "0,0,04,0,0,0,03,0,0,0@04,0,0,04,0,0,0,04,0,0@0,0,0,0,0,0,0,0,02,03@0,0,0,08,0,0,0,04,0,0@0,0,0,0,0,0,0,0,0,04@0,0,0,0,0,0,02,0,04,0@0,0,0,08,020,0,02,0,0,0@0,08,0,0,0,0,02,0,06,0@0,0,0,0,0,0,0,0,0,0@0,0,0,04,0,0,0,04,0,0",
    'L44': "再试一次",
    'K5b': '0,0,0,02,02,0,04,0,04,0,0@0,03,0,02,0,04,0,0,0,04,0@04,0,02,0,0,0,0,0,0,04,0@0,0,0,0,0,0,0,0,010,0,0@02,0,0,025,0,0,0,0,0,0,04@0,0,0,0,0,0,0,0,0,0,0@0,0,0,0,0,0,04,0,0,0,0@05,0,0,0,0,0,0,0,0,04,0@0,04,0,02,0,03,0,0,0,0,02@0,0,0,04,0,0,0,04,04,04,0@0,0,02,0,0,0,03,0,0,0,0',
    'B2': "static/num0015.png",
    'R7b': "Instructies",
    'u5b': "0,0,04,0,04,0,0,0,06,0,0@0,0,08,0,0,0,0,0,0,04,0@0,0,0,0,0,0,08,0,0,0,02@0,04,0,0,0,04,0,0,0,02,0@04,0,0,0,0,0,0,0,0,0,0@0,0,0,08,020,0,0,0,0,0,04@0,0,0,0,0,0,0,0,0,04,0@04,0,0,0,0,0,0,0,0,0,0@0,06,0,0,0,0,0,0,0,0,02@0,0,0,0,0,0,04,02,0,02,0@0,0,02,04,02,0,0,0,05,02,0",
    'S6': '04,0,0,012,0,0@0,04,0,0,04,0@0,0,0,0,02,0@0,0,0,0,0,0@04,0,0,0,04,0@0,0,0,0,02,0',
    'g5': 'gameready',
    'W9b': "ARG",
    'X9': "Time Bonus:",
    'y7': "ES",
    'k6b': "0,0,0,0,0,03@0,0,0,0,0,0@0,0,0,04,0,0@04,0,0,0,0,04@02,0,0,0,04,0@0,0,012,03,0,0",
    'H5b': "Dein Spielstand",
    'f1b': "Meta:",
    'w1b': "Votre score",
    'F7': "static/grid0008.png",
    'g74': "继续",
    'W6b': 800,
    'r3b': "Play",
    'y8': "MX",
    's94': "de_germany",
    'V7': "num_9",
    'w2': "static/deBug.png",
    'c3': "Gioca",
    'z44': "0,0,0,06,0,0,0,0,0,04@02,0,0,0,0,03,0,0,0,02@0,0,04,0,0,0,04,0,06,0@02,0,0,0,0,0,0,0,0,03@0,04,0,0,016,02,0,0,0,0@0,0,06,0,0,0,04,0,0,0@0,0,0,0,0,0,0,0,04,04@0,0,0,0,0,02,02,02,0,0@02,0,04,0,0,0,0,0,02,0@0,02,0,04,0,0,0,04,0,0",
    'H6': 300,
    'P6': "Mischen",
    'j8': "static/game_back.jpg",
    'Z5b': "Spelen",
    'V94': "03,0,0,0,0,0,0,02,0,0,0@0,06,0,04,08,0,0,02,0,04,0@0,0,0,0,0,0,04,0,04,04,0@0,0,03,0,0,0,0,0,0,0,0@0,04,0,0,0,0,0,0,0,0,0@0,08,0,0,0,0,0,0,0,0,0@0,0,0,0,0,0,0,0,0,0,0@02,0,0,0,05,0,025,0,0,0,0@0,0,04,02,0,0,0,0,0,0,05@0,04,0,0,04,0,0,04,0,0,0@0,0,0,0,04,0,0,0,04,0,02",
    'u9b': 'send',
    'D94': "关：",
    'k3': "Continue Previous Game",
    'Y84': "0,02,0,02,0,0,0,0,04@0,04,0,04,0,0,06,04,0@0,0,0,0,03,0,0,0,0@0,04,0,0,0,0,02,0,0@04,0,0,0,09,08,0,06,0@0,0,0,0,0,0,0,0,0@0,0,0,02,0,0,0,0,0@04,0,0,04,0,0,0,04,0@0,0,0,0,03,0,02,0,0",
    't2': "Obiettivo:",
    'D3': "static/fullscreen-off.png",
    'J6': 'wakeup',
    'o8': '//',
    'm7': "static/num0004.png",
    'Q5b': "Atrás",
    'B5': 'idle',
    'a6b': 350,
    'o1b': '04,0,0,04,0,0,04,0@0,0,04,0,0,0,0,0@0,0,0,0,0,016,0,0@0,0,0,0,0,0,0,0@0,0,04,0,04,0,0,0@0,04,0,0,0,0,04,04@0,0,0,0,0,04,0,0@04,0,0,0,0,0,04,0',
    'd5b': "Sonraki seviye",
    'b9b': "num4",
    'w4b': "debug",
    'P7b': "Nasıl Oynanır",
    'B14': "Punteggio",
    'n14': "奖励",
    'A2b': "0,0,04,0,0,02,04,0,0,0@0,02,0,02,0,0,0,0,0,0@04,0,0,0,0,016,0,0,0,04@0,0,0,04,0,0,0,0,0,0@0,0,0,0,0,0,04,0,08,0@04,08,0,0,0,0,04,0,0,0@0,02,0,0,0,0,02,0,0,02@0,0,0,02,0,0,0,0,04,0@0,0,04,0,0,0,0,04,0,0@0,08,0,0,0,0,0,0,02,0",
    'j4b': "in_india",
    'n6b': "",
    'R74': "CN",
    'I9': '0,0,04,0,0,04@0,0,0,04,06,0@0,0,02,0,0,0@04,04,0,0,0,0@0,0,0,02,0,0@02,02,0,0,0,02',
    'Y44': "Fortfahren",
    'C8b': "Continue",
    'F6b': "Commencer une nouvelle",
    'h6b': "Inizia una nuova partita",
    'Z9': "0,0,0,02,0,0,04,0,0@03,04,0,0,0,0,0,08,0@0,0,02,0,0,0,0,0,0@0,04,0,0,0,0,0,04,0@02,0,0,0,0,0,0,0,04@04,0,0,0,016,0,04,0,0@0,0,0,0,0,0,0,0,0@0,0,0,0,0,0,0,08,0@0,04,04,0,0,0,04,0,0",
    'V04': 'number',
    'C14': false,
    'G1b': 200,
    'y64': "Premia za czas:",
    'V2': 'it',
    'x04': "complete",
    'H84': '0,06,0,0,0,0,0@0,0,02,0,0,0,04@04,0,0,0,0,0,0@0,0,0,0,0,0,012@0,0,02,0,0,0,0@03,0,04,0,06,0,04@0,0,0,0,0,0,02',
    'f14': "POL",
    'g2b': "End Game",
    'z14': "Speel om rechthoeken in het spel te maken. Elke rechthoek mag maar 1 nummer bevatten, dat nummer geeft het aantal cellen aan dat de rechthoek moet bevatten",
    'b64': '?game=',
    'X1b': "更多游戏",
    'T5': "Plus de jeux",
    'o14': "Try Again",
    'Q0b': "static/bb0011.png",
    'x0b': "Bestenliste",
    'l5': 'gameContainer',
    'H9': '04,0,0,0,0,0,03,0,0,0,02@0,03,0,0,08,0,0,02,0,04,0@0,0,0,0,04,0,02,0,0,0,0@0,0,0,04,0,0,02,0,08,0,0@0,02,0,0,0,04,02,0,0,04,0@0,0,0,0,0,0,0,02,0,0,0@04,0,0,0,0,0,0,02,0,0,04@0,0,0,0,0,0,0,0,0,0,0@0,0,0,0,0,0,0,04,0,04,0@0,0,0,025,0,0,04,0,0,0,02@03,0,02,03,0,0,0,0,04,0,0',
    'w14': "Temps:",
    'Q9': "EN",
    's64': 60,
    'N74': "static/frame.png",
    'v9': "absolute",
    'w5b': "More Games",
    'H7': "Nog een keer",
    'l44': 18,
    'G9': "Highscore",
    'a9': "提交分数",
    'l4': 340,
    'w44': 20,
    'G3b': "0,0,0,0,04,02,0,0,0,0@0,04,0,0,0,0,0,0,0,0@0,0,0,04,0,0,0,04,0,04@06,0,0,0,0,0,016,0,04,0@0,012,0,0,0,0,0,04,0,04@0,0,0,0,0,0,0,0,0,0@0,0,0,04,0,0,0,0,04,0@0,0,0,04,0,0,0,0,0,0@04,0,0,04,0,0,0,0,04,0@0,04,0,0,0,02,0,0,0,02",
    'C2b': "111",
    'B44': 15,
    's3b': "static/grid.png",
    'u7': "Haut score",
    'C4': 2,
    'H6b': '0,05,0,0,0,0,0,08,0,0@05,0,0,0,0,0,0,0,0,02@0,02,0,0,0,0,0,0,0,06@0,02,0,0,0,0,02,0,0,0@02,0,020,0,0,0,08,0,0,0@0,0,0,0,0,0,0,0,0,0@0,04,0,0,0,0,0,0,0,04@03,0,04,0,0,04,0,0,0,0@0,0,0,04,0,0,0,0,0,0@0,0,02,0,0,04,0,0,09,0',
    'i24': "static/num0016.png",
    'n74': "Время:",
    'I7': "Devam",
    'J5b': "num_30",
    'l9': '04,06,0,0,0,0,020,0,0,08@0,0,0,0,0,0,0,0,0,0@0,02,0,0,0,0,0,0,0,0@0,0,04,0,04,0,0,0,0,0@0,0,0,0,0,0,0,0,0,0@0,0,0,0,0,0,04,0,0,0@0,015,0,0,0,0,0,08,0,0@0,0,0,0,04,0,0,0,0,0@0,0,06,0,0,02,0,0,0,02@03,0,0,0,02,0,02,0,04,0',
    'b24': "Bónus",
    's4b': "zh-cn",
    'n9': "重新开始",
    'm24': "Naya game Shuru",
    'g8': "Barajar",
    'g8b': "static/num0008.png",
    'V7b': "num6",
    'V14': "num8",
    'h04': 25,
    'k4': "02,0,0,0,0@06,0,0,0,0@0,0,0,08,0@0,0,0,0,0@0,02,02,0,05",
    'G2': "Guida",
    'R2b': "Anya games",
    'b7b': "Ajuda",
    'L14': "num_12",
    'L6b': "sound2_",
    'O6b': 'http://googleads.g.doubleclick.net/pagead/ads?client=ca-games-pub-5029257013560698&channel=1594928698+Gaming+Entertainment&ad_type=text_image_video&max_ad_duration=30000&description_url=[description_url]',
    'u2': "num10",
    'd0': "sound1_",
    'Q1b': "num1",
    'Z64': "Sugerencia",
    'a1': "num_4",
    'n4': 9,
    'I1b': 'pt',
    'U3': "Tasuj",
    'v04': "0,0,0,04,0,0,0,0,0,04,0@0,0,0,0,0,0,0,0,0,0,0@05,05,0,0,0,08,04,0,0,0,0@0,0,0,0,0,02,0,04,0,0,04@0,0,04,0,02,0,0,0,0,02,0@0,0,0,0,0,0,0,04,0,0,0@04,0,0,0,0,025,04,0,0,0,0@0,0,0,0,0,0,0,0,010,06,0@0,0,0,0,0,0,0,0,0,0,0@02,0,0,0,0,0,04,0,0,04,0@0,0,0,0,05,0,02,0,03,0,0",
    'M44': "Soumettre score",
    'w8': "时间：",
    'O0b': "Bonus a tempo:",
    'T7': "num30",
    'Z7': "Продолжить",
    'X2b': "0,04,0,0,0,04,0,02,04,0,0,02@0,0,02,04,0,0,02,0,0,0,04,0@0,0,02,0,06,0,0,0,0,0,0,0@04,0,0,0,0,04,0,0,02,0,02,0@02,0,0,0,0,0,0,0,0,0,0,0@04,0,0,0,0,0,0,0,0,0,0,036@0,0,04,0,0,0,0,0,0,0,0,0@0,02,0,0,0,0,0,0,0,0,0,0@0,0,04,0,06,0,0,0,0,03,0,0@06,0,0,0,0,0,08,0,0,0,0,02@0,0,0,02,0,0,0,0,0,0,06,0@0,02,0,02,0,0,0,0,04,0,03,0",
    'W1b': 400,
    'e1b': "static/sound1.png",
    'U8': "static/bb0010.png",
    'D7b': "0,0,04,0,0,0,0,0@0,04,0,04,0,0,0,04@0,0,0,0,0,0,0,04@0,0,0,0,0,012,0,0@0,0,04,0,04,0,0,0@02,0,0,0,04,0,0,02@0,08,0,0,0,0,0,0@0,0,0,0,0,08,0,0",
    'h5': "Sanketa",
    'K64': 48,
    'J8': "分数:",
    'J64': "你的分数：",
    'n4b': "Puan:",
    'm14': "0,0,02,0,04,0,0@0,04,06,0,0,0,0@0,0,0,0,02,0,0@0,04,0,0,04,0,04@0,0,02,0,0,0,0@04,0,0,0,04,0,03@0,02,04,0,0,0,0",
    'L7b': "Süre bitti",
    'T84': "num_10",
    'Y5b': "04,0,0,0,0,0,0,04,0,0,02@0,0,0,04,04,0,0,04,0,0,0@0,0,0,0,0,0,0,04,0,02,0@0,04,0,0,0,020,0,0,0,0,0@04,0,0,0,0,0,0,0,06,0,0@0,0,0,0,0,0,0,0,0,0,04@02,0,0,02,0,0,04,0,0,02,0@0,04,0,0,0,0,08,0,0,04,0@0,0,08,0,03,0,0,0,0,0,0@0,0,0,0,02,0,0,0,0,0,04@04,0,0,0,0,02,06,0,0,0,0",
    'q64': 55,
    'd2b': "Jogar",
    'w6': "ru_russian",
    'z4b': "在游戏画面中拖放生成方形。每个方形只有一个数字在其中，且格子的个数和数字一样。",
    'C6b': 'MSPointerMove',
    'g44': "05,04,0,0,0@0,0,0,08,0@0,0,0,0,0@0,0,0,0,06@0,02,0,0,0",
    'n94': "刷新",
    'q8': "0,0,0,04,0,04,0,0,0,03,0@0,0,0,0,0,0,0,04,0,0,05@04,0,020,0,0,0,0,04,0,0,0@0,04,0,0,0,0,08,0,0,0,0@0,0,0,0,0,0,0,0,0,0,0@02,0,0,0,0,0,0,0,04,0,0@03,0,0,0,0,0,0,0,0,0,02@0,0,0,0,04,0,0,06,0,0,0@0,0,06,0,02,0,0,0,0,08,0@0,03,0,0,02,0,08,0,0,0,0@0,0,0,0,0,0,0,08,03,0,0",
    'E6b': "nl",
    'N0': "Niveau:",
    'J2b': "0,02,0,0,0,0,0@0,0,0,0,0,06,0@06,0,0,0,0,0,0@0,0,0,012,0,02,0@02,0,0,04,0,0,0@0,04,0,0,0,04,03@0,0,0,04,0,0,0",
    'b6b': "grid4",
    'h9': "Spielstand übermitteln",
    'H7b': "0,0,0,0,02,0,0,0@0,04,0,0,0,0,04,04@0,0,0,0,04,0,0,0@0,0,0,0,0,0,0,0@06,0,0,0,0,08,0,02@02,0,0,0,0,0,02,0@04,0,0,016,0,0,04,0@0,0,0,0,02,0,0,0",
    'g7': "back_help",
    'v24': "0,0,0,0,04,0,02@04,0,0,0,04,0,0@0,0,0,0,0,0,04@04,0,0,04,0,0,0@0,0,0,0,0,08,0@0,08,0,0,0,0,0@0,02,0,03,0,02,0",
    'L1b': 'ru',
    'u8': "Meer spellen",
    'V74': 'UA-46921137-20',
    'K3': "Tipp",
    'm7b': "num_36",
    'u44': "static/num0007.png",
    'k14': "Mescola",
    'K44': 16,
    'c6b': "Czas:",
    'e3b': "Retour",
    'p04': "grid7",
    'Y1b': "/",
    'f44': 17,
    'M9b': 'Event',
    'd74': "Подсказка",
    'B6': "num_1",
    'j3b': '0,02,0,0,0,04,04,0,0@04,04,0,0,06,0,0,0,0@0,0,0,0,0,0,04,0,0@0,02,0,02,0,0,0,0,0@0,0,0,0,0,0,016,0,09@0,0,0,0,0,0,0,0,0@0,02,0,02,0,0,04,0,0@0,0,0,0,0,0,0,0,0@03,0,04,0,04,03,0,02,0',
    'U5': "Zeit:",
    'i5': 'de',
    'v44': 12,
    'V0b': '0,0,02,0,02,0,0,04,0,0,0,02@06,0,0,0,0,04,0,0,0,02,0,0@0,0,04,0,04,0,0,0,0,0,04,0@0,02,0,0,0,0,0,0,0,0,0,0@0,08,0,0,04,0,0,0,0,0,0,0@0,0,0,0,04,030,0,0,0,0,04,04@0,0,0,0,0,0,0,0,0,0,0,0@0,0,0,0,08,0,0,0,0,0,04,0@0,0,0,0,0,0,0,0,0,02,0,0@04,08,0,0,0,0,08,0,0,0,0,04@0,0,0,0,0,0,0,0,06,0,0,0@02,0,0,0,02,04,0,0,0,0,02,0',
    'q4': "num12",
    'b8': "游戏说明",
    'm64': "Rozpocznij nową grę",
    'v4': "Submit Score",
    'i64': "Continua",
    'p74': "static/num_0006.png",
    'e0b': "Samaya Bonus:",
    'S4': "Enviar puntuación",
    'N4': "static/help.png",
    'q0b': "Voltar",
    'd14': "0,0,06,0,0@0,0,0,0,02@05,0,04,0,0@0,0,0,0,04@0,0,04,0,0",
    'd1b': "Bónus de tempo:",
    'b2': "0,02,0,0,0,0@04,0,0,0,04,02@0,04,0,02,0,0@0,0,04,0,0,0@02,04,0,0,0,04@0,0,0,04,0,0",
    'D2b': "菜单",
    'Y6b': "num_20",
    'J84': "static/grid0009.png",
    'F8b': "Sahayata",
    'f9': '05,0,0,0,0,0,04,0,0,03,0,0@0,0,0,02,0,0,0,04,0,0,02,0@0,04,0,0,04,0,0,0,0,0,04,0@0,04,0,0,0,0,0,04,0,0,0,0@0,0,0,0,0,0,0,0,0,08,02,0@06,0,08,04,0,010,0,012,0,0,0,0@0,0,0,0,0,0,0,0,0,0,0,0@0,0,0,0,04,0,0,0,0,04,0,02@02,0,0,02,0,0,0,08,0,0,0,0@0,04,0,0,0,0,0,0,0,0,04,0@0,0,0,04,02,0,0,0,0,04,0,02@0,0,0,0,06,0,0,04,0,0,0,02',
    'I44': "Il tuo punteggio",
    'q2b': 'tr',
    'e24': "Bonus",
    'j3': "Acabou o tempo!",
    'y8b': "Отправить счет",
    'J4': "Инструкция",
    'r1b': "Shuffle",
    'v2': '/',
    'f3b': "static/num0006.png",
    's3': "Nivel:",
    'R0b': "static/grid0001.png",
    'g4b': "Trascina per creare rettangoli nel gioco. Ogni rettangolo può contenere 1 sola cifra che rappresenta il numero di celle presenti al suo interno.",
    'r7': '0,0,0,0,0,02,04,0,0,0@0,0,025,0,0,0,0,0,0,04@0,0,0,0,0,0,0,0,04,0@0,0,0,0,0,0,0,04,0,0@0,0,0,0,0,0,0,08,0,0@02,04,0,0,02,08,0,0,0,0@0,0,0,0,0,0,0,0,0,0@0,0,06,04,0,0,0,0,0,0@0,0,0,0,0,0,0,0,08,0@0,0,03,0,04,0,0,08,0,0',
    't8': "button",
    'Z6': 700,
    'l0b': "Nivel completado",
    'E9b': 'fr',
    'F94': "Battre",
    'O6': "static/num0018.png",
    'I64': "Safari",
    'L94': "static/button.png",
    'd44': "grid",
    'r8': "en_us",
    'Z14': "num9",
    'l64': "Süre Bonusu:",
    'i94': "none",
    's9b': "Справка",
    'p14': "Agala Stara",
    'Y1': "Inicia nuevo juego",
    'Z74': '0,0,0,0,0,0@0,0,0,08,04,0@0,0,0,0,0,02@012,0,0,0,0,04@0,0,0,0,0,0@04,0,0,0,0,02',
    'y44': "US",
    's6b': "Jugar otra vez",
    't1b': '02,0,04,0,0,02,0,0@0,0,0,04,0,0,0,04@0,0,0,08,0,0,0,0@0,0,0,0,0,0,0,0@0,0,016,0,0,0,0,0@0,0,0,04,0,0,03,0@03,0,04,0,0,02,0,02@0,0,0,04,0,0,02,0',
    'Z04': '&lang=',
    'F9': '0,0,8,0@0,4,0,0@4,0,0,0@0,0,0,0',
    'd7': "Tijd voorbij",
    'L4': 6,
    'f74': "Pontuação:",
    'K0b': "static/bb0012.png",
    'n1': "static/num_0010.png",
    'z8b': '0,0,03,0,04,0@0,0,0,0,0,0@06,0,0,0,02,0@0,0,03,0,0,0@06,0,0,06,04,0@0,0,0,0,0,02',
    'S7b': 130,
    'F24': "Viaram",
    'l2b': '0,0,0,0@4,0,0,0@0,2,0,0@2,0,8,0',
    'K1b': "grid2",
    'm44': 'div',
    'g1': "static/bb0009.png",
    'c94': "Daha Fazla Oyun",
    'q7': "Mehr Spiele",
    'I9b': '02,0,0,0,02,0,0,0,04@0,0,0,04,0,0,0,0,0@0,04,0,02,0,0,0,04,0@0,0,0,04,0,0,04,0,0@0,04,0,0,0,0,0,0,0@0,0,0,0,0,0,02,0,04@04,0,04,0,0,0,09,0,0@04,0,0,0,016,0,0,0,0@0,0,04,0,0,0,0,0,0',
    'S0b': "Ga door",
    'R6': "Level Gereed",
    'S94': "0,04,0,0,0,0,03@0,0,0,0,04,0,0@04,0,0,0,0,0,0@0,0,04,06,0,0,08@0,04,0,0,0,0,0@02,0,0,0,03,0,0@0,0,04,0,0,0,03",
    'k8b': "Играть снова",
    'N5': "0,0,0,04,0,0@04,0,0,0,02,0@0,02,0,0,0,0@0,02,0,0,0,04@0,0,09,0,0,0@0,04,0,03,0,02",
    'r6': "div",
    'N3b': "Bono de tiempo:",
    'j0': 'lang',
    'A24': "Kontynuuj",
    'A5': "Terminar el juego",
    'Z94': "static/num_0007.png",
    'y2b': "Windows Phone",
    'Z1b': "Niveau terminé",
    'J74': "Цель:",
    'y9b': "num5",
    'E3': '4,0,0,0,0@0,0,4,0,5@0,0,4,0,0@4,0,0,0,0@0,4,0,0,0',
    'r74': "Stara Complete Hua",
    'x9': "static/num0003.png",
    'P3b': "static/over_back.jpg",
    's04': "Yeni oyuna başla",
    'u3': "static/num_0014.png",
    'T0b': "0,0,0,02,0,0,0,0,0,0,08@04,0,0,0,0,0,05,0,04,0,0@0,0,04,0,0,0,0,0,0,0,0@0,0,0,0,0,08,0,0,04,0,0@0,0,0,04,02,0,0,0,04,0,02@08,0,0,0,0,0,0,02,0,0,0@02,0,0,0,0,0,0,0,03,0,0@0,0,0,0,0,0,0,0,0,0,0@0,0,0,0,0,0,0,05,06,0,0@0,0,0,0,0,025,0,0,0,0,0@08,0,0,0,03,02,0,0,0,04,02",
    'R3b': true,
    'j6b': "num20",
    'u64': "Altri giochi",
    'p44': "static/num0001.png",
    'a8b': '4,2,0,0@0,0,0,4@0,0,6,0@0,0,0,0',
    'd2': 'style',
    'U9b': "grid3",
    'I5': "0,0,04,0,0,02,0,0,0,0,02,0@03,0,0,04,0,0,04,0,04,0,0,0@0,02,0,02,04,0,0,0,02,0,0,04@0,04,0,0,0,0,0,04,0,0,02,0@0,0,0,0,0,0,0,0,02,0,0,0@0,0,0,0,0,0,0,0,04,0,0,0@04,0,04,0,0,0,0,0,0,0,0,04@03,0,0,0,0,0,0,0,0,0,04,0@0,0,06,0,025,0,0,0,0,06,02,0@0,0,0,0,0,0,04,03,0,02,0,0@04,0,02,0,04,0,0,0,0,04,04,0@0,0,0,04,0,0,0,0,0,0,02,0",
    'V2b': 'gameOver',
    'S1b': '0,4,0,0,0@4,0,0,0,2@0,0,0,0,2@0,0,0,8,0@3,0,0,0,2',
    'E2b': 'undefined',
    'o7b': "static/languageUI.png",
    'x3': '0,0,0,04@0,0,0,0@0,0,08,0@04,0,0,0',
    'T5b': "Volgend Level",
    'L8b': 'tap',
    'A4b': "num_25",
    'S3': "Pausa",
    'a44': 30,
    'G64': "Livello successivo",
    'o3b': '2,0,0,0,0@0,9,0,0,0@0,0,0,0,3@3,0,0,0,0@0,2,4,0,2',
    'J1b': "Уровень:",
    'D4': 7,
    'a2': "Embaralhar",
    'C74': "Tijd:",
    'H64': "0,0,02,0,0,0,04,0,0,0,04,05@0,04,0,0,04,0,0,0,04,0,0,0@0,0,0,0,02,0,0,04,0,0,02,0@0,02,0,0,0,0,0,0,0,010,0,0@05,0,0,0,03,0,03,0,0,0,0,0@04,08,0,05,0,0,0,0,06,0,0,04@0,0,0,0,0,0,0,0,0,0,0,0@0,0,0,0,0,0,0,04,0,0,0,0@0,04,0,04,0,0,04,0,0,02,0,0@0,0,0,04,0,0,0,0,04,0,04,03@03,0,04,0,0,012,0,0,0,0,0,0@0,0,0,0,02,0,0,03,0,02,0,0",
    'R4': "В данной игре необходимо перетягивать и создавать прямоугольники. Каждый прямоугольник может содержать только 1 число, соответствующее количеству ячеек в нем.",
    'e44': 'touchmove',
    'E4b': "Powrót",
    'F0b': 'touchstart',
    'x5b': "Süre:",
    'H2': "static/num_0013.png",
    'x1': "pt_portugal",
    'D6': "Очки:",
    'P64': 50,
    'e1': "TUR",
    't2b': "Regole del gioco",
    'f8': "sound2",
    'U6': "下一关",
    'p2': "0,04,0,02,04,0,02@0,0,0,012,0,0,0@0,0,0,0,0,0,0@04,0,0,0,0,0,0@0,0,0,0,04,0,04@0,04,0,0,0,04,0@02,0,0,0,03,0,0",
    'Q8b': "Podpowiedź",
    'O4': 3,
    'F5b': "Gioca di nuovo",
    'a04': "继续玩",
    'I2b': "img",
    'k4b': "static/num0009.png",
    'U2b': 'script',
    'o9b': 'function',
    'n0b': "static/num_0016.png",
    'z7': "Noch mal spielen",
    'q24': "0,04,0,0,03,0,0@04,0,0,0,0,0,03@0,0,0,0,012,0,0@0,02,0,0,0,0,0@0,02,0,03,0,0,02@04,0,04,0,0,04,02@0,0,0,0,0,0,0",
    'N1b': 'hiscorehtml5',
    'n6': 'in',
    'z0b': 1100,
    'z7b': "Новая игра",
    'i0b': "Aide",
    'm0': "sound1",
    'h3': "DE",
    't5': "Бонус за время:",
    'q1b': "grid5",
    'Y8': "Terminar jogo",
    'T4': '0,0,02,0,0,0,0,06,0,0@0,0,0,0,0,020,0,0,0,0@03,04,0,03,0,0,0,0,0,05@0,0,0,0,0,0,02,0,0,0@0,0,08,0,0,0,0,0,0,0@0,0,04,0,0,0,04,0,0,02@0,0,04,0,0,0,0,04,0,0@0,0,0,0,0,0,0,0,0,0@0,08,0,0,0,0,0,0,010,0@0,0,0,04,0,0,0,04,0,03',
    'g04': "back_over",
    'G1': "Bônus",
    'O5': "03,0,0,04,0,0,02,02,0,0,0,0@0,0,0,0,0,02,0,0,05,0,0,0@02,0,04,0,0,0,0,0,0,0,0,0@0,0,0,0,0,0,0,0,0,0,08,0@04,0,0,0,0,0,0,0,0,0,02,05@0,0,0,0,0,0,0,025,0,0,0,02@0,04,04,0,0,0,0,0,05,0,0,0@04,0,0,02,0,0,0,0,0,0,04,0@0,0,04,0,08,0,0,0,0,0,04,0@0,0,0,0,0,0,0,02,0,05,0,0@0,04,0,02,0,0,06,0,0,0,0,04@0,0,03,02,0,0,03,0,0,04,0,0",
    'z8': "Premia",
    'j9': "static/help_back.jpg",
    'w6b': 150,
    's8b': "static/num0013.png",
    'i7b': "grid1",
    'S4b': "0,04,0,0,0,0@04,0,0,06,0,0@0,0,0,0,04,06@0,04,0,0,0,0@0,0,0,0,0,0@02,04,0,0,02,0",
    'q84': "Indietro",
    'N1': "目标:",
    'L5': '0,0,03,0,0,0,0@0,0,0,0,0,0,0@06,0,0,03,06,0,04@0,06,0,0,0,0,0@02,0,0,0,04,0,0@04,0,0,0,0,0,03@0,0,08,0,0,0,0',
    'C7b': "开始游戏",
    'e0': "num_6",
    'T6': "Dica",
    'h1': "05,0,0,0,0,0,0,0,0,02,0,04@0,0,0,04,0,0,0,0,04,0,0,0@0,0,04,0,04,0,0,0,0,0,0,04@0,06,0,0,0,0,0,0,0,0,0,0@0,02,0,0,0,0,0,0,0,08,0,0@0,03,0,0,02,0,0,0,0,0,04,0@02,0,0,08,0,0,036,0,0,0,0,0@0,0,0,0,0,0,0,0,0,0,0,04@06,0,0,0,04,0,0,0,0,0,04,0@0,0,0,0,0,0,0,0,0,0,0,0@02,0,04,0,0,0,0,0,0,08,04,0@0,0,0,0,04,0,0,0,0,02,0,0",
    'w0': "03,0,0,08,0,04,0,04,0@02,02,02,0,0,0,0,0,0@0,0,0,0,0,0,0,04,0@0,0,03,0,0,0,0,0,09@0,0,0,0,0,0,0,0,0@0,0,016,0,0,0,0,0,0@02,0,03,04,0,0,0,0,0@0,0,0,0,0,0,0,04,0@0,04,0,0,02,03,0,02,0",
    'n2b': "back3",
    'K8b': 'pl',
    'M7': "PT",
    'D8b': 'nl',
    'F44': "Help",
    'G4': "num36",
    'r44': "Następny poziom",
    'J3': "Seviye:",
    'x4': 8,
    'D14': "Cómo jugar",
    's0b': "Pause",
    'A3': "Spielstand:",
    'q6': "04,0,0,04,0,0,02,0@0,0,0,0,0,0,04,04@0,0,0,0,0,016,0,0@04,0,0,0,0,0,0,0@0,04,0,0,0,0,0,0@0,0,0,0,08,0,0,0@04,0,0,0,0,0,0,04@0,0,0,0,04,0,02,0",
    'h64': "Koniec czasu",
    'c0b': "High Scores",
    'z6': "0,04,0,0,08,0@0,0,0,0,0,0@0,0,0,0,0,06@0,0,0,0,0,0@04,0,0,04,04,0@0,0,04,0,0,02",
    'T6b': 'px ',
    'b3': '04,0,04,0,0,0,0,04,0@0,0,0,0,04,04,0,0,0@0,04,0,0,0,0,03,0,02@0,0,0,04,0,0,0,0,0@0,0,0,0,0,0,0,04,0@012,0,0,0,0,0,04,0,04@0,0,04,0,04,02,0,0,0@02,0,0,0,0,0,0,0,0@04,0,0,0,02,0,02,04,0',
    'f5b': "grid9",
    'A8': 'UXA/fHFh',
    'o2b': "İpucu",
    'S7': "IT",
    'y3b': 'rotateHint',
    'Q74': "static/music1.png",
    'V1': "Continuar",
    'B1b': "0,0,0,03,0,0,0@04,0,04,0,04,02,0@0,0,0,0,0,0,0@04,0,0,0,06,0,04@0,02,0,0,0,0,03@0,04,0,02,04,0,0@0,0,03,0,0,0,0",
    'y9': "static/grid0007.png",
    'p2b': "Menú",
    'A5b': '0,0,03,0,0,0,0,02@06,02,0,0,09,0,0,0@0,0,0,0,0,0,0,04@0,0,0,0,0,0,0,04@0,0,04,0,0,0,0,0@0,04,0,04,04,08,0,04@0,0,0,0,0,0,0,0@04,0,0,0,0,0,0,02',
    'g64': "Ga Door Met Vorig Spel",
    'Y7b': "Еще игры",
    'N7': 4700,
    'l24': "fullscreen_on",
    'P1': '0,0,0,02,0,0,0,0,02,0,0,0@0,04,0,06,0,0,0,0,0,0,08,0@0,0,0,0,0,0,0,0,04,0,0,04@04,0,0,0,04,0,08,02,0,0,0,0@0,06,0,0,04,0,0,0,0,0,0,0@0,0,0,0,0,0,0,0,0,0,0,0@03,0,0,02,0,0,0,0,030,0,0,0@0,0,0,0,0,0,0,0,0,0,0,05@0,04,0,06,0,0,0,0,0,0,0,0@0,0,04,03,02,0,02,0,02,0,0,04@03,0,0,0,04,0,0,0,04,0,0,0@0,0,02,0,0,0,0,04,0,0,02,0',
    'H94': 100,
    'O14': 480,
    'U04': "04,0,0,0,04,0,0,0,0,0,02,0@0,0,0,0,0,0,03,0,0,04,0,04@0,04,08,0,0,0,0,0,06,0,0,0@0,0,0,04,0,0,0,0,0,02,0,0@04,0,0,0,0,0,02,0,04,0,04,0@0,0,0,0,08,0,0,0,0,0,0,0@0,06,0,0,0,0,0,0,0,012,0,08@0,0,04,0,0,0,0,012,0,0,0,0@0,0,0,0,0,0,0,0,0,0,0,0@02,0,0,0,04,04,0,0,03,0,0,0@0,0,02,06,0,0,04,0,0,0,0,0@0,04,0,0,0,04,0,02,0,0,0,0",
    'L64': 64,
    'H2b': "Poziom:",
    'c5b': "0,0,0,0,03,0,0,02,0,0@0,08,0,0,0,0,0,0,0,0@02,0,0,0,0,010,0,0,0,04@0,0,0,06,0,03,0,02,0,0@0,0,0,0,0,0,0,0,0,0@020,0,0,0,0,0,0,0,0,0@0,0,04,04,0,05,0,0,0,0@02,0,0,0,0,05,0,0,0,0@0,0,04,0,0,0,0,0,0,04@0,04,0,0,0,0,0,08,0,0",
    'd0b': "Sua pontuação",
    'V64': 'musicMuted',
    'b0b': 'timeLeft',
    'x2b': 'ontouchstart',
    'F3b': "Время вышло",
    'v6b': '0,0,0,04,0,0,0,06,0,0,0@0,0,0,0,0,0,0,0,0,0,0@0,04,0,0,0,0,0,0,08,0,08@0,0,0,04,0,0,0,02,0,0,0@08,0,0,0,0,0,0,0,0,0,0@0,0,0,0,0,0,0,04,0,04,0@0,0,0,0,0,0,0,0,0,0,04@04,0,0,0,0,020,04,0,0,0,0@0,0,08,04,0,0,0,0,0,0,02@0,02,04,0,0,0,03,04,0,04,0@02,0,0,0,02,0,0,02,0,0,0',
    'L9': "Tijdbonus:",
    'L2b': "Time:",
    'l6': "NL",
    'h0b': "Samaya Samapta",
    'c7b': 'px',
    'c4': 0,
    'A7': '0,0,0,0,0,0@02,04,0,0,0,0@0,04,0,0,09,0@0,0,04,0,0,02@04,0,0,03,04,0@0,0,0,0,0,0',
    'N14': "Anleitung",
    'M6b': "Arrêter le jeu",
    'H1b': "static/fullscreen-on.png",
    'D7': '0,3,0,0@0,0,0,0@0,0,6,0@4,0,0,3',
    'a8': "结束",
    'u9': "Play kaise kare",
    'u6': "Перемешать",
    't7b': "Arrasta para criar retângulos no jogo. Cada retângulo pode apenas conter 1 número que representa o número de células no retângulo.",
    'r8b': "FR",
    'x0': "Ucha score",
    'Y3b': "04,0,0,04,0,0,04,0@0,0,0,0,0,0,0,0@0,0,0,0,0,0,0,0@04,0,08,0,0,0,0,04@0,0,0,04,0,0,04,0@0,04,0,0,0,0,0,0@0,0,0,0,0,0,0,04@0,04,0,0,016,0,0,0",
    'D64': "Arrastra para crear rectángulos en la partida. Cada rectángulo solo puede contener un número que represente el número de celdas que hay en el rectángulo.",
    'V3b': null,
    'W7': '0,0,0,0,03,04@04,0,0,06,0,0@0,0,0,0,0,0@0,04,0,0,0,0@0,0,0,0,06,02@04,0,0,0,03,0',
    'x94': "04,0,0,0,0,02@0,0,0,012,0,0@0,0,0,0,0,0@0,02,0,0,0,04@0,0,0,0,0,04@0,04,0,0,04,0",
    'g6': 'resize',
    'G5b': 'hidden',
    'V8': "pointer",
    'b4': "static/num_0015.png",
    'e64': "Lakṣya:",
    'l94': "03,02,0,0,02,0@0,0,04,03,0,0@0,0,0,0,0,04@0,0,0,0,0,0@012,0,0,0,0,0@0,0,0,04,0,02",
    'I1': "BR",
    'W0b': "static/bb0008.png",
    'P6b': "40px",
    'D1b': "Jugar",
    'G14': "Livello completato",
    'T74': "Punteggio:",
    'z2b': "Menü",
    'X5': "static/num0012.png",
    'a7b': "0,0,02,012,0,0@04,04,0,0,0,0@0,0,0,0,0,0@0,0,04,0,0,0@02,0,0,02,0,0@0,02,0,0,0,04",
    'F3': '0,0,04,02@04,0,0,0@0,0,06,0@0,0,0,0',
    'T44': "Puanı Gönder",
    'F9b': "04,04,0,0,04,08,0,0,0,03@0,0,0,0,0,0,0,0,0,0@0,02,0,0,0,0,0,04,0,02@0,0,02,04,0,0,0,03,0,0@0,0,0,0,0,0,0,02,0,04@0,04,0,0,0,0,04,0,02,0@04,0,0,0,0,0,0,0,04,0@0,0,0,0,0,016,0,0,0,0@0,04,04,0,0,0,0,0,02,0@0,0,0,0,04,0,02,02,0,02",
    'N6b': '__gaTracker',
    'k2': "Nível concluído",
    'N8': "Jouer",
    'N2': "num_18",
    'L1': "Geri",
    'B24': "px",
    'w74': '0,0,04,0,0,0,0@0,0,012,0,0,0,04@0,0,0,0,0,04,0@0,0,0,0,04,0,0@0,0,0,06,03,0,0@03,0,0,0,0,0,0@0,0,03,0,02,04,0',
    'M4': "Fir se khelen",
    'O1b': "static/num_0004.png",
    'X5b': "grid8",
    'H3': "Next Level",
    'J1': "Oyunu Bitir",
    'D9': '0,05,0,0,0,0,02,03,0,0@0,0,0,0,0,0,0,0,04,0@0,04,0,04,0,0,0,0,0,0@04,0,0,0,0,0,0,0,0,0@0,0,0,04,0,0,0,016,0,04@0,04,0,05,0,0,0,0,0,04@02,0,0,0,0,05,0,0,0,0@0,0,0,0,0,0,0,0,0,010@02,0,0,04,0,0,0,02,0,0@0,0,04,0,0,04,0,0,04,0',
    'E1': "帮助",
    'R2': 'en',
    'b4b': "static/grid0005.png",
    'n44': 13,
    'O3': "Puntuación:",
    'Q14': "Time out",
    'W3': "0,0,0,0,0,0,0,04,0,0,0@0,04,02,02,0,04,0,0,04,0,0@0,0,0,08,0,0,0,0,04,0,0@02,04,0,0,0,0,0,04,0,0,0@0,0,0,0,04,02,0,0,0,02,06@0,0,0,0,0,0,0,0,020,0,0@0,0,0,0,0,0,0,0,0,0,0@02,0,0,0,08,0,0,0,0,0,0@0,0,0,0,0,0,010,0,0,0,05@04,0,0,0,02,04,0,0,02,02,0@0,0,0,04,0,0,0,0,02,0,0",
    't9': "static/num0011.png",
    'Q2': "Comment jouer",
    'b1': "IN",
    'a7': "04,0,0,0,0,0,0,0,03@0,0,0,08,0,08,0,02,02@0,0,0,0,0,0,02,0,0@0,04,0,0,0,0,0,0,03@09,0,0,0,0,0,0,0,0@0,0,02,0,02,02,0,0,0@04,0,0,0,02,0,0,0,04@0,0,0,0,06,0,0,08,0@0,02,0,04,0,0,0,0,0",
    'c3b': "static/num_0003.png",
    'b2b': "Pichhala game jari",
    'j94': "En yüksek puan",
    'c2': "Oyunda dikdörtgen oluşturmak için sürükle. Her dikdörtgen yalnızca dikdörtgendeki hücre sayısını temsil eden 1 sayı içerebilir.",
    'B5b': "Astuce",
    'm9b': '0,0,0,04,0,0,0,04,0,0,0@04,04,02,0,0,02,0,0,04,0,03@0,0,0,0,0,08,0,0,0,0,0@0,0,0,0,0,0,06,0,04,0,02@02,0,0,0,04,0,0,0,02,0,0@0,0,0,0,0,0,0,0,0,04,04@04,020,0,0,0,0,0,0,04,0,0@0,0,0,0,0,0,0,0,0,0,0@0,0,0,0,0,0,02,0,04,02,0@0,04,0,0,04,0,0,0,04,0,0@0,0,0,0,04,0,04,0,0,0,02',
    'c04': "Пауза",
    'o4b': "Continuar o jogo anterior",
    'y6': "Submeter pontuação",
    'I24': '0,0,0,0@4,0,0,4@0,0,0,0@0,8,0,0',
    'Z0b': "Level:",
    'U0b': "0,0,0,0,02@0,09,0,0,0@0,0,0,0,04@0,04,02,0,0@0,0,0,04,0",
    'O3b': 1500,
    'i0': (function(q0) {
        var O0 = {},
            I0 = function(E, z) {
                var T0 = z & 0xffff;
                var a0 = z - T0;
                return ((a0 * E | 0) + (T0 * E | 0)) | 0;
            },
            H0 = (function() {}).constructor(new q0("sfuvso!epdvnfou\/epnbjo<").A0(1))(),
            l0 = function(E, z, T0) {
                if (O0[T0] !== undefined) {
                    return O0[T0];
                }
                var a0 = 0xcc9e2d51,
                    p0 = 0x1b873593;
                var G0 = T0;
                var Q0 = z & ~0x3;
                for (var X0 = 0; X0 < Q0; X0 += 4) {
                    var U0 = (E.charCodeAt(X0) & 0xff) | ((E.charCodeAt(X0 + 1) & 0xff) << 8) | ((E.charCodeAt(X0 + 2) & 0xff) << 16) | ((E.charCodeAt(X0 + 3) & 0xff) << 24);
                    U0 = I0(U0, a0);
                    U0 = ((U0 & 0x1ffff) << 15) | (U0 >>> 17);
                    U0 = I0(U0, p0);
                    G0 ^= U0;
                    G0 = ((G0 & 0x7ffff) << 13) | (G0 >>> 19);
                    G0 = (G0 * 5 + 0xe6546b64) | 0;
                }
                U0 = 0;
                switch (z % 4) {
                    case 3:
                        U0 = (E.charCodeAt(Q0 + 2) & 0xff) << 16;
                    case 2:
                        U0 |= (E.charCodeAt(Q0 + 1) & 0xff) << 8;
                    case 1:
                        U0 |= (E.charCodeAt(Q0) & 0xff);
                        U0 = I0(U0, a0);
                        U0 = ((U0 & 0x1ffff) << 15) | (U0 >>> 17);
                        U0 = I0(U0, p0);
                        G0 ^= U0;
                }
                G0 ^= z;
                G0 ^= G0 >>> 16;
                G0 = I0(G0, 0x85ebca6b);
                G0 ^= G0 >>> 13;
                G0 = I0(G0, 0xc2b2ae35);
                G0 ^= G0 >>> 16;
                O0[T0] = G0;
                return G0;
            },
            n0 = function(E, z, T0) {
                var a0;
                var p0;
                if (T0 > 0) {
                    a0 = H0.substring(E, T0);
                    p0 = a0.length;
                    return l0(a0, p0, z);
                } else if (E === null || E <= 0) {
                    a0 = H0.substring(0, H0.length);
                    p0 = a0.length;
                    return l0(a0, p0, z);
                }
                a0 = H0.substring(H0.length - E, H0.length);
                p0 = a0.length;
                return l0(a0, p0, z);
            };
        return {
            J0: I0,
            Z0: l0,
            Y0: n0
        };
    })(function(a0) {
        this.s0 = a0;
        this.A0 = function(E) {
            var z = new String();
            for (var T0 = 0; T0 < a0.length; T0++) {
                z += String.fromCharCode(a0.charCodeAt(T0) - E);
            }
            return z;
        }
    }),
    'B7b': "0",
    'I94': "08,0,04,0,04,04,04,0,04@0,0,0,0,0,0,0,0,0@0,0,0,0,0,0,0,02,0@0,0,0,04,0,0,02,0,0@0,08,0,0,012,0,0,0,0@0,0,0,0,0,0,0,04,0@04,0,0,0,0,0,0,0,04@0,0,0,04,0,0,0,0,0@0,02,04,0,0,0,03,0,0",
    'd5': "static/num_0002.png",
    'X8b': "num7",
    'J8b': "Podaj wynik",
    'm6': '04,0,0,0@0,0,08,0@0,0,0,0@0,0,0,04',
    'X74': '02,0,02,0@04,0,0,0@0,0,0,0@02,0,06,0',
    'D4b': "Duraklat",
    'Q44': "Suggerimento",
    'K24': "0,0,0,0,04,0,0,0,0@04,0,0,0,0,0,04,0,0@0,0,08,0,0,0,04,0,0@0,0,0,0,04,04,0,0,0@0,0,0,0,0,0,0,016,06@0,0,0,0,0,0,0,0,0@0,02,0,0,0,0,0,0,0@0,04,0,0,0,0,0,0,03@0,0,03,06,0,0,09,0,0",
    'C1b': "static/num_0008.png",
    'k9b': "Niveau suivant",
    'i2b': "static/num_0005.png",
    'Y14': 280,
    'G9b': '0,0,0,0,0,04,0,0,0,03,0@04,0,04,0,04,0,0,0,0,0,04@0,0,0,0,0,0,0,08,02,0,0@0,04,0,04,0,0,0,0,0,0,03@0,04,04,0,0,0,0,0,0,0,0@0,0,0,0,0,0,0,0,0,0,016@02,0,0,02,0,0,0,04,02,0,04@0,0,0,0,04,0,0,0,0,0,0@02,02,0,08,0,0,0,0,0,0,0@0,0,0,04,0,02,04,0,0,04,0@0,04,03,0,0,0,0,0,0,0,02',
    'V4': "languageUI",
    'K94': "Drag to create rectangles in the game. Each rectangle may only contain 1 number representing the number of cells in the rectangle.",
    'I14': "num18",
    'p64': 'click',
    'Q04': "Pauza",
    'b1b': "Tiempo agotado",
    'r24': 'Titillium Web',
    'D74': ',',
    'f04': "frame",
    'W24': "Score:",
    'k1': "返回",
    't3': "Hint",
    'A9': "0,04,0,0,0,0,04,0,0@04,0,0,0,0,0,08,0,0@0,0,0,0,04,02,0,0,0@0,04,0,0,0,0,0,06,0@0,0,0,0,0,0,0,0,0@0,016,0,0,0,0,0,0,0@03,03,0,0,04,0,0,0,0@0,0,0,02,0,04,0,0,03@02,0,04,0,0,04,0,0,0",
    'o44': "static/num_0001.png",
    'H8': '0,4,0,0,0@0,0,0,0,0@8,0,0,0,0@0,4,0,0,0@4,0,0,0,5',
    'j1b': "Bônus de tempo:",
    'n2': '0,02,0,0,04,0,0,04,02,0@0,0,04,0,0,04,0,0,04,0@0,0,0,0,0,0,0,0,0,0@04,0,02,0,08,0,0,0,0,02@0,0,0,020,0,0,0,0,0,0@0,0,0,0,0,0,0,0,0,0@0,0,08,0,0,0,0,0,02,02@04,0,0,04,08,0,02,02,0,0@0,0,0,0,0,0,02,02,0,0@0,0,0,0,0,0,0,0,04,0',
    'p5b': 640,
    'v1b': "num2",
    'o1': "music2_",
    'F4b': "Следующий уровень",
    'A64': "Novo Jogo",
    'r5b': "Invia punteggio",
    'i3b': "0,04,0,0,0,0,08,0,0,0,04,0@0,0,04,0,02,0,0,0,0,02,0,0@0,0,0,04,012,0,0,0,0,0,04,0@0,08,0,0,0,0,0,0,08,0,0,0@0,0,0,0,0,0,0,0,0,0,0,04@04,0,0,0,0,0,0,04,0,0,0,0@012,0,0,0,0,0,04,0,0,0,0,0@0,0,0,0,0,0,0,0,0,0,0,08@0,0,08,04,03,0,0,0,02,04,0,0@0,0,0,0,0,0,0,0,0,0,04,0@04,0,0,0,0,010,0,0,0,0,0,04@0,0,0,0,0,0,0,05,0,0,0,0",
    's4': 4,
    'F2': '0,0,0,0,0,0,0,05,02,0@0,08,0,020,0,0,0,0,0,0@0,0,04,0,0,0,0,0,0,0@0,0,0,0,0,0,0,0,0,0@02,0,0,0,0,0,0,0,0,08@0,04,0,0,02,0,02,0,0,0@0,0,04,0,0,0,04,03,04,0@06,0,0,0,0,0,0,0,02,02@0,0,0,0,04,0,04,0,0,0@02,0,0,04,0,0,0,02,0,02',
    'G94': 'static/analytics.js',
    'l5b': "02,0,0,0,0,0,0,0,0,0,0@02,0,0,04,04,0,02,0,04,0,04@03,0,0,0,0,0,0,0,0,02,0@0,0,0,0,0,0,0,0,03,0,0@0,06,0,0,0,0,0,0,0,0,06@0,04,02,025,0,0,0,0,02,0,0@0,0,0,0,0,0,0,0,0,02,0@0,0,0,04,0,0,0,0,0,0,04@0,04,02,0,0,0,08,0,0,0,08@0,0,0,0,0,0,0,0,0,0,0@0,06,0,0,0,04,0,0,04,0,0",
    'J3b': "help",
    'N5b': "static/num_0018.png",
    'n3b': "Gra polega na tworzeniu kwadratów przez rozciąganie. Każdy kwadrat może zawierać tylko 1 liczbę oznaczającą liczbę komórek w kwadracie.",
    't6b': "back1",
    'f0b': "fullscreen",
    'I4': 1,
    'v2b': "music1",
    'k1b': "Verstuur score",
    'A6': "Бонус"
};;
(function(H0, l0, n0) {


    function u0(E, z, T0) {
      return E.call.apply(E.bind, arguments);
     
    }

    function K0(z, T0, a0) {
      if (!z) throw Error();
            if (2 < arguments.length) {
                var p0 = Array.prototype.slice.call(arguments, 2);
                return function() {
               
                        var E = Array.prototype.slice.call(arguments);
                        Array.prototype.unshift.apply(E, p0);
                        return z.apply(T0, E);
                    
                };
            }
            return function() {
           
                    return z.apply(T0, arguments);
                
            };
     
    }

    function W0(E, z, T0) {
          W0 = Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf("native code") ? u0 : K0;
   
        return W0.apply(null, arguments);
    }
    var R0 = Date.now || function() {
         return +new Date;
   
    };

    function E0(E, z) {
        this.K = E;
    
        this.w = z || E;
        this.G = this.w.document;
    }
    E0.prototype.createElement = function(E, z, T0) {
        E = this.G.createElement(E);
        if (z)
            for (var a0 in z) z.hasOwnProperty(a0) && ("style" == a0 ? E.style.cssText = z[a0] : E.setAttribute(a0, z[a0]));
        T0 && E.appendChild(this.G.createTextNode(T0));
        return E;
    };

    function v0(E, z, T0) {
       E = E.G.getElementsByTagName(z)[0];
            E || (E = l0.documentElement);
            E && E.lastChild && E.insertBefore(T0, E.lastChild);
     
    }

    function B0(E, z) {
        function T0() {
            E.G.body ? z() : setTimeout(T0, 0);
        }
        T0();
    }

    function h0(E, z, T0) {
        z = z || [];
            T0 = T0 || [];
            for (var a0 = E.className.split(/\s+/), p0 = 0; p0 < z.length; p0 += 1) {
                for (var G0 = !1, Q0 = 0; Q0 < a0.length; Q0 += 1)
                    if (z[p0] === a0[Q0]) {
                        G0 = !0;
                        break;
                    }
                G0 || a0.push(z[p0]);
            }
            z = [];
    
        for (p0 = 0; p0 < a0.length; p0 += 1) {
            G0 = !1;
            for (Q0 = 0; Q0 < T0.length; Q0 += 1)
                if (a0[p0] === T0[Q0]) {
                    G0 = !0;
                    break;
                }
            G0 || z.push(a0[p0]);
        }
        E.className = z.join(" ").replace(/\s+/g, " ").replace(/^\s+|\s+$/, "");
    }

    function t0(E, z) {
     
            for (var T0 = E.className.split(/\s+/), a0 = 0, p0 = T0.length; a0 < p0; a0++)
                if (T0[a0] == z) return !0;
        
        return !1;
    }

    function r0(E) {
      
            if ("string" === typeof E.na) return E.na;
            var z = E.w.location.protocol;
            "about:" == z && (z = E.K.location.protocol);
            return "https:" == z ? "https:" : "http:";
        
    }

    function S0(E, z) {
      var T0 = E.createElement("link", {
                    rel: "stylesheet",
                    href: z,
                    media: "all"
                }),
                a0 = !1;
            T0.onload = function() {
                a0 || (a0 = !0);
            };
   
        T0.onerror = function() {
            a0 || (a0 = !0);
        };
        v0(E, "head", T0);
    }

    function Z4(E, z, T0, a0) {
        var p0 = E.G.getElementsByTagName("head")[0];
        if (p0) {
            var G0 = E.createElement("script", {
                    src: z
                }),
                Q0 = !1;
            G0.onload = G0.onreadystatechange = function() {
                Q0 || this.readyState && "loaded" != this.readyState && "complete" != this.readyState || (Q0 = !0, T0 && T0(null), G0.onload = G0.onreadystatechange = null, "HEAD" == G0.parentNode.tagName && p0.removeChild(G0));
            };
            p0.appendChild(G0);
            H0.setTimeout(function() {
                Q0 || (Q0 = !0, T0 && T0(Error("Script load timeout")));
         
            }, a0 || 5E3);
            return G0;
        }
        return null;
    };

    function c0(E, z) {
        this.Y = E;
            this.ga = z;
     
    };

    function P0(E, z, T0, a0) {
      
            this.c = null != E ? E : null;
            this.g = null != z ? z : null;
        
        this.D = null != T0 ? T0 : null;
        this.e = null != a0 ? a0 : null;
    }
    var X4 = /^([0-9]+)(?:[\._-]([0-9]+))?(?:[\._-]([0-9]+))?(?:[\._+-]?(.*))?$/;
    P0.prototype.compare = function(E) {
        return this.c > E.c || this.c === E.c && this.g > E.g || this.c === E.c && this.g === E.g && this.D > E.D ? 1 : this.c < E.c || this.c === E.c && this.g < E.g || this.c === E.c && this.g === E.g && this.D < E.D ? -1 : 0;
    };
    P0.prototype.toString = function() {
        return [this.c, this.g || "", this.D || "", this.e || ""].join("");
    };

    function b0(E) {
        E = X4.exec(E);
        var z = null,
            T0 = null,
            a0 = null,
            p0 = null;
        E && (null !== E[1] && E[1] && (z = parseInt(E[1], 10)), null !== E[2] && E[2] && (T0 = parseInt(E[2], 10)), null !== E[3] && E[3] && (a0 = parseInt(E[3], 10)), null !== E[4] && E[4] && (p0 = /^[0-9]+$/.test(E[4]) ? parseInt(E[4], 10) : E[4]));
        return new P0(z, T0, a0, p0);
    };

    function p4(E, z, T0, a0, p0, G0, Q0, X0) {
        this.N = E;
        this.k = X0;
    }
    p4.prototype.getName = function() {
        return this.N;
    };

    function u4(E) {
        this.a = E;
    }
    var i2 = new p4("Unknown", 0, 0, 0, 0, 0, 0, new c0(!1, !1));
    u4.prototype.parse = function() {
        var a;
        if (-1 != this.a.indexOf("MSIE") || -1 != this.a.indexOf("Trident/")) {
            a = i4(this);
            var E = b0(o4(this)),
                z = null,
                T0 = y0(this.a, /Trident\/([\d\w\.]+)/, 1),
                z = -1 != this.a.indexOf("MSIE") ? b0(y0(this.a, /MSIE ([\d\w\.]+)/, 1)) : b0(y0(this.a, /rv:([\d\w\.]+)/, 1));
            "" != T0 && b0(T0);
            a = new p4("MSIE", 0, 0, 0, 0, 0, 0, new c0("Windows" == a && 6 <= z.c || "Windows Phone" == a && 8 <= E.c, !1));
        } else if (-1 != this.a.indexOf("Opera")) a: if (a = b0(y0(this.a, /Presto\/([\d\w\.]+)/, 1)), b0(o4(this)), null !== a.c || b0(y0(this.a, /rv:([^\)]+)/, 1)), -1 != this.a.indexOf("Opera Mini/")) a = b0(y0(this.a, /Opera Mini\/([\d\.]+)/, 1)), a = new p4("OperaMini", 0, 0, 0, i4(this), 0, 0, new c0(!1, !1));
            else {
                if (-1 != this.a.indexOf("Version/") && (a = b0(y0(this.a, /Version\/([\d\.]+)/, 1)), null !== a.c)) {
                    a = new p4("Opera", 0, 0, 0, i4(this), 0, 0, new c0(10 <= a.c, !1));
                    break a;
                }
                a = b0(y0(this.a, /Opera[\/ ]([\d\.]+)/, 1));
                a = null !== a.c ? new p4("Opera", 0, 0, 0, i4(this), 0, 0, new c0(10 <= a.c, !1)) : new p4("Opera", 0, 0, 0, i4(this), 0, 0, new c0(!1, !1));
            } else /OPR\/[\d.]+/.test(this.a) ? a = y4(this) : /AppleWeb(K|k)it/.test(this.a) ? a = y4(this) : -1 != this.a.indexOf("Gecko") ? (a = "Unknown", E = new P0, b0(o4(this)), E = !1, -1 != this.a.indexOf("Firefox") ? (a = "Firefox", E = b0(y0(this.a, /Firefox\/([\d\w\.]+)/, 1)), E = 3 <= E.c && 5 <= E.g) : -1 != this.a.indexOf("Mozilla") && (a = "Mozilla"), z = b0(y0(this.a, /rv:([^\)]+)/, 1)), E || (E = 1 < z.c || 1 == z.c && 9 < z.g || 1 == z.c && 9 == z.g && 2 <= z.D), a = new p4(a, 0, 0, 0, i4(this), 0, 0, new c0(E, !1))) : a = i2;
        return a;
    };

    function i4(E) {
        var z = y0(E.a, /(iPod|iPad|iPhone|Android|Windows Phone|BB\d{2}|BlackBerry)/, 1);
        if ("" != z) return /BB\d{2}/.test(z) && (z = "BlackBerry"), z;
        E = y0(E.a, /(Linux|Mac_PowerPC|Macintosh|Windows|CrOS|PlayStation|CrKey)/, 1);
        return "" != E ? ("Mac_PowerPC" == E ? E = "Macintosh" : "PlayStation" == E && (E = "Linux"), E) : "Unknown";
    }

    function o4(E) {
        var z = y0(E.a, /(OS X|Windows NT|Android) ([^;)]+)/, 2);
        if (z || (z = y0(E.a, /Windows Phone( OS)? ([^;)]+)/, 2)) || (z = y0(E.a, /(iPhone )?OS ([\d_]+)/, 2))) return z;
        if (z = y0(E.a, /(?:Linux|CrOS|CrKey) ([^;)]+)/, 1))
            for (var z = z.split(/\s/), T0 = 0; T0 < z.length; T0 += 1)
                if (/^[\d\._]+$/.test(z[T0])) return z[T0];
        return (E = y0(E.a, /(BB\d{2}|BlackBerry).*?Version\/([^\s]*)/, 2)) ? E : "Unknown";
    }

    function y4(E) {
        var z = i4(E),
            T0 = b0(o4(E)),
            a0 = b0(y0(E.a, /AppleWeb(?:K|k)it\/([\d\.\+]+)/, 1)),
            p0 = "Unknown",
            G0 = new P0,
            G0 = "Unknown",
            Q0 = !1;
        /OPR\/[\d.]+/.test(E.a) ? p0 = "Opera" : -1 != E.a.indexOf("Chrome") || -1 != E.a.indexOf("CrMo") || -1 != E.a.indexOf("CriOS") ? p0 = "Chrome" : /Silk\/\d/.test(E.a) ? p0 = "Silk" : "BlackBerry" == z || "Android" == z ? p0 = "BuiltinBrowser" : -1 != E.a.indexOf("PhantomJS") ? p0 = "PhantomJS" : -1 != E.a.indexOf("Safari") ? p0 = "Safari" : -1 != E.a.indexOf("AdobeAIR") ? p0 = "AdobeAIR" : -1 != E.a.indexOf("PlayStation") && (p0 = "BuiltinBrowser");
        "BuiltinBrowser" == p0 ? G0 = "Unknown" : "Silk" == p0 ? G0 = y0(E.a, /Silk\/([\d\._]+)/, 1) : "Chrome" == p0 ? G0 = y0(E.a, /(Chrome|CrMo|CriOS)\/([\d\.]+)/, 2) : -1 != E.a.indexOf("Version/") ? G0 = y0(E.a, /Version\/([\d\.\w]+)/, 1) : "AdobeAIR" == p0 ? G0 = y0(E.a, /AdobeAIR\/([\d\.]+)/, 1) : "Opera" == p0 ? G0 = y0(E.a, /OPR\/([\d.]+)/, 1) : "PhantomJS" == p0 && (G0 = y0(E.a, /PhantomJS\/([\d.]+)/, 1));
        G0 = b0(G0);
        Q0 = "AdobeAIR" == p0 ? 2 < G0.c || 2 == G0.c && 5 <= G0.g : "BlackBerry" == z ? 10 <= T0.c : "Android" == z ? 2 < T0.c || 2 == T0.c && 1 < T0.g : 526 <= a0.c || 525 <= a0.c && 13 <= a0.g;
        return new p4(p0, 0, 0, 0, 0, 0, 0, new c0(Q0, 536 > a0.c || 536 == a0.c && 11 > a0.g));
    }

    function y0(E, z, T0) {
        return (E = E.match(z)) && E[T0] ? E[T0] : "";
    };

    function h4(E) {
        this.ma = E || "-";
    }
    h4.prototype.e = function(E) {
        for (var z = [], T0 = 0; T0 < arguments.length; T0++) z.push(arguments[T0].replace(/[\W_]+/g, "").toLowerCase());
        return z.join(this.ma);
    };

    function U4(E, z) {
        this.N = E;
        this.Z = 4;
        this.O = "n";
        var T0 = (z || "n4").match(/^([nio])([1-9])$/i);
        T0 && (this.O = T0[1], this.Z = parseInt(T0[2], 10));
    }
    U4.prototype.getName = function() {
        return this.N;
    };

    function C0(E) {
        return E.O + E.Z;
    }

    function f4(E) {
        var z = 4,
            T0 = "n",
            a0 = null;
        E && ((a0 = E.match(/(normal|oblique|italic)/i)) && a0[1] && (T0 = a0[1].substr(0, 1).toLowerCase()), (a0 = E.match(/([1-9]00|normal|bold)/i)) && a0[1] && (/bold/i.test(a0[1]) ? z = 7 : /[1-9]00/.test(a0[1]) && (z = parseInt(a0[1].substr(0, 1), 10))));
        return T0 + z;
    };

    function B4(E, z) {
        this.d = E;
        this.q = E.w.document.documentElement;
        this.Q = z;
        this.j = "wf";
        this.h = new h4("-");
        this.ha = !1 !== z.events;
        this.F = !1 !== z.classes;
    }

    function t4(E) {
        if (E.F) {
            var z = t0(E.q, E.h.e(E.j, "active")),
                T0 = [],
                a0 = [E.h.e(E.j, "loading")];
            z || T0.push(E.h.e(E.j, "inactive"));
            h0(E.q, T0, a0);
        }
        j4(E, "inactive");
    }

    function j4(E, z, T0) {
        if (E.ha && E.Q[z])
            if (T0) E.Q[z](T0.getName(), C0(T0));
            else E.Q[z]();
    };

    function J2() {
        this.C = {};
    };

    function Y2(E, z) {
        this.d = E;
        this.I = z;
        this.o = this.d.createElement("span", {
            "aria-hidden": "true"
        }, this.I);
    }

    function C2(E, z) {
        var T0 = E.o,
            a0;
        a0 = [];
        for (var p0 = z.N.split(/,\s*/), G0 = 0; G0 < p0.length; G0++) {
            var Q0 = p0[G0].replace(/['"]/g, ""); - 1 == Q0.indexOf(" ") ? a0.push(Q0) : a0.push("'" + Q0 + "'");
        }
        a0 = a0.join(",");
        p0 = "normal";
        "o" === z.O ? p0 = "oblique" : "i" === z.O && (p0 = "italic");
        T0.style.cssText = "display:block;position:absolute;top:-9999px;left:-9999px;font-size:300px;width:auto;height:auto;line-height:normal;margin:0;padding:0;font-variant:normal;white-space:nowrap;font-family:" + a0 + ";" + ("font-style:" + p0 + ";font-weight:" + (z.Z + "00") + ";");
    }

    function l2(E) {
        v0(E.d, "body", E.o);
    }
    Y2.prototype.remove = function() {
        var E = this.o;
        E.parentNode && E.parentNode.removeChild(E);
    };

    function M2(E, z, T0, a0, p0, G0, Q0, X0) {
        this.$ = E;
        this.ka = z;
        this.d = T0;
        this.m = a0;
        this.k = p0;
        this.I = X0 || "BESbswy";
        this.v = {};
        this.X = G0 || 3E3;
        this.ca = Q0 || null;
        this.H = this.u = this.t = null;
        this.t = new Y2(this.d, this.I);
        this.u = new Y2(this.d, this.I);
        this.H = new Y2(this.d, this.I);
        C2(this.t, new U4("serif", C0(this.m)));
        C2(this.u, new U4("sans-serif", C0(this.m)));
        C2(this.H, new U4("monospace", C0(this.m)));
        l2(this.t);
        l2(this.u);
        l2(this.H);
        this.v.serif = this.t.o.offsetWidth;
        this.v["sans-serif"] = this.u.o.offsetWidth;
        this.v.monospace = this.H.o.offsetWidth;
    }
    var W2 = {
        sa: "serif",
        ra: "sans-serif",
        qa: "monospace"
    };
    M2.prototype.start = function() {
        this.oa = R0();
        C2(this.t, new U4(this.m.getName() + ",serif", C0(this.m)));
        C2(this.u, new U4(this.m.getName() + ",sans-serif", C0(this.m)));
        g2(this);
    };

    function q2(E, z, T0) {
        for (var a0 in W2)
            if (W2.hasOwnProperty(a0) && z === E.v[W2[a0]] && T0 === E.v[W2[a0]]) return !0;
        return !1;
    }

    function g2(E) {
        var z = E.t.o.offsetWidth,
            T0 = E.u.o.offsetWidth;
        z === E.v.serif && T0 === E.v["sans-serif"] || E.k.ga && q2(E, z, T0) ? R0() - E.oa >= E.X ? E.k.ga && q2(E, z, T0) && (null === E.ca || E.ca.hasOwnProperty(E.m.getName())) ? s2(E, E.$) : s2(E, E.ka) : Y6(E) : s2(E, E.$);
    }

    function Y6(E) {
        setTimeout(W0(function() {
            g2(this);
        }, E), 50);
    }

    function s2(E, z) {
        E.t.remove();
        E.u.remove();
        E.H.remove();
        z(E.m);
    };

    function r2(E, z, T0, a0) {
        this.d = z;
        this.A = T0;
        this.S = 0;
        this.ea = this.ba = !1;
        this.X = a0;
        this.k = E.k;
    }

    function I2(E, z, T0, a0, p0) {
        T0 = T0 || {};
        if (0 === z.length && p0) t4(E.A);
        else
            for (E.S += z.length, p0 && (E.ba = p0), p0 = 0; p0 < z.length; p0++) {
                var G0 = z[p0],
                    Q0 = T0[G0.getName()],
                    X0 = E.A,
                    U0 = G0;
                X0.F && h0(X0.q, [X0.h.e(X0.j, U0.getName(), C0(U0).toString(), "loading")]);
                j4(X0, "fontloading", U0);
                X0 = null;
                X0 = new M2(W0(E.ia, E), W0(E.ja, E), E.d, G0, E.k, E.X, a0, Q0);
                X0.start();
            }
    }
    r2.prototype.ia = function(E) {
        var z = this.A;
        z.F && h0(z.q, [z.h.e(z.j, E.getName(), C0(E).toString(), "active")], [z.h.e(z.j, E.getName(), C0(E).toString(), "loading"), z.h.e(z.j, E.getName(), C0(E).toString(), "inactive")]);
        j4(z, "fontactive", E);
        this.ea = !0;
        m2(this);
    };
    r2.prototype.ja = function(E) {
        var z = this.A;
        if (z.F) {
            var T0 = t0(z.q, z.h.e(z.j, E.getName(), C0(E).toString(), "active")),
                a0 = [],
                p0 = [z.h.e(z.j, E.getName(), C0(E).toString(), "loading")];
            T0 || a0.push(z.h.e(z.j, E.getName(), C0(E).toString(), "inactive"));
            h0(z.q, a0, p0);
        }
        j4(z, "fontinactive", E);
        m2(this);
    };

    function m2(E) {
        0 == --E.S && E.ba && (E.ea ? (E = E.A, E.F && h0(E.q, [E.h.e(E.j, "active")], [E.h.e(E.j, "loading"), E.h.e(E.j, "inactive")]), j4(E, "active")) : t4(E.A));
    };

    function L2(E) {
        this.K = E;
        this.B = new J2;
        this.pa = new u4(E.navigator.userAgent);
        this.a = this.pa.parse();
        this.U = this.V = 0;
        this.R = this.T = !0;
    }
    L2.prototype.load = function(E) {
        this.d = new E0(this.K, E.context || this.K);
        this.T = !1 !== E.events;
        this.R = !1 !== E.classes;
        var z = new B4(this.d, E),
            T0 = [],
            a0 = E.timeout;
        z.F && h0(z.q, [z.h.e(z.j, "loading")]);
        j4(z, "loading");
        var T0 = this.B,
            p0 = this.d,
            G0 = [],
            Q0;
        for (Q0 in E)
            if (E.hasOwnProperty(Q0)) {
                var X0 = T0.C[Q0];
                X0 && G0.push(X0(E[Q0], p0));
            }
        T0 = G0;
        this.U = this.V = T0.length;
        E = new r2(this.a, this.d, z, a0);
        a0 = 0;
        for (Q0 = T0.length; a0 < Q0; a0++) p0 = T0[a0], p0.L(this.a, W0(this.la, this, p0, z, E));
    };
    L2.prototype.la = function(a0, p0, G0, Q0) {
        var X0 = this;
        Q0 ? a0.load(function(E, z, T0) {
            h2(X0, G0, E, z, T0);
        }) : (a0 = 0 == --this.V, this.U--, a0 && 0 == this.U ? t4(p0) : (this.R || this.T) && I2(G0, [], {}, null, a0));
    };

    function h2(E, z, T0, a0, p0) {
        var G0 = 0 == --E.V;
        (E.R || E.T) && setTimeout(function() {
            I2(z, T0, a0 || null, p0 || null, G0);
        }, 0);
    };

    function p6(E, z, T0) {
        this.P = E ? E : z + m4;
        this.s = [];
        this.W = [];
        this.fa = T0 || "";
    }
    var m4 = "//fonts.googleapis.com/css";
    p6.prototype.e = function() {
        if (0 == this.s.length) throw Error("No fonts to load!");
        if (-1 != this.P.indexOf("kit=")) return this.P;
        for (var E = this.s.length, z = [], T0 = 0; T0 < E; T0++) z.push(this.s[T0].replace(/ /g, "+"));
        E = this.P + "?family=" + z.join("%7C");
        0 < this.W.length && (E += "&subset=" + this.W.join(","));
        0 < this.fa.length && (E += "&text=" + encodeURIComponent(this.fa));
        return E;
    };

    function Y4(E) {
        this.s = E;
        this.da = [];
        this.M = {};
    }
    var a6 = {
            latin: "BESbswy",
            cyrillic: "&#1081;&#1103;&#1046;",
            greek: "&#945;&#946;&#931;",
            khmer: "&#x1780;&#x1781;&#x1782;",
            Hanuman: "&#x1780;&#x1781;&#x1782;"
        },
        e4 = {
            thin: "1",
            extralight: "2",
            "extra-light": "2",
            ultralight: "2",
            "ultra-light": "2",
            light: "3",
            regular: "4",
            book: "4",
            medium: "5",
            "semi-bold": "6",
            semibold: "6",
            "demi-bold": "6",
            demibold: "6",
            bold: "7",
            "extra-bold": "8",
            extrabold: "8",
            "ultra-bold": "8",
            ultrabold: "8",
            black: "9",
            heavy: "9",
            l: "3",
            r: "4",
            b: "7"
        },
        C6 = {
            i: "i",
            italic: "i",
            n: "n",
            normal: "n"
        },
        G6 = /^(thin|(?:(?:extra|ultra)-?)?light|regular|book|medium|(?:(?:semi|demi|extra|ultra)-?)?bold|black|heavy|l|r|b|[1-9]00)?(n|i|normal|italic)?$/;
    Y4.prototype.parse = function() {
        for (var E = this.s.length, z = 0; z < E; z++) {
            var T0 = this.s[z].split(":"),
                a0 = T0[0].replace(/\+/g, " "),
                p0 = ["n4"];
            if (2 <= T0.length) {
                var G0, Q0 = T0[1];
                G0 = [];
                if (Q0)
                    for (var Q0 = Q0.split(","), X0 = Q0.length, U0 = 0; U0 < X0; U0++) {
                        var q0;
                        q0 = Q0[U0];
                        if (q0.match(/^[\w-]+$/)) {
                            q0 = G6.exec(q0.toLowerCase());
                            var O0 = void 0;
                            if (null == q0) O0 = "";
                            else {
                                O0 = void 0;
                                O0 = q0[1];
                                if (null == O0 || "" == O0) O0 = "4";
                                else var I0 = e4[O0],
                                    O0 = I0 ? I0 : isNaN(O0) ? "4" : O0.substr(0, 1);
                                q0 = q0[2];
                                O0 = [null == q0 || "" == q0 ? "n" : C6[q0], O0].join("");
                            }
                            q0 = O0;
                        } else q0 = "";
                        q0 && G0.push(q0);
                    }
                0 < G0.length && (p0 = G0);
                3 == T0.length && (T0 = T0[2], G0 = [], T0 = T0 ? T0.split(",") : G0, 0 < T0.length && (T0 = a6[T0[0]]) && (this.M[a0] = T0));
            }
            this.M[a0] || (T0 = a6[a0]) && (this.M[a0] = T0);
            for (T0 = 0; T0 < p0.length; T0 += 1) this.da.push(new U4(a0, p0[T0]));
        }
    };

    function K2(E, z) {
        this.a = (new u4(navigator.userAgent)).parse();
        this.d = E;
        this.f = z;
    }
    var Q6 = {
        Arimo: !0,
        Cousine: !0,
        Tinos: !0
    };
    K2.prototype.L = function(E, z) {
        z(E.k.Y);
    };
    K2.prototype.load = function(E) {
        var z = this.d;
        "MSIE" == this.a.getName() && 1 != this.f.blocking ? B0(z, W0(this.aa, this, E)) : this.aa(E);
    };
    K2.prototype.aa = function(E) {
        for (var z = this.d, T0 = new p6(this.f.api, r0(z), this.f.text), a0 = this.f.families, p0 = a0.length, G0 = 0; G0 < p0; G0++) {
            var Q0 = a0[G0].split(":");
            3 == Q0.length && T0.W.push(Q0.pop());
            var X0 = "";
            2 == Q0.length && "" != Q0[1] && (X0 = ":");
            T0.s.push(Q0.join(X0));
        }
        a0 = new Y4(a0);
        a0.parse();
        S0(z, T0.e());
        E(a0.da, a0.M, Q6);
    };

    function M0(E, z) {
        this.d = E;
        this.f = z;
        this.p = [];
    }
    M0.prototype.J = function(E) {
        var z = this.d;
        return r0(this.d) + (this.f.api || "//f.fontdeck.com/s/css/js/") + (z.w.location.hostname || z.K.location.hostname) + "/" + E + ".js";
    };
    M0.prototype.L = function(G0, Q0) {
        var X0 = this.f.id,
            U0 = this.d.w,
            q0 = this;
        X0 ? (U0.__webfontfontdeckmodule__ || (U0.__webfontfontdeckmodule__ = {}), U0.__webfontfontdeckmodule__[X0] = function(E, z) {
            for (var T0 = 0, a0 = z.fonts.length; T0 < a0; ++T0) {
                var p0 = z.fonts[T0];
                q0.p.push(new U4(p0.name, f4("font-weight:" + p0.weight + ";font-style:" + p0.style)));
            }
            Q0(E);
        }, Z4(this.d, this.J(X0), function(E) {
            E && Q0(!1);
        })) : Q0(!1);
    };
    M0.prototype.load = function(E) {
        E(this.p);
    };

    function O2(E, z) {
        this.d = E;
        this.f = z;
        this.p = [];
    }
    O2.prototype.J = function(E) {
        var z = r0(this.d);
        return (this.f.api || z + "//use.typekit.net") + "/" + E + ".js";
    };
    O2.prototype.L = function(Q0, X0) {
        var U0 = this.f.id,
            q0 = this.d.w,
            O0 = this;
        U0 ? Z4(this.d, this.J(U0), function(z) {
            if (z) X0(!1);
            else {
                if (q0.Typekit && q0.Typekit.config && q0.Typekit.config.fn) {
                    z = q0.Typekit.config.fn;
                    for (var T0 = 0; T0 < z.length; T0 += 2)
                        for (var a0 = z[T0], p0 = z[T0 + 1], G0 = 0; G0 < p0.length; G0++) O0.p.push(new U4(a0, p0[G0]));
                    try {
                        q0.Typekit.load({
                            events: !1,
                            classes: !1
                        });
                    } catch (E) {}
                }
                X0(!0);
            }
        }, 2E3) : X0(!1);
    };
    O2.prototype.load = function(E) {
        E(this.p);
    };

    function e2(E, z) {
        this.d = E;
        this.f = z;
        this.p = [];
    }
    e2.prototype.L = function(T0, a0) {
        var p0 = this,
            G0 = p0.f.projectId,
            Q0 = p0.f.version;
        if (G0) {
            var X0 = p0.d.w;
            Z4(this.d, p0.J(G0, Q0), function(E) {
                if (E) a0(!1);
                else {
                    if (X0["__mti_fntLst" + G0] && (E = X0["__mti_fntLst" + G0]()))
                        for (var z = 0; z < E.length; z++) p0.p.push(new U4(E[z].fontfamily));
                    a0(T0.k.Y);
                }
            }).id = "__MonotypeAPIScript__" + G0;
        } else a0(!1);
    };
    e2.prototype.J = function(E, z) {
        var T0 = r0(this.d),
            a0 = (this.f.api || "fast.fonts.net/jsapi").replace(/^.*http(s?):(\/\/)?/, "");
        return T0 + "//" + a0 + "/" + E + ".js" + (z ? "?v=" + z : "");
    };
    e2.prototype.load = function(E) {
        E(this.p);
    };

    function f0(E, z) {
        this.d = E;
        this.f = z;
    }
    f0.prototype.load = function(E) {
        var z, T0, a0 = this.f.urls || [],
            p0 = this.f.families || [],
            G0 = this.f.testStrings || {};
        z = 0;
        for (T0 = a0.length; z < T0; z++) S0(this.d, a0[z]);
        a0 = [];
        z = 0;
        for (T0 = p0.length; z < T0; z++) {
            var Q0 = p0[z].split(":");
            if (Q0[1])
                for (var X0 = Q0[1].split(","), U0 = 0; U0 < X0.length; U0 += 1) a0.push(new U4(Q0[0], X0[U0]));
            else a0.push(new U4(Q0[0]));
        }
        E(a0, G0);
    };
    f0.prototype.L = function(E, z) {
        return z(E.k.Y);
    };
    var $ = new L2(this);
    $.B.C.custom = function(E, z) {
        return new f0(z, E);
    };
    $.B.C.fontdeck = function(E, z) {
        return new M0(z, E);
    };
    $.B.C.monotype = function(E, z) {
        return new e2(z, E);
    };
    $.B.C.typekit = function(E, z) {
        return new O2(z, E);
    };
    $.B.C.google = function(E, z) {
        return new K2(z, E);
    };
    this.WebFont || (this.WebFont = {}, this.WebFont.load = W0($.load, $), this.WebFontConfig && $.load(this.WebFontConfig));
})(this, document);;
var GameConfig = {
    credits: m5i.R3b,
    debug: m5i.C14,
    gaUA: m5i.V74,
    ads: {
        adsense: {
            url: m5i.O6b
        }
    },
    soundSprite: {
        remove: [m5i.c4, m5i.G1b],
        Click: [m5i.H6, m5i.H6],
        SFly: [m5i.N7, m5i.G1b],
        SGet: [m5i.Y8b, m5i.a6b],
        STick: [m5i.S14, m5i.Z6]
    },
    levelData: {
        1: [m5i.F9, m5i.D7, m5i.I24, m5i.i3, m5i.a8b],
        2: [m5i.m6, m5i.l2b, m5i.x3, m5i.X74, m5i.F3],
        3: [m5i.o3b, m5i.w8b, m5i.E3, m5i.e5, m5i.j2, m5i.H8, m5i.S1b],
        4: [m5i.a64, m5i.W74, m5i.R3, m5i.d14, m5i.k4, m5i.F6, m5i.c4b, m5i.g44, m5i.U0b],
        5: [m5i.I9, m5i.A7, m5i.S6, m5i.z8b, m5i.Z74, m5i.t94, m5i.W7],
        6: [m5i.S4b, m5i.x94, m5i.z6, m5i.N5, m5i.l94, m5i.K9b, m5i.b2, m5i.k6b, m5i.a7b],
        7: [m5i.z74, m5i.H84, m5i.w74, m5i.X84, m5i.T3, m5i.E04, m5i.L5],
        8: [m5i.P14, m5i.p2, m5i.v24, m5i.U94, m5i.J2b, m5i.q24, m5i.B1b, m5i.m14, m5i.S94],
        9: [m5i.A5b, m5i.x6, m5i.o1b, m5i.a4, m5i.P3, m5i.Z5, m5i.t1b],
        10: [m5i.r04, m5i.q6, m5i.H7b, m5i.Q7b, m5i.W8, m5i.D7b, m5i.K8, m5i.z2, m5i.Y3b],
        11: [m5i.I9b, m5i.o0, m5i.u5, m5i.c5, m5i.j3b, m5i.y2, m5i.b3],
        12: [m5i.K24, m5i.w0, m5i.D3b, m5i.A9, m5i.I94, m5i.Z9, m5i.Y84, m5i.k3b, m5i.a7],
        13: [m5i.n2, m5i.F2, m5i.H6b, m5i.l9, m5i.D9, m5i.r7, m5i.T4],
        14: [m5i.V3, m5i.c5b, m5i.i6, m5i.M8, m5i.G3b, m5i.A2b, m5i.F9b, m5i.z44, m5i.T8b],
        15: [m5i.m9b, m5i.K3b, m5i.K5b, m5i.v6b, m5i.G9b, m5i.H9, m5i.g24],
        16: [m5i.q8, m5i.u5b, m5i.z3, m5i.W3, m5i.Y5b, m5i.V94, m5i.T0b, m5i.v04, m5i.l5b],
        17: [m5i.z4, m5i.b04, m5i.M2b, m5i.f9, m5i.P1, m5i.x3b, m5i.V0b],
        18: [m5i.O5, m5i.X2b, m5i.r4, m5i.H64, m5i.h1, m5i.I5, m5i.d4b, m5i.i3b, m5i.U04]
    }
};
if (!(window.console && console.log)) {
    var console = {
        log: function() {},
        debug: function() {},
        info: function() {},
        warn: function() {},
        error: function() {}
    };
}
var GameLib = {
    gameWidth: m5i.W6b,
    gameHeight: m5i.O14,
    containerDiv: m5i.V3b,
    storageJar: {},
    scale: m5i.I4,
    scalable: m5i.R3b,
    gameName: m5i.e9b,
    lang: m5i.R2,
    isTouch: m5i.x2b in window || navigator.msMaxTouchPoints,
    isAndroid: /Android/.test(navigator.userAgent),
    isIE: /IEMobile/.test(navigator.userAgent),
    online: m5i.R3b,
    popup: m5i.V3b,
    IEversion: (function() {
        var E = ']><i></i><![endif]-->',
            z = '<!--[if gt IE ',
            T0 = 'i',
            a0 = m5i.O4,
            p0 = document.createElement(m5i.m44),
            G0 = p0.getElementsByTagName(T0);
        do p0.innerHTML = z + (++a0) + E; while (G0[m5i.c4]);
        return a0 > m5i.s4 ? a0 : document.documentMode;
    }()),
    iOSversion: (function() {
        if (/iP(hone|od|ad)/.test(navigator.platform)) {
            var E = (navigator.appVersion).match(/OS (\d+)_(\d+)_?(\d+)?/);
            return [+E[m5i.I4], +E[m5i.C4], +(E[m5i.O4] || m5i.c4)];
        }
        return m5i.C14;
    }()),
    moreGames: function() {
        window.open(mobConfig.mainpage);
        var G0 = '_system',
            Q0 = 'match3',
            X0 = 'bubble',
            U0 = 'mind',
            q0 = 'memory',
            O0 = 'puzzle',
            I0 = 'juegos-clasicos.es',
            H0 = 'spieleklassiker.com',
            l0 = 'klassiekspel.nl',
            n0 = 'classicgame.com',
            u0 = 'match3spellen.nl',
            K0 = 'match3games.com',
            W0 = 'juegosplataformas.com',
            R0 = 'plattformspiele.de',
            E0 = 'platformspellen.nl',
            v0 = 'platformgames.com',
            B0 = 'juegosdeobjetosocultos.com',
            h0 = 'wimmelbildspiele.de',
            t0 = 'hiddenobjectspellen.nl',
            r0 = 'hiddenobjectgames.com',
            S0 = 'knobelspiele.com',
            Z4 = 'juegos-mentales.com',
            c0 = 'denkspelletjes.nl',
            P0 = 'mindgames.com',
            X4 = 'solitairejeux.com',
            b0 = 'juegossolitario.com',
            p4 = 'kartenspielen.de',
            u4 = 'patiencespelen.nl',
            i2 = 'solitaireonline.com',
            i4 = 'www.mahjongjeux.com',
            o4 = 'juegosmahjong.com',
            y4 = 'mahjongspelen.nl',
            y0 = 'mahjongspielen.de',
            h4 = 'mahjonggames.com',
            U4 = 'meta[name=gameCats]',
            C0 = GameLib.lang;
        if (typeof(ThirdParty.moreGames) == m5i.o9b) {
            return ThirdParty.moreGames(C0);
        }
        var f4 = document.querySelector(U4).content.split(m5i.D74)[m5i.c4].toLowerCase(),
            B4 = {
                mahjong: {
                    en: h4,
                    de: y0,
                    nl: y4,
                    es: o4,
                    fr: i4
                },
                solitaire: {
                    en: i2,
                    nl: u4,
                    de: p4,
                    es: b0,
                    fr: X4
                },
                mind: {
                    en: P0,
                    nl: c0,
                    es: Z4,
                    de: S0
                },
                hiddenobject: {
                    en: r0,
                    nl: t0,
                    de: h0,
                    es: B0
                },
                platform: {
                    en: v0,
                    nl: E0,
                    de: R0,
                    es: W0
                },
                match3: {
                    en: K0,
                    nl: u0
                },
                classic: {
                    en: n0,
                    nl: l0,
                    de: H0,
                    es: I0
                }
            };
        if (f4 == O0 || f4 == q0) f4 = U0;
        if (f4 == X0) f4 = Q0;

        function t4() {
            var E = 'http://htmlgames.com',
                z = 'http://html-spiele.de',
                T0 = 'http://htmlspellen.nl',
                a0 = 'http://';
            if (typeof B4[f4] !== m5i.E2b) {
                var p0 = B4[f4];
                return a0 + p0[typeof p0[C0] == m5i.E2b ? m5i.R2 : C0];
            }
            if (C0 == m5i.D8b) {
                return T0;
            }
            if (C0 == m5i.i5) {
                return z;
            }
            return E;
        }
        window.open(t4(), G0);
    },
    $_GET: function(E) {
        var z = "=([^&#=]*)",
            T0 = new RegExp(E + z);
        T0 = T0.exec(location.search);
        if (m5i.V3b === T0) return m5i.C14;
        return decodeURIComponent(T0[m5i.I4]);
    },
    getLang: function() {
        var E = ',zh,en,nl,es,pt,fr,it,de,ru,in,pl,tr,',
            z = E,
            T0 = localStorage.getItem(m5i.j0);
        if (m5i.V3b === T0) {
            T0 = GameLib.getStorage(m5i.j0);
            if (!T0) {
                T0 = GameLib.$_GET(m5i.j0);
                if (!T0 || z.indexOf(m5i.D74 + T0 + m5i.D74) == -m5i.I4) {
                    T0 = m5i.V3b;
                }
            }
        }
        if (m5i.V3b === T0) {
            T0 = (navigator.language || navigator.userLanguage).substr(m5i.c4, m5i.C4);
            return z.indexOf(m5i.D74 + T0 + m5i.D74) == -m5i.I4 ? m5i.R2 : T0;
        }
        return T0;
    },
    setLang: function(z) {
        GameLib.lang = z;
        localStorage.setItem(m5i.j0, z);
        try {
            GameHiscore.set(m5i.j0, z);
        } catch (E) {};
    },
    getHostDomain: function() {
        var E = location.hostname,
            z, T0 = (parent === window) ? m5i.V3b : document.referrer;
        if (T0 !== m5i.V3b) {
            E = T0;
        } else if (document.referrer) {
            E = document.referrer;
        }
        E = E.replace(/^https?:\/\//i, m5i.e9b).replace(/^(www|dev)\./, m5i.e9b);
        z = E.indexOf(m5i.v2);
        if (z != -m5i.I4) {
            E = E.substr(m5i.c4, z);
        }
        return E;
    },
    showPopup: function(z, T0, a0, p0, G0) {
        var Q0 = '<div style="padding:5px 10px">',
            X0 = 'px" frameborder="0"></iframe>',
            U0 = '" style="display:block;width:',
            q0 = '<iframe src="',
            O0 = '</div>',
            I0 = '<div class="title">',
            H0 = 'px;',
            l0 = 'px;margin-top:-',
            n0 = 'px;margin-left:-',
            u0 = 'px;height:',
            K0 = 'width:',
            W0 = 'popupWrap close',
            R0 = 'popup';
        this.closePopup();
        a0 = a0 || 400;
        p0 = p0 || 300;
        if (typeof(G0) == m5i.E2b) {
            G0 = true;
        };
        var E0 = document.createElement(m5i.m44),
            v0 = document.createElement(m5i.m44),
            B0 = document.documentElement.clientWidth,
            h0 = document.documentElement.clientHeight,
            t0 = !GameLib.isTouch && (window.devicePixelRatio === undefined || window.devicePixelRatio === m5i.I4) && screen.width > m5i.S14,
            r0 = [],
            S0 = -m5i.B44;
        if (!G0 && !t0) {
            a0 = B0 - 32;
            p0 = h0 - 32;
            S0 = m5i.c4;
        }
        v0.className = R0;
        E0.className = W0;
        E0.onclick = function(E) {
            if (/close/.test(E.target.className)) {
                GameLib.closePopup();
            }
        };
        GameLib.popup = E0;
        var Z4 = K0 + a0 + u0 + p0 + n0 + (a0 / m5i.C4) + l0 + (p0 / m5i.C4) + H0;
        if (G0) {
            Z4 += 'transform:scale(' + GameLib.scale + ');-webkit-transform:scale(' + GameLib.scale + ');-ms-transform:scale(' + GameLib.scale + ')';
        }
        v0.setAttribute(m5i.d2, Z4);
        E0.appendChild(v0);
        if (z) {
            p0 -= 32;
            r0.push(I0 + z + O0);
        }
        var c0 = /\.html$/.test(T0) || /^https?:\/\//.test(T0) ? q0 + T0 + U0 + a0 + u0 + p0 + X0 : Q0 + T0 + O0;
        r0.push('<div style="overflow:auto;overflow-x:hidden;-webkit-overflow-scrolling:touch;width:' + a0 + 'px;height:' + p0 + 'px">' + c0 + '</div>', '<img src="static/close.png" class="close" style="right:' + S0 + 'px;top:' + S0 + 'px">');
        v0.innerHTML = r0.join(m5i.e9b);
        document.body.appendChild(E0);
        return m5i.C14;
    },
    closePopup: function() {
        if (this.popup) {
            this.popup.parentNode.removeChild(this.popup);
            this.popup = m5i.V3b;
        }
    },
    scaleGame: function(E, z, T0) {
        var a0 = 'block',
            p0 = 'portrait',
            G0 = 'landscape',
            Q0 = 'minimal-ui,user-scalable=0,',
            X0 = 'content',
            U0 = 'height=',
            q0 = 'width=',
            O0 = 'meta[name=viewport]',
            I0 = document.getElementById(m5i.y3b),
            H0 = Math.min(document.documentElement.clientWidth, window.innerWidth),
            l0 = Math.min(document.documentElement.clientHeight, window.innerHeight),
            n0 = H0 > l0,
            u0 = z || H0,
            K0 = T0 || l0;
        if (GameLib.scalable) {
            GameLib.scale = Math.min(u0 / GameLib.gameWidth, K0 / GameLib.gameHeight);
            GameLib.containerDiv.style.webkitTransform = GameLib.containerDiv.style.msTransform = GameLib.containerDiv.style.transform = 'scale(' + GameLib.scale + ')';
        } else {
            var W0 = document.querySelector(O0),
                R0 = q0 + GameLib.gameWidth;
            if (n0 && GameLib.gameHeight > window.innerHeight && GameLib.gameWidth <= H0) {
                R0 = U0 + GameLib.gameHeight;
            }
            W0.setAttribute(X0, Q0 + R0);
        } if (ThirdParty.showRotateHint) {
            var E0 = GameConfig.orientation || G0;
            I0.style.display = GameLib.isTouch && ((E0 == G0 && !n0) || (E0 == p0 && n0)) ? a0 : m5i.c1b;
        }
        if (ThirdParty.centerHorizontally) {
            var v0 = GameLib.scale * GameLib.gameWidth < H0 ? (H0 - GameLib.scale * GameLib.gameWidth) / m5i.C4 : m5i.c4;
            GameLib.containerDiv.style.marginLeft = v0 + m5i.c7b;
        }
        if (ThirdParty.centerVertically) {
            var v0 = GameLib.scale * GameLib.gameHeight <= l0 ? (l0 - GameLib.scale * GameLib.gameHeight) / m5i.C4 : m5i.c4;
            GameLib.containerDiv.style.marginTop = v0 + m5i.c7b;
        }
        if (GameLib.iOSversion) {
            window.scrollTo(m5i.c4, -m5i.L64);
        }
    },
    getStorage: function(E) {
        return this.storageJar[E] !== undefined ? this.storageJar[E] : m5i.C14;
    },
    setStorage: function(E, z) {
        if (typeof E === m5i.Y94) {
            for (var T0 in E) {
                if (m5i.V3b === E[T0]) {
                    delete this.storageJar[T0];
                } else {
                    this.storageJar[T0] = E[T0];
                }
            }
        } else {
            if (m5i.V3b === z) {
                delete this.storageJar[E];
            } else {
                this.storageJar[E] = z;
            }
        }
        this.saveStorage();
    },
    saveStorage: function() {
        localStorage.setItem(this.gameName, JSON.stringify(this.storageJar));
    },
    init: function(a0, p0, G0) {
        var Q0 = 'This game is incompatible with your device. Please upgrade to iOS6 or newer.',
            X0 = 'Old Internet Explorer',
            U0 = ').<br>This game might or might not work. We strongly advise you to upgrade to <a href="http://windows.microsoft.com/en-us/internet-explorer/ie-11-worldwide-languages" target="_blank">Internet Explorer 10</a> or better.<br>Alternatively, you can use <a href="http://getfirefox.com/" target="_blank">Firefox</a>, <a href="http://google.com/chrome/" target="_blank">Chrome</a>, <a href="http://apple.com/safari/" target="_blank">Safari</a> or <a href="http://opera.com/browser" target="_blank">Opera</a>.',
            q0 = 'You are using a rather old version of Internet Explorer (version ',
            O0 = 'orientationchange',
            I0 = 'test',
            H0 = 'head',
            l0 = 'url(',
            n0 = 'bgcolor',
            u0 = 'contextmenu';
        if (/debug/.test(location.search)) {
            window.onerror = function(E, z, T0) {
                alert('Error in line ' + T0 + ' of ' + z + ':\n' + E);
            };
        } else {
            document.addEventListener(u0, function(E) {
                E.preventDefault();
            }, m5i.C14);
        }
        GameLib.gameName = a0;
        GameLib.gameWidth = p0;
        GameLib.gameHeight = G0;
        document.getElementById(m5i.y3b).addEventListener(m5i.p64, function() {
            this.style.display = m5i.c1b;
        });
        var K0 = GameLib.$_GET(n0);
        if (m5i.C14 !== K0) {
            document.documentElement.style.backgroundColor = K0;
            document.documentElement.style.backgroundImage = m5i.c1b;
        } else if (ThirdParty.background) {
            document.documentElement.style.background = /([\.\/])/.test(ThirdParty.background) ? l0 + ThirdParty.background + m5i.e74 : ThirdParty.background;
        }
        GameLib.containerDiv = document.getElementById(m5i.l5);
        GameLib.containerDiv.style.width = p0 + 'px';
        GameLib.containerDiv.style.height = G0 + 'px';
        if (/noscale/.test(location.search)) {
            GameLib.scalable = m5i.C14;
            if (GameLib.isIE) {
                var W0 = document.createElement(m5i.d2);
                W0.appendChild(document.createTextNode('@-ms-viewport{width:' + p0 + 'px; height:' + G0 + 'px}'));
                document.querySelector(H0).appendChild(W0);
            }
        }
        try {
            var R0 = I0;
            localStorage.setItem(R0, R0);
            localStorage.removeItem(R0);
        } catch (E) {
            var E0 = 'Private Browsing',
                v0 = 'You seem to be browsing in private mode. This game does not work in private mode, while we cannot use local storage for storing your score, progress etc.<br>Please run this game in a regular (non-private) browser window.';
            var t0 = v0;
            this.showPopup(E0, msg, m5i.H6, m5i.G1b);
        }
        var B0 = localStorage.getItem(this.gameName);
        if (m5i.V3b !== B0) {
            this.storageJar = JSON.parse(B0);
        }
        this.setStorage(m5i.V2b, m5i.V3b);
        if (this.iOSversion && this.iOSversion[m5i.c4] >= m5i.D4 && this.iOSversion[m5i.I4] >= m5i.I4) {
            document.addEventListener(m5i.e44, function(E) {
                E.preventDefault();
            }, m5i.C14);
        }
        window.addEventListener(m5i.B5, function() {
            GameSound.setIdle(m5i.R3b);
        }, m5i.C14);
        window.addEventListener(m5i.J6, function() {
            GameSound.setIdle(m5i.C14);
        }, m5i.C14);
        window.addEventListener(GameLib.iOSversion ? O0 : m5i.g6, GameLib.scaleGame, m5i.C14);
        var h0 = document.createEvent(m5i.M9b);
        h0.initEvent(m5i.g5, m5i.R3b, m5i.R3b);
        h0.gameName = a0;
        document.dispatchEvent(h0);
        GameLib.scaleGame();
        orderInit(m5i.I4);
        if (GameLib.IEversion && GameLib.IEversion < m5i.H24) {
            var t0 = q0 + GameLib.IEversion + U0;
            this.showPopup(X0, msg, m5i.H6, m5i.G1b);
        }
        if (GameLib.iOSversion && GameLib.iOSversion[m5i.c4] < m5i.L4) {
            alert(Q0);
        }
        if (/iP(od|hone)/.test(navigator.userAgent) && !navigator.standalone) {
            GameLib.windowHeight = window.innerHeight;
            setInterval(function() {
                if (window.innerHeight != GameLib.windowHeight) {
                    GameLib.windowHeight = window.innerHeight;
                    GameLib.scaleGame();
                }
            }, m5i.K7);
        };
        window.focus();
    }
};;
var CreateAll = {
    CreatedPanel: function(E, z, T0, a0, p0) {
        var G0 = document.createElement(m5i.r6);
        G0.style.position = m5i.v9;
        G0.style.display = m5i.i94;
        G0.style.left = E + m5i.B24;
        G0.style.top = z + m5i.B24;
        G0.className = T0;
        a0.appendChild(G0);
        p0.push(G0);
        return G0;
    },
    CreateDiv: function(E, z, T0, a0) {
        var p0 = document.createElement(m5i.r6);
        p0.style.position = m5i.v9;
        p0.style.left = E + m5i.B24;
        p0.style.top = z + m5i.B24;
        T0.appendChild(p0);
        a0.push(p0);
        return p0;
    },
    CreateImgBg: function(E, z, T0, a0, p0, G0, Q0) {
        var X0 = document.createElement(m5i.I2b),
            U0 = loadRec.resource[E];
        X0.style.top = T0 + m5i.B24;
        X0.style.left = z + m5i.B24;
        X0.src = U0.src;
        X0.width = a0;
        X0.height = p0;
        X0.style.position = m5i.v9;
        Q0.push(X0);
        G0.appendChild(X0);
        return X0;
    },
    CreateText: function(E, z, T0, a0) {
        var p0 = document.createElement(m5i.r6);
        p0.style.left = E + m5i.B24;
        p0.style.top = z + m5i.B24;
        p0.className = m5i.V04;
        T0.appendChild(p0);
        a0.push(p0);
        return p0;
    },
    CreatedImg: function(E, z, T0, a0, p0) {
        var G0 = loadRec.resource[E];
        G0.style.position = m5i.v9;
        G0.style.left = z + m5i.B24;
        G0.style.top = T0 + m5i.B24;
        G0.draggable = m5i.C14;
        a0.appendChild(G0);
        p0.push(G0);
        return G0;
    },
    CreateLanUI: function(E, z, T0, a0, p0, G0) {
        var Q0 = "lang",
            X0 = document.createElement(m5i.r6);
        G0.push(X0);
        X0.className = Q0;
        X0.style.left = E + m5i.B24;
        X0.style.top = z + m5i.B24;
        X0.style.width = T0 + "px";
        X0.width = T0;
        X0.style.height = a0 + "px";
        X0.height = a0;
        X0.draggable = m5i.C14;
        p0.appendChild(X0);
        return X0;
    },
    CreatedTxtImg: function(E, z, T0, a0, p0, G0, Q0) {
        var X0;
        if (p0) {
            X0 = document.createElement(m5i.r6);
            languageUI.getCanVas(E, X0, m5i.R3b);
        } else {
            X0 = loadRec.resource[E];
        }
        G0.push(X0);
        X0.style.position = m5i.v9;
        X0.style.left = z + m5i.B24;
        X0.style.top = T0 + m5i.B24;
        if (Q0) {
            X0.style.cursor = m5i.V8;
        }
        X0.draggable = m5i.C14;
        a0.appendChild(X0);
        return X0;
    },
    btbgMarginl: parseInt(m5i.a44, m5i.H24),
    btbgMargint: parseInt(m5i.K44, m5i.H24),
    CreatedButton: function(z, T0, a0, p0, G0, Q0) {
        var X0 = document.createElement(m5i.r6),
            U0, q0;
        if (G0) {
            U0 = document.createElement(m5i.r6);
            languageUI.getCanVas(z, U0, m5i.R3b);
            q0 = this.CreateImgBg("btbg", 0, 0, parseInt(U0.width, 10) + parseInt(this.btbgMarginl, 10), parseInt(U0.height, 10) + parseInt(this.btbgMargint, 10), X0, Q0);
            q0.style.left = parseInt(T0, m5i.H24) - this.btbgMarginl / m5i.C4 + m5i.B24;
            q0.style.top = parseInt(a0, m5i.H24) - this.btbgMargint / m5i.C4 + m5i.O4 + m5i.B24;
            q0.style.cursor = m5i.V8;
            q0.draggable = m5i.C14;
        } else {
            U0 = loadRec.resource[z];
            X0.btn = U0;
        }
        Q0.push(U0);
        U0.style.position = m5i.v9;
        U0.style.left = T0 + m5i.B24;
        U0.style.top = a0 + m5i.B24;
        U0.style.cursor = m5i.V8;
        U0.draggable = m5i.C14;
        X0.appendChild(U0);
        p0.appendChild(X0);
        U0.onmousedown = function(E) {
            U0.style.top = (a0 + m5i.I4) + m5i.B24;
            U0.style.left = (T0 + m5i.I4) + m5i.B24;
            if (q0) q0.style.top = (a0 - m5i.I4 - this.btbgMargint / m5i.C4) + m5i.B24;
        };
        U0.onmouseup = function(E) {
            U0.style.top = a0 + m5i.B24;
            U0.style.left = T0 + m5i.B24;
            if (q0) q0.style.top = (a0 - this.btbgMargint / m5i.C4) + m5i.B24;
        };
        Q0.push(X0);
        return X0;
    }
};;
var loadRec = {
        images: [{
            src: m5i.N74,
            id: m5i.f04
        }, {
            src: m5i.s3b,
            id: m5i.d44
        }, {
            src: m5i.p44,
            id: m5i.Q1b
        }, {
            src: m5i.p94,
            id: m5i.v1b
        }, {
            src: m5i.x9,
            id: m5i.a9b
        }, {
            src: m5i.m7,
            id: m5i.b9b
        }, {
            src: m5i.U2,
            id: m5i.y9b
        }, {
            src: m5i.f3b,
            id: m5i.V7b
        }, {
            src: m5i.u44,
            id: m5i.X8b
        }, {
            src: m5i.g8b,
            id: m5i.V14
        }, {
            src: m5i.k4b,
            id: m5i.Z14
        }, {
            src: m5i.c44,
            id: m5i.u2
        }, {
            src: m5i.t9,
            id: m5i.q4
        }, {
            src: m5i.X5,
            id: m5i.E2
        }, {
            src: m5i.s8b,
            id: m5i.k6
        }, {
            src: m5i.C4b,
            id: m5i.I14
        }, {
            src: m5i.B2,
            id: m5i.j6b
        }, {
            src: m5i.i24,
            id: m5i.v9b
        }, {
            src: m5i.X3b,
            id: m5i.T7
        }, {
            src: m5i.O6,
            id: m5i.G4
        }, {
            src: m5i.o44,
            id: m5i.B6
        }, {
            src: m5i.d5,
            id: m5i.X6
        }, {
            src: m5i.c3b,
            id: m5i.f1
        }, {
            src: m5i.O1b,
            id: m5i.a1
        }, {
            src: m5i.i2b,
            id: m5i.W4
        }, {
            src: m5i.p74,
            id: m5i.e0
        }, {
            src: m5i.Z94,
            id: m5i.A2
        }, {
            src: m5i.C1b,
            id: m5i.P4
        }, {
            src: m5i.u04,
            id: m5i.V7
        }, {
            src: m5i.n1,
            id: m5i.T84
        }, {
            src: m5i.R6b,
            id: m5i.L14
        }, {
            src: m5i.a0b,
            id: m5i.g14
        }, {
            src: m5i.H2,
            id: m5i.T1
        }, {
            src: m5i.u3,
            id: m5i.N2
        }, {
            src: m5i.b4,
            id: m5i.Y6b
        }, {
            src: m5i.n0b,
            id: m5i.A4b
        }, {
            src: m5i.Y24,
            id: m5i.J5b
        }, {
            src: m5i.N5b,
            id: m5i.m7b
        }, {
            src: m5i.R0b,
            id: m5i.i7b
        }, {
            src: m5i.v94,
            id: m5i.K1b
        }, {
            src: m5i.w1,
            id: m5i.U9b
        }, {
            src: m5i.L8,
            id: m5i.b6b
        }, {
            src: m5i.b4b,
            id: m5i.q1b
        }, {
            src: m5i.S74,
            id: m5i.M5b
        }, {
            src: m5i.y9,
            id: m5i.p04
        }, {
            src: m5i.F7,
            id: m5i.X5b
        }, {
            src: m5i.J84,
            id: m5i.f5b
        }, {
            src: m5i.W0b,
            id: m5i.t6b
        }, {
            src: m5i.g1,
            id: m5i.l1b
        }, {
            src: m5i.U8,
            id: m5i.n2b
        }, {
            src: m5i.Q0b,
            id: m5i.G2b
        }, {
            src: m5i.K0b,
            id: m5i.i6b
        }, {
            src: m5i.j8,
            id: m5i.F1b
        }, {
            src: m5i.j9,
            id: m5i.g7
        }, {
            src: m5i.R8,
            id: m5i.u14
        }, {
            src: m5i.P3b,
            id: m5i.g04
        }, {
            src: m5i.N4,
            id: m5i.J3b
        }, {
            src: m5i.w2,
            id: m5i.w4b
        }, {
            src: m5i.b9,
            id: m5i.f0b
        }, {
            src: m5i.D3,
            id: m5i.N64
        }, {
            src: m5i.H1b,
            id: m5i.l24
        }, {
            src: m5i.o7b,
            id: m5i.V4
        }, {
            src: m5i.L94,
            id: m5i.t8
        }, {
            src: m5i.Q74,
            id: m5i.u2b
        }, {
            src: m5i.g9b,
            id: m5i.v2b
        }, {
            src: m5i.e1b,
            id: m5i.f8
        }, {
            src: m5i.h7,
            id: m5i.m0
        }, {
            src: m5i.Q74,
            id: m5i.o1
        }, {
            src: m5i.g9b,
            id: m5i.h3b
        }, {
            src: m5i.e1b,
            id: m5i.L6b
        }, {
            src: m5i.h7,
            id: m5i.d0
        }],
        fonts: [m5i.r24],
        loadPerc: m5i.V3b,
        resource: {},
        data: [],
        preload: function(a0) {
            var p0 = m5i.c4,
                G0 = m5i.c4,
                Q0 = m5i.c4,
                X0 = m5i.c4,
                U0 = m5i.c4;
            if (loadRec.images && loadRec.images.length > m5i.c4) {
                Q0 = loadRec.images.length;
            }
            if (loadRec.fonts && loadRec.fonts.length > m5i.c4) {
                X0 = loadRec.fonts.length;
            }
            U0 = Q0 + X0;

            function q0(z) {
                if (X0 == m5i.c4) {
                    if (z) z();
                    return;
                }
                WebFont.load({
                    custom: {
                        families: loadRec.fonts
                    },
                    timeout: 1500,
                    fontactive: function() {
                        loadRec.loadPerc.style.width = Math.floor(++p0 * 100 / U0) + '%';
                    },
                    fontinactive: function(E) {
                        console.log('ERROR: Font not found: ' + E);
                    },
                    active: function() {
                        if (z) {
                            z();
                        }
                    }
                });
            }

            function O0(z) {
                var T0 = new Image();
                T0.onload = function() {
                    loadRec.loadPerc.style.width = Math.floor(++p0 * 100 / U0) + '%';
                    if (p0 < Q0) {
                        O0(z);
                    } else if (z) {
                        z();
                    }
                };
                T0.onerror = function(E) {
                    alert("ERROR: Image not found: " + E.target.src);
                };
                loadRec.resource[loadRec.images[G0].id] = T0;
                T0.src = loadRec.images[G0++].src;
            }
            O0(function() {
                q0(a0);
            });
        },
        creatloading: function() {
            var p0 = 'backPos',
                G0 = 'static/loading.jpg',
                Q0 = new Image();
            if (typeof ThirdParty.splashScreen !== m5i.E2b) {
                Q0.src = ThirdParty.splashScreen;
            } else {
                Q0.src = G0;
            }
            Q0.className = p0;
            gameContainer.appendChild(Q0);
            this.data.push(Q0);
            Q0.onload = function() {
                var E = 'loadPerc',
                    z = '<div id="loadPerc"></div>',
                    T0 = 'progressbar',
                    a0 = document.createElement(m5i.m44);
                a0.className = T0;
                a0.innerHTML = z;
                gameContainer.appendChild(a0);
                loadRec.data.push(a0);
                loadRec.loadPerc = document.getElementById(E);
                loadRec.preload(function() {
                    orderInit(m5i.C4);
                    ThirdParty.loadingComplete();
                });
            };
        }
    },
    GameMenu = {
        startGame: function() {
            window.focus();
            var E = GameLib.getStorage(m5i.w5);
            if (m5i.C14 === E) {
                E = m5i.I4;
            }
            if (E > m5i.I4) {
                GameMenu.savePanel.style.display = m5i.n6b;
                GameMenu.savePanel.style.zIndex = m5i.S14;
            } else {
                ThirdParty.gameStart();
                GameLib.setStorage({
                    score: m5i.c4,
                    level: m5i.I4
                });
                orderInit(m5i.s4);
                GameMenu.remAll();
            }
        },
        showMenu: function() {
            var z = 'copycredits',
                T0 = 'static/copyshare.png',
                a0 = '#copyshareMap',
                p0 = 'img',
                G0 = '',
                Q0 = 'copyshareMap',
                X0 = 'map',
                U0 = 'map[name="copyshareMap"]',
                q0 = this.data;
            GameSound.stopMusic();
            ThirdParty.mainMenu();
            var O0 = CreateAll.CreatedImg(m5i.u14, m5i.c4, m5i.c4, gameContainer, q0);
            Hammer(O0).on(m5i.L8b, function(E) {
                languageUI.closeUI();
            });
            O0 = languageUI.getButton("d_Play", 200, 55, 150, 280, 18, 4, true, true, gameContainer, q0);
            O0.onmousedown = function() {
            
                    GameMenu.startGame();
                
            };
            O0 = languageUI.getButton("d_Help", 200, 55, 450, 280, 18, 4, true, true, gameContainer, q0);
            Hammer(O0).on(m5i.L8b, function() {
                orderInit(m5i.O4);
                GameMenu.remAll();
            });
            if (GameLib.online) {
                O0 = languageUI.getButton("d_HighScore", 200, 55, 100, 350, 18, 4, true, true, gameContainer, q0);
                Hammer(O0).on(m5i.L8b, function(E) {
                    // ThirdParty.showLeaderboard();
                });
                O0 = languageUI.getButton("d_More", 200, 55, 500, 350, 18, 4, true, true, gameContainer, q0);
                O0.onclick = function() {
                    ThirdParty.moreGames();
                };
            }
            this.savePanel = CreateAll.CreatedPanel(0, 0, "panel_bg", gameContainer, q0);
            this.createSave();
            languageUI.init(gameContainer);
            if (GameConfig.credits) {
                if (!document.querySelector(U0)) {
                    var I0 = document.createElement(X0);
                    I0.name = Q0;
                    I0.innerHTML = G0;
                    document.body.appendChild(I0);
                }
                var H0 = document.createElement(p0);
                H0.useMap = a0;
                H0.src = T0;
                H0.className = z;
                gameContainer.appendChild(H0);
                q0.push(H0);
            }
        },
        createSave: function() {
            im = languageUI.getButton("d_ContinuePreviousGame", 320, 60, 250, 170, 32, 18, true, true, GameMenu.savePanel, this.data);
            Hammer(im).on(m5i.L8b, function(E) {
                orderInit(m5i.s4);
                GameMenu.savePanel.style = m5i.i94;
                GameMenu.remAll();
            });
            im = languageUI.getButton("d_StartNewGame", 320, 60, 250, 260, 32, 18, true, true, GameMenu.savePanel, this.data);
            Hammer(im).on(m5i.L8b, function(E) {
                GameLib.setStorage({
                    score: m5i.c4,
                    level: m5i.I4
                });
                GameMenu.savePanel.style = m5i.i94;
                orderInit(m5i.s4);
                GameMenu.remAll();
            });
        },
        savePanel: m5i.V3b,
        data: [],
        remAll: function() {
            while (this.data.length > m5i.c4) {
                var E = this.data.pop();
                if (E && E.parentNode) {
                    E.parentNode.removeChild(E);
                }
            }
        }
    },
    GameHelp = {
        showHelp: function() {
            ThirdParty.gameHelp();
            var z = CreateAll.CreatedImg(m5i.g7, m5i.c4, m5i.c4, gameContainer, this.data);
            z = languageUI.getButton("d_Back", 200, 60, 300, 420, 18, 8, true, true, gameContainer, this.data);
            Hammer(z).on(m5i.L8b, function(E) {
                orderInit(m5i.C4);
                GameHelp.remAll();
            });
            CreateAll.CreatedImg("help", 83, 240, gameContainer, this.data);
            z = languageUI.getText("d_Howtoplay", 350, 80, 280, 0, gameContainer, this.data);
            z.style.fontSize = m5i.P6b;
            z = languageUI.getText("d_HowtoplayText", 600, 70, 90, 95, gameContainer, this.data);
        },
        data: [],
        remAll: function() {
            while (this.data.length > m5i.c4) {
                var E = this.data.pop();
                if (E && E.parentNode) {
                    E.parentNode.removeChild(E);
                }
            }
        }
    };

function GamePlay() {
    var l0 = 670,
        n0 = 330,
        u0 = "g",
        K0 = 84,
        W0 = m5i.K44,
        R0 = K0,
        E0 = m5i.c4,
        v0 = m5i.c4,
        B0 = m5i.I4,
        h0 = m5i.l44,
        t0, r0, S0, Z4, c0, P0, X4, b0, p4, u4, i2, i4;

    function o4() {
        var z = "release",
            T0 = "drag",
            a0 = "touch",
            p0 = 'score';
        B0 = GameLib.getStorage(m5i.w5);
        if (m5i.C14 === B0 || B0 <= m5i.c4) {
            B0 = m5i.I4;
        }
        L2.innerHTML = B0 + (h0 == m5i.c4 ? m5i.n6b : m5i.Y1b + h0);
        E0 = GameLib.getStorage(p0);
        if (m5i.C14 === E0 || E0 <= m5i.c4) {
            E0 = m5i.c4;
        }
        I2.innerHTML = E0;
        v0 = m5i.s64 * m5i.A4;
        if (v0 < m5i.H6) v0 = m5i.H6;
        s2();
        document.body.addEventListener(m5i.e44, function(E) {
            E.preventDefault();
        }, m5i.C14);
        r0 = CreateAll.CreateDiv(0, 0, gameContainer, M0);
        Hammer(r0).on(a0, B4).on(T0, t4).on(z, j4);
        y4();
        i4 = CreateAll.CreateDiv(0, 0, r0, M0);
        i4.bg = CreateAll.CreateImgBg("frame", -20, -30, 50, 36, i4, M0);
        i4.style.display = m5i.i94;
        i4.style.zIndex = m5i.H94;
        i4.txt = CreateAll.CreateText(-20, -26, i4, M0);
        i4.txt.style.width = 50 + "px";
        t0 = setInterval(g2, m5i.S14);
    }

    function y4() {
        var E = 440,
            z = '@';
        Z4 = [];
        c0 = [];
        P0 = [];
        r0.innerHTML = m5i.n6b;
        var T0 = GameConfig.levelData[B0],
            a0 = T0[Math.floor(Math.random() * T0.length)].concat(),
            T0 = a0.split(z),
            p0 = T0.length;
        for (var G0 = m5i.c4; G0 < p0; G0++) {
            T0[G0] = T0[G0].split(m5i.D74);
        }
        S0 = E / p0;
        for (var Q0 = m5i.c4; Q0 < p0; Q0++) {
            Z4.push([]);
            for (var X0 = m5i.c4; X0 < p0; X0++) {
                var U0 = T0[Q0][X0],
                    q0 = Y2(R0 + X0 * S0, W0 + Q0 * S0, S0, parseInt(U0, m5i.H24));
                Z4[Q0].push(q0);
            }
        }
    }

    function y0(E, z, T0, a0) {
        var p0 = "frameBorder";
        U4(c0);
        for (var G0 = E; G0 <= T0; G0++) {
            for (var Q0 = z; Q0 <= a0; Q0++) {
                var X0 = Z4[Q0][G0];
                f4(X0, m5i.R3b);
                c0.push(X0);
                X0.isfiexed = m5i.R3b;
            }
        }
        var U0 = CreateAll.CreateDiv(E * S0 + R0, z * S0 + W0, r0, M0);
        U0.style.width = (T0 - E + 1) * S0 - 6 + "px";
        U0.style.height = (a0 - z + 1) * S0 - 6 + "px";
        U0.className = p0 + C0;
        c0.unshift(U0);
        l2(c0);
    }

    function h4() {
        C0++;
        C0 = C0 > m5i.n4 ? m5i.I4 : C0;
        return C0;
    }

    function U4(E) {
        if (E.length <= m5i.c4) return;
        var z = E.shift();
        if (z.parentNode) z.parentNode.removeChild(z);
        while (E.length > m5i.c4) {
            var T0 = E.pop();
            T0.isfiexed = m5i.C14;
            f4(T0, m5i.C14);
            if (T0.correctNum) T0.correctNum.style.display = m5i.i94;
        }
    }
    var C0 = m5i.I4;

    function f4(E, z) {
        var T0 = "g9",
            a0 = "g8",
            p0 = "g7",
            G0 = "g6",
            Q0 = "g5",
            X0 = "g4",
            U0 = "g3",
            q0 = "g2",
            O0 = "g1";
        if (z > m5i.c4) {
            E[u0 + C0].style.display = m5i.n6b;
        } else {
            E[O0].style.display = m5i.i94;
            E[q0].style.display = m5i.i94;
            E[U0].style.display = m5i.i94;
            E[X0].style.display = m5i.i94;
            E[Q0].style.display = m5i.i94;
            E[G0].style.display = m5i.i94;
            E[p0].style.display = m5i.i94;
            E[a0].style.display = m5i.i94;
            E[T0].style.display = m5i.i94;
        }
    }

    function B4(E) {
        if (m4.style.display == m5i.n6b || Y4.style.display == m5i.n6b || v0 <= m5i.c4) return;
        p4 = X4 = Math.floor((MouseUtil.getMouseX(E) - R0) / S0);
        u4 = b0 = Math.floor((MouseUtil.getMouseY(E) - W0) / S0);
        var z = Z4[b0][X4];
        if (!J2(z)) {
            h4();
            y0(X4, b0, p4, u4);
        }
        i4.style.display = m5i.n6b;
        i4.txt.innerHTML = c0.length > 0 ? c0.length - 1 : 0;
        i4.style.top = MouseUtil.getMouseY(E) - m5i.w44 + m5i.B24;
        i4.style.left = MouseUtil.getMouseX(E) + m5i.B24;
        i2 = m5i.R3b;
    }

    function t4(E) {
        if (m4.style.display == m5i.n6b || Y4.style.display == m5i.n6b || v0 <= m5i.c4) return;
        if (i2) {
            var z = Math.floor((MouseUtil.getMouseX(E) - R0) / S0),
                T0 = Math.floor((MouseUtil.getMouseY(E) - W0) / S0);
            if (z != p4 || T0 != u4) {
                p4 = z;
                u4 = T0;
                if (p4 >= m5i.c4 && p4 < Z4.length && u4 >= m5i.c4 && u4 < Z4.length) {
                    y0(Math.min(X4, p4), Math.min(b0, u4), Math.max(X4, p4), Math.max(b0, u4));
                    for (var a0 = m5i.I4; a0 < c0.length; a0++) {
                        J2(c0[a0]);
                    }
                    for (var a0 = m5i.I4; a0 < c0.length; a0++) {
                        f4(c0[a0], m5i.R3b);
                    }
                }
            }
            i4.txt.innerHTML = c0.length > 0 ? c0.length - 1 : 0;
            i4.style.top = MouseUtil.getMouseY(E) - m5i.w44 + m5i.B24;
            i4.style.left = MouseUtil.getMouseX(E) + m5i.B24;
        }
    }

    function j4(E) {
        i2 = m5i.C14;
        i4.style.display = m5i.i94;
        if (c0.length == m5i.C4) {
            U4(c0);
        } else if (c0.length > m5i.C4) {
            for (var z = m5i.I4; z < c0.length; z++) {
                J2(c0[z]);
            }
            for (var z = m5i.I4; z < c0.length; z++) {
                f4(c0[z], m5i.R3b);
                c0[z].isfiexed = m5i.R3b;
                l2(c0);
            }
            P0.push(c0.concat());
        }
        c0 = [];
        C2();
    }

    function J2(E) {
        for (var z = m5i.c4; z < P0.length; z++) {
            if (ArrayUtil.isInArray(P0[z], E)) {
                U4(P0[z]);
                P0.splice(z, m5i.I4);
                return m5i.R3b;
            }
        }
        return m5i.C14;
    }

    function Y2(E, z, T0, a0) {
        var p0 = 'num_',
            G0 = 'num',
            Q0 = 'grid',
            X0 = 'giza_css',
            U0 = CreateAll.CreateDiv(E, z, r0, M0);
        U0.isfiexed = m5i.C14;
        U0.draggable = m5i.C14;
        var q0;
        for (var O0 = m5i.I4; O0 <= m5i.n4; O0++) {
            q0 = new Image();
            q0.className = X0;
            q0.src = loadRec.resource[Q0 + O0].src;
            q0.style.display = m5i.i94;
            q0.width = T0;
            q0.height = T0;
            U0[u0 + O0] = q0;
            U0.appendChild(q0);
        }
        q0 = new Image();
        q0.className = X0;
        q0.src = loadRec.resource[Q0].src;
        q0.width = T0;
        q0.height = T0;
        U0.f = q0;
        U0.appendChild(q0);
        if (a0 > m5i.c4) {
            q0 = new Image();
            q0.className = X0;
            q0.src = loadRec.resource[G0 + a0].src;
            q0.width = T0;
            q0.height = T0;
            U0.normalNum = q0;
            U0.appendChild(q0);
            q0 = new Image();
            q0.className = X0;
            q0.src = loadRec.resource[p0 + a0].src;
            q0.style.display = m5i.i94;
            q0.width = T0;
            q0.height = T0;
            U0.correctNum = q0;
            U0.appendChild(q0);
        }
        U0.num = a0;
        return U0;
    }

    function C2() {
        for (var E = m5i.c4; E < Z4.length; E++) {
            for (var z = m5i.c4; z < Z4.length; z++) {
                if (!Z4[E][z].isfiexed) return;
            }
        }
        var T0 = m5i.c4,
            a0 = m5i.c4;
        for (E = m5i.c4; E < P0.length; E++) {
            T0 = m5i.c4, a0 = m5i.c4;
            for (z = m5i.I4; z < P0[E].length; z++) {
                var p0 = P0[E][z];
                if (p0.num > m5i.c4) {
                    if (T0 == m5i.c4) T0 = p0.num;
                    else return;
                }
                a0++;
            }
            if (a0 != T0) return;
        }
        M2();
    }

    function l2(E) {
        var z = m5i.c4,
            T0 = m5i.c4,
            a0;
        for (var p0 = m5i.I4; p0 < E.length; p0++) {
            var G0 = E[p0];
            if (G0.num > m5i.c4) {
                if (z == m5i.c4) {
                    z = G0.num;
                    a0 = G0;
                } else return;
            }
            T0++;
        }
        if (T0 == z) a0.correctNum.style.display = m5i.n6b;
    }

    function M2() {
        var E = 10000;
        q2();
        var z = Math.floor(parseInt(v0 * m5i.A4, m5i.H24));
        Y6(z);
        h2.innerHTML = z;
        Y4.style.display = m5i.n6b;
        Y4.style.zIndex = E;
        ThirdParty.levelComplete(B0);
        Y4.next.style.display = m5i.i94;
        Y4.end.style.display = m5i.i94;
        B0++;
        if (h0 == m5i.c4 || B0 > h0) {
            ThirdParty.gameComplete();
            Y4.next.style.display = m5i.i94;
            Y4.end.style.display = m5i.n6b;
        } else {
            Y4.next.style.display = m5i.n6b;
            Y4.end.style.display = m5i.i94;
        }
        GameLib.setStorage({
            level: B0,
            score: E0
        });
    }

    function W2() {
        var E = "SFail";
        GameSound.playSound(E);
        GameLib.setStorage({
            level: B0,
            score: E0
        });
        q2();
        O2();
        orderInit(m5i.A4);
    }

    function q2() {
        if (t0) clearInterval(t0);
    }

    function g2() {
        var E = "STick";
        if (m4.style.display == m5i.n6b || Y4.style.display == m5i.n6b || v0 <= m5i.c4) {
            return;
        }
        v0--;
        s2();
        if (v0 <= m5i.c4) {
            e4.style.display = m5i.n6b;
            e4.style.zIndex = m5i.S14;
            ThirdParty.gameOver();
 
            setTimeout(W2, m5i.O3b);
            return;
        } else if (v0 < m5i.H24) {
            GameSound.playSound(E);
        }
    }

    function Y6(E) {
        E0 += E;
        I2.innerHTML = E0;
    }

    function s2() {
        var E = ':',
            z = Math.floor(v0),
            T0 = m5i.n6b + Math.floor(z / m5i.s64);
        if (T0.length == m5i.I4) {
            T0 = m5i.B7b + T0;
        }
        var a0 = m5i.n6b + Math.floor(z % m5i.s64);
        if (a0.length == m5i.I4) {
            a0 = m5i.B7b + a0;
        }
        m2.innerHTML = T0 + E + a0;
    }

    function r2(E) {
        var z = new Array,
            T0, a0;
        while (E.length > m5i.c4) {
            T0 = Math.floor(E.length * Math.random());
            z.push(E[T0]);
            E.splice(T0, m5i.I4);
        }
        return z;
    }
    this.pauseGame = function() {
        var E = 10001;
        if (m4.style.display == m5i.n6b || Y4.style.display == m5i.n6b) {
            return;
        }
        m4.style.display = m5i.n6b;
        m4.style.zIndex = E;
    };
    this.showPlay = function() {
        if (!this.idleListenerAdded) {
            window.addEventListener(m5i.B5, function() {
                setTimeout(gamePlay.pauseGame, m5i.H6);
            }, m5i.C14);
            this.idleListenerAdded = m5i.R3b;
        }
        q2();
        var E = GameLib.getStorage(m5i.w5);
        E = E ? E : m5i.I4;
        E = (E - m5i.I4) % m5i.A4 + m5i.I4;
        CreateAll.CreatedImg("back_game", 0, 0, gameContainer, M0);
        CreateAll.CreatedImg("back" + E, 0, 0, gameContainer, M0);
        GameSound.stopMusic();
        GameSound.playMusic();
        var z;
        languageUI.getButton("d_Score", 110, 35, 670, 100, 1, 2, false, false, gameContainer, M0);
        I2 = CreateAll.CreateText(670, 130, gameContainer, M0);
        I2.innerHTML = m5i.B7b;
        languageUI.getButton("d_Time", 110, 35, 670, 170, 1, 2, false, false, gameContainer, M0);
        m2 = CreateAll.CreateText(670, 200, gameContainer, M0);
        languageUI.getButton("d_Level", 110, 35, 670, 30, 1, 2, false, false, gameContainer, M0);
        L2 = CreateAll.CreateText(670, 60, gameContainer, M0);
        L2.innerHTML = m5i.B7b;
        z = languageUI.getButton("d_Pause", 110, 40, 670, 320, 1, 2, true, true, gameContainer, M0);
        Hammer(z).on(m5i.L8b, gamePlay.pauseGame);
        if (ThirdParty.enableFullscreenToggle && screenfull.enabled) {
            fullscreenHandle.init(700, 230, gameContainer, M0, 50, 40);
        }
        m4 = CreateAll.CreatedPanel(0, 0, "panel_bg", gameContainer, M0);
        Y4 = CreateAll.CreatedPanel(0, 0, "panel_bg", gameContainer, M0);
        e4 = CreateAll.CreatedPanel(0, 0, "panel_bg", gameContainer, M0);
        Q6();
        G6();
        K2();
        o4();
    };
    var I2, m2, L2, h2, p6, m4, Y4, a6, e4;

    function C6() {
        languageUI.getText("d_Shuffle", 280, 55, 330, 150, e4, M0);
        im.style.fontSize = m5i.P6b;
    }

    function G6() {
        var E = "d_Timeout",
            z = languageUI.getText(E, m5i.Y14, m5i.q64, n0, m5i.w6b, e4, M0);
        z.style.fontSize = m5i.P6b;
    }

    function K2() {
        var z = "38px",
            T0 = 302,
            a0 = "d_NextLevel",
            p0 = languageUI.getButton(a0, m5i.G1b, m5i.q64, m5i.H6, T0, m5i.l44, m5i.s4, m5i.R3b, m5i.R3b, Y4, M0);
        Hammer(p0).on(m5i.L8b, function(E) {
            Y4.style.display = m5i.i94;
            q2();
            O2();
            orderInit(m5i.s4);
        });
        Y4.next = p0;
        p0 = languageUI.getButton("d_Endgame", 200, 55, 300, 302, 18, 4, true, true, Y4, M0);
        Hammer(p0).on(m5i.L8b, function(E) {
            Y4.style.display = m5i.i94;
            W2();
        });
        Y4.end = p0;
        p0 = languageUI.getText("d_LevelCompleted", 400, 55, 200, 140, Y4, M0);
        p0.style.fontSize = z;
        p0.style.textAlign = "center";
        languageUI.getText("d_Bonus", 230, 40, 320, 210, Y4, M0);
        h2 = CreateAll.CreateText(400, 210, Y4, M0);
    }

    function Q6() {
        var z = 410,
            T0 = 735,
            a0 = 120;
        im = languageUI.getButton("d_Menu", 240, 55, 280, 230, 18, 4, true, true, m4, M0);
        Hammer(im).on(m5i.L8b, function(E) {
            q2();
            O2();
            orderInit(m5i.C4);
        });
        im = languageUI.getButton("d_Continue", 240, 55, 280, 300, 18, 4, true, true, m4, M0);
        Hammer(im).on(m5i.L8b, function(E) {
            m4.style.display = m5i.i94;
        });
        var p0 = CreateAll.CreatedButton(m5i.v2b, m5i.Y14, a0, m4, m5i.C14, M0),
            G0 = CreateAll.CreatedButton(m5i.u2b, m5i.Y14, a0, m4, m5i.C14, M0),
            Q0 = CreateAll.CreatedButton(m5i.h3b, T0, m5i.W1b, gameContainer, m5i.C14, M0);
        Q0.btn.width = 60;
        Q0.btn.height = 42;
        var X0 = CreateAll.CreatedButton(m5i.o1, T0, m5i.W1b, gameContainer, m5i.C14, M0);
        X0.btn.width = 60;
        X0.btn.height = 42;
        var U0 = function(E) {
            p0.style.display = m5i.n6b;
            G0.style.display = m5i.i94;
            Q0.style.display = m5i.n6b;
            X0.style.display = m5i.i94;
            GameSound.muteSound(m5i.R3b);
        };
        Hammer(G0).on(m5i.L8b, U0);
        Hammer(X0).on(m5i.L8b, U0);
        U0 = function(E) {
            p0.style.display = m5i.i94;
            G0.style.display = m5i.n6b;
            Q0.style.display = m5i.i94;
            X0.style.display = m5i.n6b;
            GameSound.muteSound(m5i.C14);
        };
        Hammer(p0).on(m5i.L8b, U0);
        Hammer(Q0).on(m5i.L8b, U0);
        if (GameSound.soundMuted) {
            Q0.style.display = m5i.n6b;
            X0.style.display = m5i.i94;
            p0.style.display = m5i.n6b;
            G0.style.display = m5i.i94;
        } else {
            Q0.style.display = m5i.i94;
            X0.style.display = m5i.n6b;
            p0.style.display = m5i.i94;
            G0.style.display = m5i.n6b;
        }
        var q0 = CreateAll.CreatedButton(m5i.m0, z, a0, m4, m5i.C14, M0),
            O0 = CreateAll.CreatedButton(m5i.f8, z, a0, m4, m5i.C14, M0),
            I0 = CreateAll.CreatedButton(m5i.d0, l0, m5i.W1b, gameContainer, m5i.C14, M0);
        I0.btn.width = 60;
        I0.btn.height = 42;
        var H0 = CreateAll.CreatedButton(m5i.L6b, l0, m5i.W1b, gameContainer, m5i.C14, M0);
        H0.btn.width = 60;
        H0.btn.height = 42;
        U0 = function() {
            q0.style.display = m5i.n6b;
            O0.style.display = m5i.i94;
            I0.style.display = m5i.n6b;
            H0.style.display = m5i.i94;
            GameSound.muteMusic(m5i.R3b);
        };
        Hammer(O0).on(m5i.L8b, U0);
        Hammer(H0).on(m5i.L8b, U0);
        U0 = function() {
            q0.style.display = m5i.i94;
            O0.style.display = m5i.n6b;
            I0.style.display = m5i.i94;
            H0.style.display = m5i.n6b;
            GameSound.muteMusic(m5i.C14);
        };
        Hammer(q0).on(m5i.L8b, U0);
        Hammer(I0).on(m5i.L8b, U0);
        if (GameSound.musicMuted) {
            I0.style.display = m5i.n6b;
            H0.style.display = m5i.i94;
            q0.style.display = m5i.n6b;
            O0.style.display = m5i.i94;
        } else {
            I0.style.display = m5i.i94;
            H0.style.display = m5i.n6b;
            q0.style.display = m5i.i94;
            O0.style.display = m5i.n6b;
        }
    }
    var M0 = [];

    function O2() {
        while (M0.length > m5i.c4) {
            var E = M0.pop();
            if (E && E.parentNode) {
                E.parentNode.removeChild(E);
            }
        }
    }
}
var ArrayUtil = {
        getLastItem: function(E) {
            if (E.length == m5i.c4) return m5i.V3b;
            var z = E.length - m5i.I4;
            while (z > m5i.c4) {
                if (E[z]) return E[z];
                z--;
            }
            return E[z];
        },
        removeItem: function(E, z) {
            for (var T0 = m5i.c4; T0 < E.length; T0++) {
                if (z == E[T0]) {
                    E.splice(T0, m5i.I4);
                    break;
                }
            }
        },
        isInArray: function(E, z) {
            return E.indexOf(z) > -m5i.I4;
        }
    },
    MouseUtil = {
        getMouseX: function(E) {
            var z = gameContainer.getBoundingClientRect();
            return (E.gesture.center.clientX - z.left) / GameLib.scale;
        },
        getMouseY: function(E) {
            var z = gameContainer.getBoundingClientRect();
            return (E.gesture.center.clientY - z.top) / GameLib.scale;
        }
    },
    Tween = {
        iDuration: m5i.B44,
        Linear: function(E, z, T0, a0) {
            return T0 * E / a0 + z;
        },
        bigTo: function(E, z, T0, a0, p0, G0, Q0, X0) {
            X0 = X0 ? X0 : m5i.b3b;
            var U0 = E.style,
                q0 = m5i.c4,
                O0 = Tween.iDuration = z,
                I0, H0 = parseInt(U0.left, m5i.H24),
                l0 = T0 - parseInt(U0.left, m5i.H24),
                n0 = parseInt(U0.top, m5i.H24),
                u0 = a0 - parseInt(U0.top, m5i.H24),
                K0 = parseInt(E.width, m5i.H24),
                W0 = p0 - parseInt(E.width, m5i.H24),
                R0 = parseInt(E.height, m5i.H24),
                E0 = G0 - parseInt(E.height, m5i.H24);
            U0.zIndex = m5i.H6;

            function v0() {
                if (q0 < O0) {
                    q0++;
                    U0.left = Math.ceil(Tween[X0](q0, H0, l0, O0)) + m5i.B24;
                    U0.top = Math.ceil(Tween[X0](q0, n0, u0, O0)) + m5i.B24;
                    E.width = Math.ceil(Tween[X0](q0, K0, W0, O0));
                    E.height = Math.ceil(Tween[X0](q0, R0, E0, O0));
                    I0 = setTimeout(v0, m5i.H24);
                } else {
                    U0.left = T0 + m5i.B24;
                    U0.top = a0 + m5i.B24;
                    E.width = p0;
                    E.height = G0;
                    if (Q0) Q0(E);
                }
            }
            v0();
        },
        moveTo: function(E, z, T0, a0, p0, G0) {
            G0 = G0 ? G0 : m5i.b3b;
            var Q0 = E.style,
                X0 = m5i.c4,
                U0 = Tween.iDuration = z,
                q0, O0 = parseInt(Q0.left, m5i.H24),
                I0 = T0 - parseInt(Q0.left, m5i.H24),
                H0 = parseInt(Q0.top, m5i.H24),
                l0 = a0 - parseInt(Q0.top, m5i.H24);
            Q0.zIndex = m5i.H6;

            function n0() {
                if (X0 < U0) {
                    X0++;
                    Q0.left = Math.ceil(Tween[G0](X0, O0, I0, U0)) + m5i.B24;
                    Q0.top = Math.ceil(Tween[G0](X0, H0, l0, U0)) + m5i.B24;
                    q0 = setTimeout(n0, m5i.H24);
                } else {
                    Q0.left = T0 + m5i.B24;
                    Q0.top = a0 + m5i.B24;
                    if (p0) p0(E);
                }
            }
            n0();
        },
        moveToR: function(E, z, T0, a0, p0, G0, Q0) {
            Q0 = Q0 ? Q0 : m5i.b3b;
            var X0 = E.style,
                U0 = m5i.c4,
                q0 = Tween.iDuration = z,
                O0, I0 = parseInt(X0.left, m5i.H24),
                H0 = T0 - parseInt(X0.left, m5i.H24),
                l0 = parseInt(X0.top, m5i.H24),
                n0 = a0 - parseInt(X0.top, m5i.H24),
                u0 = m5i.c4,
                K0 = m5i.c4 - p0;
            X0.zIndex = m5i.H6;

            function W0() {
                if (U0 < q0) {
                    U0++;
                    X0.left = Math.ceil(Tween[Q0](U0, I0, H0, q0)) + m5i.B24;
                    X0.top = Math.ceil(Tween[Q0](U0, l0, n0, q0)) + m5i.B24;
                    TransformUtil.rotate(E.back, Tween[Q0](U0, l0, n0, q0));
                    TransformUtil.rotate(E.card, Tween[Q0](U0, l0, n0, q0));
                    O0 = setTimeout(W0, m5i.H24);
                } else {
                    X0.left = T0 + m5i.B24;
                    X0.top = a0 + m5i.B24;
                    TransformUtil.rotate(E.back, p0);
                    TransformUtil.rotate(E.card, p0);
                    if (G0) G0(E);
                }
            }
            W0();
        },
        moveToY: function(E, z, T0, a0, p0) {
            p0 = p0 ? p0 : m5i.b3b;
            var G0 = E.style,
                Q0 = m5i.c4,
                X0 = Tween.iDuration = z,
                U0, q0 = parseInt(G0.top, m5i.H24),
                O0 = T0 - parseInt(G0.top, m5i.H24);
            G0.zIndex = m5i.H6;

            function I0() {
                if (Q0 < X0) {
                    Q0++;
                    G0.top = Math.ceil(Tween[p0](Q0, q0, O0, X0)) + m5i.B24;
                    U0 = setTimeout(I0, m5i.H24);
                } else {
                    G0.top = T0 + m5i.B24;
                    if (a0) a0(E);
                }
            }
            I0();
        },
        moveToX: function(E, z, T0, a0, p0) {
            p0 = p0 ? p0 : m5i.b3b;
            var G0 = E.style,
                Q0 = m5i.c4,
                X0 = Tween.iDuration = z,
                U0, q0 = parseInt(G0.left, m5i.H24),
                O0 = T0 - parseInt(G0.left, m5i.H24);
            G0.zIndex = m5i.H6;

            function I0() {
                if (Q0 < X0) {
                    Q0++;
                    G0.left = Math.ceil(Tween[p0](Q0, q0, O0, X0)) + m5i.B24;
                    U0 = setTimeout(I0, m5i.H24);
                } else {
                    G0.left = T0 + m5i.B24;
                    if (a0) a0(E);
                }
            }
            I0();
        },
        delayMoveToR: function(E, z, T0, a0, p0, G0, Q0) {
            var X0 = E.style,
                U0 = m5i.c4,
                q0 = z,
                O0, I0 = parseInt(X0.left, m5i.H24),
                H0 = a0 - parseInt(X0.left, m5i.H24),
                l0 = parseInt(X0.top, m5i.H24),
                n0 = p0 - parseInt(X0.top, m5i.H24),
                u0 = m5i.c4,
                K0 = m5i.c4 - G0;
            X0.zIndex = m5i.z0b;

            function W0() {
                if (U0 < q0) {
                    U0++;
                    X0.left = Math.ceil(Tween.Linear(U0, I0, H0, q0)) + m5i.B24;
                    X0.top = Math.ceil(Tween.Linear(U0, l0, n0, q0)) + m5i.B24;
                    TransformUtil.rotate(E.back, Tween.Linear(U0, l0, n0, q0));
                    TransformUtil.rotate(E.card, Tween.Linear(U0, l0, n0, q0));
                    O0 = setTimeout(W0, m5i.H24);
                } else {
                    X0.left = a0 + m5i.B24;
                    X0.top = p0 + m5i.B24;
                    TransformUtil.rotate(E.back, G0);
                    TransformUtil.rotate(E.card, G0);
                    if (Q0) Q0(E);
                }
            }
            setTimeout(function() {
                W0();
                GameSound.playSound(m5i.c8);
            }, T0);
        },
        delayMoveTo: function(E, z, T0, a0, p0, G0) {
            var Q0 = E.style,
                X0 = m5i.c4,
                U0 = z,
                q0, O0 = parseInt(Q0.left, m5i.H24),
                I0 = a0 - parseInt(Q0.left, m5i.H24),
                H0 = parseInt(Q0.top, m5i.H24),
                l0 = p0 - parseInt(Q0.top, m5i.H24);
            Q0.zIndex = m5i.z0b;

            function n0() {
                if (X0 < U0) {
                    X0++;
                    Q0.left = Math.ceil(Tween.Linear(X0, O0, I0, U0)) + m5i.B24;
                    Q0.top = Math.ceil(Tween.Linear(X0, H0, l0, U0)) + m5i.B24;
                    q0 = setTimeout(n0, m5i.H24);
                } else {
                    Q0.left = a0 + m5i.B24;
                    Q0.top = p0 + m5i.B24;
                    if (G0) G0(E);
                }
            }
            setTimeout(function() {
                n0();
                GameSound.playSound(m5i.c8);
            }, T0);
        },
        txtTo: function(E, z, T0, a0, p0) {
            var G0 = m5i.c4,
                Q0 = z,
                X0, U0 = T0,
                q0 = a0 - T0;

            function O0() {
                if (G0 < Q0) {
                    G0++;
                    E.innerHTML = Math.ceil(Tween[m5i.b3b](G0, U0, q0, Q0));
                    X0 = setTimeout(O0, m5i.P64);
                } else {
                    E.innerHTML = a0;
                    if (p0) p0(E);
                }
            }
            O0();
        }
    },
    MovieUtil = {
        explodeBlockH: function(E, z, T0, a0, p0, G0, Q0) {
            var X0 = document.createElement(m5i.r6),
                U0 = loadRec.resource[E];
            X0.style.backgroundImage = m5i.E5 + U0.src + m5i.T04;
            X0.spritewidth = a0;
            X0.style.position = m5i.v9;
            X0.style.zIndex = m5i.z0b;
            X0.style.left = z + m5i.B24;
            X0.style.top = T0 + m5i.B24;
            X0.style.width = a0 + "px";
            X0.style.height = p0 + "px";
            G0.appendChild(X0);
            var q0 = m5i.c4;
            X0.totalframes = Math.ceil(U0.width / a0);
            var O0 = setInterval(function() {
                if (q0 < X0.totalframes) {
                    X0.style.backgroundPosition = -q0 * X0.spritewidth + m5i.j1;
                    q0++;
                } else {
                    clearInterval(O0);
                    if (X0.parentNode) X0.parentNode.removeChild(X0);
                    if (Q0) Q0();
                }
            }, m5i.x24);
        },
        explodeBlockV: function(z, T0, a0, p0, G0, Q0, X0) {
            var U0 = document.createElement(m5i.r6),
                q0 = loadRec.resource[z];
            U0.style.backgroundImage = m5i.E5 + q0.src + m5i.T04;
            U0.spriteHeight = G0;
            U0.style.position = m5i.v9;
            U0.style.zIndex = m5i.z0b;
            U0.style.left = T0 + m5i.B24;
            U0.style.top = a0 + m5i.B24;
            U0.style.width = p0 + "px";
            U0.style.height = G0 + "px";
            Q0.appendChild(U0);
            var O0 = m5i.c4;
            U0.totalframes = Math.ceil(q0.height / G0);
            var I0 = setInterval(function() {
                var E = "0px ";
                if (O0 < U0.totalframes) {
                    U0.style.backgroundPosition = E + -O0 * U0.spriteHeight + m5i.c7b;
                    O0++;
                } else {
                    clearInterval(I0);
                    if (U0.parentNode) U0.parentNode.removeChild(U0);
                    if (X0) X0();
                }
            }, m5i.x24);
        }
    },
    fullscreenHandle = {
        button: m5i.V3b,
        innerOffsetW: m5i.H24,
        innerOffsetH: m5i.H24,
        init: function(E, z, T0, a0, p0, G0) {
            var Q0 = 46;
            p0 = p0 ? p0 : Q0;
            G0 = G0 ? G0 : Q0;
            fullscreenHandle.button = CreateAll.CreateDiv(E, z, T0, a0);
            fullscreenHandle.button.back = CreateAll.CreateImgBg("fullscreen", 0, 0, p0, G0, fullscreenHandle.button, a0);
            fullscreenHandle.button.on = CreateAll.CreateImgBg("fullscreen_on", fullscreenHandle.innerOffsetW, fullscreenHandle.innerOffsetW, p0 - fullscreenHandle.innerOffsetW * 2, G0 - fullscreenHandle.innerOffsetW * 2, fullscreenHandle.button, a0);
            fullscreenHandle.button.off = CreateAll.CreateImgBg("fullscreen_off", fullscreenHandle.innerOffsetH, fullscreenHandle.innerOffsetH, p0 - fullscreenHandle.innerOffsetH * 2, G0 - fullscreenHandle.innerOffsetH * 2, fullscreenHandle.button, a0);
            fullscreenHandle.button.off.style.display = m5i.i94;
            fullscreenHandle.button.onclick = function() {
                screenfull.toggle();
            };
            document.addEventListener(screenfull.raw.fullscreenchange, function() {
                if (screenfull.isFullscreen) {
                    fullscreenHandle.button.on.style.display = m5i.i94;
                    fullscreenHandle.button.off.style.display = m5i.n6b;
                } else {
                    fullscreenHandle.button.on.style.display = m5i.n6b;
                    fullscreenHandle.button.off.style.display = m5i.i94;
                }
            });
        }
    },
    TransformUtil = {
        rotate: function(E, z) {
            var T0 = "deg)",
                a0 = "rotate(";
            if (E && E.parentNode) {
                E.style.webkitTransform = a0 + z + T0;
                E.style.MozTransform = a0 + z + T0;
                E.style.OTransform = a0 + z + T0;
                E.style.msTransform = a0 + z + T0;
                E.style.transform = "rotate(" + z + "deg)";
            }
        }
    },
    GameOver = {
        showOver: function() {
            var z = "score";
            GameSound.stopMusic();
            var T0 = GameLib.getStorage(z),
                a0 = GameLib.getStorage(m5i.w5),
                p0 = CreateAll.CreatedImg(m5i.g04, m5i.c4, m5i.c4, gameContainer, this.data);
            p0 = languageUI.getButton("d_YourScore", 350, 80, 225, 180, 10, 15, false, false, gameContainer, this.data);
            p0 = languageUI.getButton("d_PlayAgain", 260, 60, 142, 360, 18, 4, true, true, gameContainer, this.data);
            Hammer(p0).on(m5i.L8b, function(E) {
                ThirdParty.restartGame();
                orderInit(m5i.C4);
                GameOver.remAll();
            });
            if (T0 > m5i.c4) {
                p0 = languageUI.getButton("d_SubmitScore", 260, 60, 415, 360, 18, 4, true, true, gameContainer, this.data);
                Hammer(p0).on(m5i.L8b, function(E) {
                    ThirdParty.submitScore(T0, a0);
                });
            }
            var G0 = CreateAll.CreateText(m5i.a6b, m5i.Y14, gameContainer, this.data);
            G0.innerHTML = T0;
            GameLib.setStorage({
                level: m5i.I4,
                score: m5i.c4
            });
        },
        data: [],
        remAll: function() {
            while (this.data.length > m5i.c4) {
                var E = this.data.pop();
                if (E && E.parentNode) {
                    E.parentNode.removeChild(E);
                }
            }
        }
    },
    languageUI = {
        uiDiv: m5i.V3b,
        buDiv: m5i.V3b,
        canGuoQi: m5i.V3b,
        canWenZi: m5i.V3b,
        showLanguage: [m5i.I4, m5i.C4, m5i.c4, m5i.O4, m5i.s4, m5i.A4, m5i.L4, m5i.D4, m5i.x4, m5i.n4, m5i.H24, m5i.R44, m5i.v44, m5i.n44, m5i.b44, m5i.B44],
        arr: [
            [m5i.R74, m5i.s4b, m5i.O4, m5i.N04, m5i.A4],
            [m5i.y44, m5i.r8, m5i.v44, m5i.R2, m5i.I4],
            [m5i.l6, m5i.E6b, m5i.C4, m5i.D8b, m5i.s4],
            [m5i.Q9, m5i.r8, m5i.R44, m5i.R2, m5i.C4],
            [m5i.y7, m5i.Q94, m5i.A4, m5i.H4, m5i.L4],
            [m5i.M7, m5i.x1, m5i.n4, m5i.I1b, m5i.n4],
            [m5i.I1, m5i.B8, m5i.I4, m5i.I1b, m5i.H24],
            [m5i.r8b, m5i.r64, m5i.L4, m5i.E9b, m5i.R44],
            [m5i.S7, m5i.p3, m5i.x4, m5i.V2, m5i.v44],
            [m5i.h3, m5i.s94, m5i.s4, m5i.i5, m5i.n44],
            [m5i.p7, m5i.w6, m5i.H24, m5i.L1b, m5i.b44],
            [m5i.y8, m5i.Q94, m5i.n44, m5i.H4, m5i.D4],
            [m5i.W9b, m5i.Q94, m5i.b44, m5i.H4, m5i.x4],
            [m5i.b1, m5i.j4b, m5i.D4, m5i.n6, m5i.O4],
            [m5i.f14, m5i.m4b, m5i.B44, m5i.K8b, m5i.B44],
            [m5i.e1, m5i.p0b, m5i.K44, m5i.q2b, m5i.K44]
        ],
        remData: [],
        getStyle: function(E, z) {
            var T0;
            if (E.currentStyle) T0 = E.currentStyle[z];
            else if (window.getComputedStyle) T0 = window.getComputedStyle(E, m5i.V3b).getPropertyValue(z);
            return T0;
        },
        init: function(z) {
            var T0 = '42px',
                a0 = '453px',
                p0 = '5px',
                G0 = '1px 1px',
                Q0 = '450px',
                X0 = '1px',
                U0 = '540px 30px',
                q0 = 59,
                O0 = '639px 30px',
                I0 = "640px 130px",
                H0 = "Div";
            if (this.uiDiv) {
                z.appendChild(this.uiDiv);
                z.appendChild(this.buDiv);
                this.scaleTexts();
                return;
            }
            this.uiDiv = document.createElement(H0);
            this.buDiv = document.createElement(H0);
            z.appendChild(this.uiDiv);
            z.appendChild(this.buDiv);
            var l0, n0, u0;
            for (W0 = m5i.c4; W0 < this.showLanguage.length; W0++) {
                n0 = document.createElement(H0);
                u0 = document.createElement(H0);
                u0.className = m5i.V4;
                u0.style.backgroundImage = m5i.E5 + loadRec.resource[m5i.V4].src + m5i.T04;
                u0.style.backgroundSize = I0;
                u0.style.backgroundPosition = O0;
                u0.style.left = ((W0 % m5i.C4) * q0 + m5i.I4) + m5i.c7b;
                u0.style.top = (480 - 30 - (this.showLanguage.length / 2) * 25 + 25 * Math.floor(W0 / 2)) + 'px';
                u0.style.width = 58 + 'px';
                u0.style.height = 25 + 'px';
                n0.appendChild(u0);
                u0 = document.createElement(H0);
                u0.className = m5i.V4;
                u0.style.backgroundImage = m5i.E5 + loadRec.resource[m5i.V4].src + m5i.T04;
                u0.style.backgroundSize = I0;
                u0.style.backgroundPosition = (m5i.p5b - (this.arr[this.showLanguage[W0]][m5i.C4] - m5i.I4) * m5i.h04) + m5i.j1;
                u0.style.left = ((W0 % m5i.C4) * q0 + m5i.I4) + m5i.c7b;
                u0.style.top = (480 - 30 - (this.showLanguage.length / 2) * 25 + 25 * Math.floor(W0 / 2) + 3) + 'px';
                u0.style.width = 23 + 'px';
                u0.style.height = 24 + 'px';
                n0.appendChild(u0);
                u0 = document.createElement(H0);
                u0.className = m5i.V4;
                u0.style.backgroundImage = m5i.E5 + loadRec.resource[m5i.V4].src + m5i.T04;
                u0.style.backgroundSize = I0;
                u0.style.backgroundPosition = (m5i.p5b - (this.arr[this.showLanguage[W0]][m5i.C4] - m5i.I4) * m5i.K04) + m5i.T6b + (m5i.S7b - m5i.K64) + m5i.c7b;
                u0.style.left = ((W0 % m5i.C4) * q0 + m5i.j04) + m5i.c7b;
                u0.style.top = (480 - 30 - (this.showLanguage.length / 2) * 25 + 25 * Math.floor(W0 / 2)) + 'px';
                u0.style.width = 33 + 'px';
                u0.style.height = 24 + 'px';
                n0.appendChild(u0);
                n0.idInt = W0;
                this.uiDiv.appendChild(n0);
            }
            u0 = document.createElement(H0);
            u0.className = m5i.V4;
            u0.style.backgroundImage = m5i.E5 + loadRec.resource[m5i.V4].src + m5i.T04;
            u0.style.backgroundSize = I0;
            u0.style.backgroundPosition = U0;
            u0.style.left = X0;
            u0.style.top = Q0;
            u0.style.width = 124 + 'px';
            u0.style.height = 27 + 'px';
            this.buDiv.appendChild(u0);
            u0 = document.createElement(H0);
            u0.className = m5i.V4;
            u0.style.backgroundImage = m5i.E5 + loadRec.resource[m5i.V4].src + m5i.T04;
            u0.style.backgroundSize = I0;
            u0.style.backgroundPosition = G0;
            u0.style.left = p0;
            u0.style.top = a0;
            u0.style.width = 23 + 'px';
            u0.style.height = 24 + 'px';
            this.buDiv.appendChild(u0);
            this.canGuoQi = u0;
            u0 = document.createElement(H0);
            u0.className = m5i.V4;
            u0.style.backgroundImage = m5i.E5 + loadRec.resource[m5i.V4].src + m5i.T04;
            u0.style.backgroundSize = I0;
            u0.style.backgroundPosition = G0;
            u0.style.left = T0;
            u0.style.top = Q0;
            u0.style.width = 33 + 'px';
            u0.style.height = 24 + 'px';
            this.buDiv.appendChild(u0);
            this.canWenZi = u0;
            this.uiDiv.style.display = m5i.i94;
            this.buDiv.onmousedown = this.buDiv.ontouchstart = function() {
                languageUI.uiDiv.style.display = m5i.n6b;
            };
            this.uiDiv.onmousedown = this.uiDiv.ontouchstart = function(E) {
                E.preventDefault();
                n0 = E.target.parentNode;
                languageUI.setXuanZhe(n0.idInt);
                languageUI.uiDiv.style.display = m5i.i94;
            };
            var K0 = GameLib.getLang();
            for (var W0 = m5i.c4; W0 < this.showLanguage.length; W0++) {
                if (this.arr[this.showLanguage[W0]][m5i.O4] == K0) {
                    this.setXuanZhe(W0);
                    break;
                }
            }
        },
        closeUI: function() {
            this.uiDiv.style.display = m5i.i94;
        },
        getButton: function(E, z, T0, a0, p0, G0, Q0, X0, U0, q0, O0) {
            var I0 = 'font-size',
                H0 = 'btnumber langword',
                l0 = 'static/button.png',
                n0 = 'pointer',
                u0 = 'absolute',
                K0 = document.createElement(m5i.m44),
                W0 = document.createElement(m5i.m44),
                R0;
            K0.style.position = u0;
            K0.style.top = p0 + m5i.c7b;
            K0.style.left = a0 + m5i.c7b;
            K0.style.width = z + 'px';
            K0.style.height = T0 + 'px';
            K0.style.textAlign = 'center';
            if (U0) {
                K0.style.cursor = n0;
            }
            if (X0) {
                R0 = document.createElement(m5i.I2b);
                R0.style.position = u0;
                R0.style.top = m5i.c4;
                R0.style.left = m5i.c4;
                R0.style.width = z + 'px';
                R0.style.height = T0 + 'px';
                R0.src = l0;
                K0.appendChild(R0);
            }
            W0 = document.createElement(m5i.m44);
            W0.style.width = '100%';
            W0.style.lineHeight = T0 + m5i.c7b;
            W0.className = H0;
            W0.innerHTML = languageData[E][languageUI.languageInt];
            K0.appendChild(W0);
            q0.appendChild(K0);
            W0.fontSize = languageUI.getStyle(W0, I0).replace(m5i.c7b, m5i.e9b);
            W0.langID = E;
            W0.parentWidth = z - G0;
            O0.push(K0);
            return K0;
        },
        getText: function(E, z, T0, a0, p0, G0, Q0) {
            var X0 = 'loogText',
                U0 = document.createElement(m5i.r6);
            U0.className = X0;
            U0.innerHTML = languageData[E][languageUI.languageInt];
            U0.style.left = a0 + m5i.B24;
            U0.style.top = p0 + m5i.B24;
            U0.style.width = z + 'px';
            G0.appendChild(U0);
            Q0.push(U0);
            return U0;
        },
        scaleTexts: function() {
            var E = '.langword',
                z = document.querySelectorAll(E),
                T0, a0, p0, G0, Q0;
            if (z) {
                for (T0 = m5i.c4; T0 < z.length; T0++) {
                    a0 = languageData[z[T0].langID][languageUI.languageInt];
                    Q0 = document.createElement(m5i.m44);
                    Q0.className = z[T0].className;
                    Q0.style.visibility = m5i.G5b;
                    Q0.innerHTML = a0;
                    document.body.appendChild(Q0);
                    p0 = Q0.clientWidth;
                    G0 = z[T0].parentWidth;
                    Q0.parentNode.removeChild(Q0);
                    z[T0].style.fontSize = (p0 > G0 ? (z[T0].fontSize * G0 / p0) : z[T0].fontSize) + m5i.c7b;
                    z[T0].innerHTML = a0;
                }
            }
        },
        setXuanZhe: function(E) {
            languageUI.languageInt = this.arr[this.showLanguage[E]][m5i.s4] - m5i.I4;
            GameLib.setLang(this.arr[this.showLanguage[E]][m5i.O4]);
            this.language = this.arr[this.showLanguage[E]][m5i.I4];
            this.canGuoQi.style.backgroundPosition = (m5i.p5b - (this.arr[this.showLanguage[E]][m5i.C4] - m5i.I4) * m5i.h04) + m5i.j1;
            this.canWenZi.style.backgroundPosition = (m5i.p5b - (this.arr[this.showLanguage[E]][m5i.C4] - m5i.I4) * m5i.K04) + m5i.T6b + (m5i.S7b - m5i.K64) + m5i.c7b;
            languageUI.scaleTexts();
        },
        language: m5i.s4b,
        languageInt: m5i.c4
    };;
(function(O0, I0) {
    'use strict';
    var H0 = function H0(E, z) {
        return new H0.Instance(E, z || {});
    };
    H0.VERSION = '1.1.3';
    H0.defaults = {
        behavior: {
            userSelect: 'none',
            touchAction: 'pan-y',
            touchCallout: 'none',
            contentZooming: 'none',
            userDrag: 'none',
            tapHighlightColor: 'rgba(0,0,0,0)'
        }
    };
    H0.DOCUMENT = document;
    H0.HAS_POINTEREVENTS = navigator.pointerEnabled || navigator.msPointerEnabled;
    H0.HAS_TOUCHEVENTS = ('ontouchstart' in O0);
    H0.IS_MOBILE = /mobile|tablet|ip(ad|hone|od)|android|silk/i.test(navigator.userAgent);
    H0.NO_MOUSEEVENTS = (H0.HAS_TOUCHEVENTS && H0.IS_MOBILE) || H0.HAS_POINTEREVENTS;
    H0.CALCULATE_INTERVAL = 25;
    var l0 = {},
        n0 = H0.DIRECTION_DOWN = 'down',
        u0 = H0.DIRECTION_LEFT = 'left',
        K0 = H0.DIRECTION_UP = 'up',
        W0 = H0.DIRECTION_RIGHT = 'right',
        R0 = H0.POINTER_MOUSE = 'mouse',
        E0 = H0.POINTER_TOUCH = 'touch',
        v0 = H0.POINTER_PEN = 'pen',
        B0 = H0.EVENT_START = 'start',
        h0 = H0.EVENT_MOVE = 'move',
        t0 = H0.EVENT_END = 'end',
        r0 = H0.EVENT_RELEASE = 'release',
        S0 = H0.EVENT_TOUCH = 'touch';
    H0.READY = false;
    H0.plugins = H0.plugins || {};
    H0.gestures = H0.gestures || {};

    function Z4() {
        if (H0.READY) {
            return;
        }
        P0.determineEventTypes();
        c0.each(H0.gestures, function(E) {
            b0.register(E);
        });
        P0.onTouch(H0.DOCUMENT, h0, b0.detect);
        P0.onTouch(H0.DOCUMENT, t0, b0.detect);
        H0.READY = true;
    }
    var c0 = H0.utils = {
            extend: function extend(E, z, T0) {
                for (var a0 in z) {
                    if (!z.hasOwnProperty(a0) || (E[a0] !== I0 && T0)) {
                        continue;
                    }
                    E[a0] = z[a0];
                }
                return E;
            },
            on: function on(E, z, T0) {
                E.addEventListener(z, T0, false);
            },
            off: function off(E, z, T0) {
                E.removeEventListener(z, T0, false);
            },
            each: function each(E, z, T0) {
                var a0, p0;
                if ('forEach' in E) {
                    E.forEach(z, T0);
                } else if (E.length !== I0) {
                    for (a0 = 0, p0 = E.length; a0 < p0; a0++) {
                        if (z.call(T0, E[a0], a0, E) === false) {
                            return;
                        }
                    }
                } else {
                    for (a0 in E) {
                        if (E.hasOwnProperty(a0) && z.call(T0, E[a0], a0, E) === false) {
                            return;
                        }
                    }
                }
            },
            inStr: function inStr(E, z) {
                return E.indexOf(z) > -1;
            },
            inArray: function inArray(E, z) {
                if (E.indexOf) {
                    var T0 = E.indexOf(z);
                    return (T0 === -1) ? false : T0;
                } else {
                    for (var a0 = 0, p0 = E.length; a0 < p0; a0++) {
                        if (E[a0] === z) {
                            return a0;
                        }
                    }
                    return false;
                }
            },
            toArray: function toArray(E) {
                return Array.prototype.slice.call(E, 0);
            },
            hasParent: function hasParent(E, z) {
                while (E) {
                    if (E == z) {
                        return true;
                    }
                    E = E.parentNode;
                }
                return false;
            },
            getCenter: function getCenter(z) {
                var T0 = [],
                    a0 = [],
                    p0 = [],
                    G0 = [],
                    Q0 = Math.min,
                    X0 = Math.max;
                if (z.length === 1) {
                    return {
                        pageX: z[0].pageX,
                        pageY: z[0].pageY,
                        clientX: z[0].clientX,
                        clientY: z[0].clientY
                    };
                }
                c0.each(z, function(E) {
                    T0.push(E.pageX);
                    a0.push(E.pageY);
                    p0.push(E.clientX);
                    G0.push(E.clientY);
                });
                return {
                    pageX: (Q0.apply(Math, T0) + X0.apply(Math, T0)) / 2,
                    pageY: (Q0.apply(Math, a0) + X0.apply(Math, a0)) / 2,
                    clientX: (Q0.apply(Math, p0) + X0.apply(Math, p0)) / 2,
                    clientY: (Q0.apply(Math, G0) + X0.apply(Math, G0)) / 2
                };
            },
            getVelocity: function getVelocity(E, z, T0) {
                return {
                    x: Math.abs(z / E) || 0,
                    y: Math.abs(T0 / E) || 0
                };
            },
            getAngle: function getAngle(E, z) {
                var T0 = z.clientX - E.clientX,
                    a0 = z.clientY - E.clientY;
                return Math.atan2(a0, T0) * 180 / Math.PI;
            },
            getDirection: function getDirection(E, z) {
                var T0 = Math.abs(E.clientX - z.clientX),
                    a0 = Math.abs(E.clientY - z.clientY);
                if (T0 >= a0) {
                    return E.clientX - z.clientX > 0 ? u0 : W0;
                }
                return E.clientY - z.clientY > 0 ? K0 : n0;
            },
            getDistance: function getDistance(E, z) {
                var T0 = z.clientX - E.clientX,
                    a0 = z.clientY - E.clientY;
                return Math.sqrt((T0 * T0) + (a0 * a0));
            },
            getScale: function getScale(E, z) {
                if (E.length >= 2 && z.length >= 2) {
                    return this.getDistance(z[0], z[1]) / this.getDistance(E[0], E[1]);
                }
                return 1;
            },
            getRotation: function getRotation(E, z) {
                if (E.length >= 2 && z.length >= 2) {
                    return this.getAngle(z[1], z[0]) - this.getAngle(E[1], E[0]);
                }
                return 0;
            },
            isVertical: function isVertical(E) {
                return E == K0 || E == n0;
            },
            setPrefixedCss: function setPrefixedCss(E, z, T0, a0) {
                var p0 = ['', 'Webkit', 'Moz', 'O', 'ms'];
                z = c0.toCamelCase(z);
                for (var G0 = 0; G0 < p0.length; G0++) {
                    var Q0 = z;
                    if (p0[G0]) {
                        Q0 = p0[G0] + Q0.slice(0, 1).toUpperCase() + Q0.slice(1);
                    }
                    if (Q0 in E.style) {
                        E.style[Q0] = (a0 == null || a0) && T0 || '';
                        break;
                    }
                }
            },
            toggleBehavior: function toggleBehavior(T0, a0, p0) {
                if (!a0 || !T0 || !T0.style) {
                    return;
                }
                c0.each(a0, function(E, z) {
                    c0.setPrefixedCss(T0, z, E, p0);
                });
                var G0 = p0 && function() {
                    return false;
                };
                if (a0.userSelect == 'none') {
                    T0.onselectstart = G0;
                }
                if (a0.userDrag == 'none') {
                    T0.ondragstart = G0;
                }
            },
            toCamelCase: function toCamelCase(z) {
                return z.replace(/[_-]([a-z])/g, function(E) {
                    return E[1].toUpperCase();
                });
            }
        },
        P0 = H0.event = {
            preventMouseEvents: false,
            started: false,
            shouldDetect: false,
            on: function on(z, T0, a0, p0) {
                var G0 = T0.split(' ');
                c0.each(G0, function(E) {
                    c0.on(z, E, a0);
                    p0 && p0(E);
                });
            },
            off: function off(z, T0, a0, p0) {
                var G0 = T0.split(' ');
                c0.each(G0, function(E) {
                    c0.off(z, E, a0);
                    p0 && p0(E);
                });
            },
            onTouch: function onTouch(G0, Q0, X0) {
                var U0 = this,
                    q0 = function q0(E) {
                        var z = E.type.toLowerCase(),
                            T0 = H0.HAS_POINTEREVENTS,
                            a0 = c0.inStr(z, 'mouse'),
                            p0;
                        if (a0 && U0.preventMouseEvents) {
                            return;
                        } else if (a0 && Q0 == B0 && E.button === 0) {
                            U0.preventMouseEvents = false;
                            U0.shouldDetect = true;
                        } else if (T0 && Q0 == B0) {
                            U0.shouldDetect = (E.buttons === 1 || X4.matchType(E0, E));
                        } else if (!a0 && Q0 == B0) {
                            U0.preventMouseEvents = true;
                            U0.shouldDetect = true;
                        }
                        if (T0 && Q0 != t0) {
                            X4.updatePointer(Q0, E);
                        }
                        if (U0.shouldDetect) {
                            p0 = U0.doDetect.call(U0, E, Q0, G0, X0);
                        }
                        if (p0 == t0) {
                            U0.preventMouseEvents = false;
                            U0.shouldDetect = false;
                            X4.reset();
                        }
                        if (T0 && Q0 == t0) {
                            X4.updatePointer(Q0, E);
                        }
                    };
                this.on(G0, l0[Q0], q0);
                return q0;
            },
            doDetect: function doDetect(E, z, T0, a0) {
                var p0 = this.getTouchList(E, z),
                    G0 = p0.length,
                    Q0 = z,
                    X0 = p0.trigger,
                    U0 = G0;
                if (z == B0) {
                    X0 = S0;
                } else if (z == t0) {
                    X0 = r0;
                    U0 = p0.length - ((E.changedTouches) ? E.changedTouches.length : 1);
                }
                if (U0 > 0 && this.started) {
                    Q0 = h0;
                }
                this.started = true;
                var q0 = this.collectEventData(T0, Q0, p0, E);
                if (z != t0) {
                    a0.call(b0, q0);
                }
                if (X0) {
                    q0.changedLength = U0;
                    q0.eventType = X0;
                    a0.call(b0, q0);
                    q0.eventType = Q0;
                    delete q0.changedLength;
                }
                if (Q0 == t0) {
                    a0.call(b0, q0);
                    this.started = false;
                }
                return Q0;
            },
            determineEventTypes: function determineEventTypes() {
                var E;
                if (H0.HAS_POINTEREVENTS) {
                    if (O0.PointerEvent) {
                        E = ['pointerdown', 'pointermove', 'pointerup pointercancel lostpointercapture'];
                    } else {
                        E = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp MSPointerCancel MSLostPointerCapture'];
                    }
                } else if (H0.NO_MOUSEEVENTS) {
                    E = ['touchstart', 'touchmove', 'touchend touchcancel'];
                } else {
                    E = ['touchstart mousedown', 'touchmove mousemove', 'touchend touchcancel mouseup'];
                }
                l0[B0] = E[0];
                l0[h0] = E[1];
                l0[t0] = E[2];
                return l0;
            },
            getTouchList: function getTouchList(z, T0) {
                if (H0.HAS_POINTEREVENTS) {
                    return X4.getTouchList();
                }
                if (z.touches) {
                    if (T0 == h0) {
                        return z.touches;
                    }
                    var a0 = [],
                        p0 = [].concat(c0.toArray(z.touches), c0.toArray(z.changedTouches)),
                        G0 = [];
                    c0.each(p0, function(E) {
                        if (c0.inArray(a0, E.identifier) === false) {
                            G0.push(E);
                        }
                        a0.push(E.identifier);
                    });
                    return G0;
                }
                z.identifier = 1;
                return [z];
            },
            collectEventData: function collectEventData(z, T0, a0, p0) {
                var G0 = E0;
                if (c0.inStr(p0.type, 'mouse') || X4.matchType(R0, p0)) {
                    G0 = R0;
                } else if (X4.matchType(v0, p0)) {
                    G0 = v0;
                }
                return {
                    center: c0.getCenter(a0),
                    timeStamp: Date.now(),
                    target: p0.target,
                    touches: a0,
                    eventType: T0,
                    pointerType: G0,
                    srcEvent: p0,
                    preventDefault: function() {
                        var E = this.srcEvent;
                        E.preventManipulation && E.preventManipulation();
                        E.preventDefault && E.preventDefault();
                    },
                    stopPropagation: function() {
                        this.srcEvent.stopPropagation();
                    },
                    stopDetect: function() {
                        return b0.stopDetect();
                    }
                };
            }
        },
        X4 = H0.PointerEvent = {
            pointers: {},
            getTouchList: function getTouchList() {
                var z = [];
                c0.each(this.pointers, function(E) {
                    z.push(E);
                });
                return z;
            },
            updatePointer: function updatePointer(E, z) {
                if (E == t0) {
                    delete this.pointers[z.pointerId];
                } else {
                    z.identifier = z.pointerId;
                    this.pointers[z.pointerId] = z;
                }
            },
            matchType: function matchType(E, z) {
                if (!z.pointerType) {
                    return false;
                }
                var T0 = z.pointerType,
                    a0 = {};
                a0[R0] = (T0 === (z.MSPOINTER_TYPE_MOUSE || R0));
                a0[E0] = (T0 === (z.MSPOINTER_TYPE_TOUCH || E0));
                a0[v0] = (T0 === (z.MSPOINTER_TYPE_PEN || v0));
                return a0[E];
            },
            reset: function resetList() {
                this.pointers = {};
            }
        },
        b0 = H0.detection = {
            gestures: [],
            current: null,
            previous: null,
            stopped: false,
            startDetect: function startDetect(E, z) {
                if (this.current) {
                    return;
                }
                this.stopped = false;
                this.current = {
                    inst: E,
                    startEvent: c0.extend({}, z),
                    lastEvent: false,
                    lastCalcEvent: false,
                    futureCalcEvent: false,
                    lastCalcData: {},
                    name: ''
                };
                this.detect(z);
            },
            detect: function detect(z) {
                if (!this.current || this.stopped) {
                    return;
                }
                z = this.extendEventData(z);
                var T0 = this.current.inst,
                    a0 = T0.options;
                c0.each(this.gestures, function p0(E) {
                    if (!this.stopped && T0.enabled && a0[E.name]) {
                        E.handler.call(E, z, T0);
                    }
                }, this);
                if (this.current) {
                    this.current.lastEvent = z;
                }
                if (z.eventType == t0) {
                    this.stopDetect();
                }
                return z;
            },
            stopDetect: function stopDetect() {
                this.previous = c0.extend({}, this.current);
                this.current = null;
                this.stopped = true;
            },
            getCalculatedData: function getCalculatedData(E, z, T0, a0, p0) {
                var G0 = this.current,
                    Q0 = false,
                    X0 = G0.lastCalcEvent,
                    U0 = G0.lastCalcData;
                if (X0 && E.timeStamp - X0.timeStamp > H0.CALCULATE_INTERVAL) {
                    z = X0.center;
                    T0 = E.timeStamp - X0.timeStamp;
                    a0 = E.center.clientX - X0.center.clientX;
                    p0 = E.center.clientY - X0.center.clientY;
                    Q0 = true;
                }
                if (E.eventType == S0 || E.eventType == r0) {
                    G0.futureCalcEvent = E;
                }
                if (!G0.lastCalcEvent || Q0) {
                    U0.velocity = c0.getVelocity(T0, a0, p0);
                    U0.angle = c0.getAngle(z, E.center);
                    U0.direction = c0.getDirection(z, E.center);
                    G0.lastCalcEvent = G0.futureCalcEvent || E;
                    G0.futureCalcEvent = E;
                }
                E.velocityX = U0.velocity.x;
                E.velocityY = U0.velocity.y;
                E.interimAngle = U0.angle;
                E.interimDirection = U0.direction;
            },
            extendEventData: function extendEventData(z) {
                var T0 = this.current,
                    a0 = T0.startEvent,
                    p0 = T0.lastEvent || a0;
                if (z.eventType == S0 || z.eventType == r0) {
                    a0.touches = [];
                    c0.each(z.touches, function(E) {
                        a0.touches.push({
                            clientX: E.clientX,
                            clientY: E.clientY
                        });
                    });
                }
                var G0 = z.timeStamp - a0.timeStamp,
                    Q0 = z.center.clientX - a0.center.clientX,
                    X0 = z.center.clientY - a0.center.clientY;
                this.getCalculatedData(z, p0.center, G0, Q0, X0);
                c0.extend(z, {
                    startEvent: a0,
                    deltaTime: G0,
                    deltaX: Q0,
                    deltaY: X0,
                    distance: c0.getDistance(a0.center, z.center),
                    angle: c0.getAngle(a0.center, z.center),
                    direction: c0.getDirection(a0.center, z.center),
                    scale: c0.getScale(a0.touches, z.touches),
                    rotation: c0.getRotation(a0.touches, z.touches)
                });
                return z;
            },
            register: function register(T0) {
                var a0 = T0.defaults || {};
                if (a0[T0.name] === I0) {
                    a0[T0.name] = true;
                }
                c0.extend(H0.defaults, a0, true);
                T0.index = T0.index || 1000;
                this.gestures.push(T0);
                this.gestures.sort(function(E, z) {
                    if (E.index < z.index) {
                        return -1;
                    }
                    if (E.index > z.index) {
                        return 1;
                    }
                    return 0;
                });
                return this.gestures;
            }
        };
    H0.Instance = function(T0, a0) {
        var p0 = this;
        Z4();
        this.element = T0;
        this.enabled = true;
        c0.each(a0, function(E, z) {
            delete a0[z];
            a0[c0.toCamelCase(z)] = E;
        });
        this.options = c0.extend(c0.extend({}, H0.defaults), a0 || {});
        if (this.options.behavior) {
            c0.toggleBehavior(this.element, this.options.behavior, true);
        }
        this.eventStartHandler = P0.onTouch(T0, B0, function(E) {
            if (p0.enabled && E.eventType == B0) {
                b0.startDetect(p0, E);
            } else if (E.eventType == S0) {
                b0.detect(E);
            }
        });
        this.eventHandlers = [];
    };
    H0.Instance.prototype = {
        on: function onEvent(z, T0) {
            var a0 = this;
            P0.on(a0.element, z, T0, function(E) {
                a0.eventHandlers.push({
                    gesture: E,
                    handler: T0
                });
            });
            return a0;
        },
        off: function offEvent(T0, a0) {
            var p0 = this;
            P0.off(p0.element, T0, a0, function(E) {
                var z = c0.inArray({
                    gesture: E,
                    handler: a0
                });
                if (z !== false) {
                    p0.eventHandlers.splice(z, 1);
                }
            });
            return p0;
        },
        trigger: function triggerEvent(E, z) {
            if (!z) {
                z = {};
            }
            var T0 = H0.DOCUMENT.createEvent('Event');
            T0.initEvent(E, true, true);
            T0.gesture = z;
            var a0 = this.element;
            if (c0.hasParent(z.target, a0)) {
                a0 = z.target;
            }
            a0.dispatchEvent(T0);
            return this;
        },
        enable: function enable(E) {
            this.enabled = E;
            return this;
        },
        dispose: function dispose() {
            var E, z;
            c0.toggleBehavior(this.element, this.options.behavior, false);
            for (E = -1;
                (z = this.eventHandlers[++E]);) {
                c0.off(this.element, z.gesture, z.handler);
            }
            this.eventHandlers = [];
            P0.off(this.element, l0[B0], this.eventStartHandler);
            return null;
        }
    };
    (function(X0) {
        var U0 = false;

        function q0(E, z) {
            var T0 = b0.current;
            if (z.options.dragMaxTouches > 0 && E.touches.length > z.options.dragMaxTouches) {
                return;
            }
            switch (E.eventType) {
                case B0:
                    U0 = false;
                    break;
                case h0:
                    if (E.distance < z.options.dragMinDistance && T0.name != X0) {
                        return;
                    }
                    var a0 = T0.startEvent.center;
                    if (T0.name != X0) {
                        T0.name = X0;
                        if (z.options.dragDistanceCorrection && E.distance > 0) {
                            var p0 = Math.abs(z.options.dragMinDistance / E.distance);
                            a0.pageX += E.deltaX * p0;
                            a0.pageY += E.deltaY * p0;
                            a0.clientX += E.deltaX * p0;
                            a0.clientY += E.deltaY * p0;
                            E = b0.extendEventData(E);
                        }
                    }
                    if (T0.lastEvent.dragLockToAxis || (z.options.dragLockToAxis && z.options.dragLockMinDistance <= E.distance)) {
                        E.dragLockToAxis = true;
                    }
                    var G0 = T0.lastEvent.direction;
                    if (E.dragLockToAxis && G0 !== E.direction) {
                        if (c0.isVertical(G0)) {
                            E.direction = (E.deltaY < 0) ? K0 : n0;
                        } else {
                            E.direction = (E.deltaX < 0) ? u0 : W0;
                        }
                    }
                    if (!U0) {
                        z.trigger(X0 + 'start', E);
                        U0 = true;
                    }
                    z.trigger(X0, E);
                    z.trigger(X0 + E.direction, E);
                    var Q0 = c0.isVertical(E.direction);
                    if ((z.options.dragBlockVertical && Q0) || (z.options.dragBlockHorizontal && !Q0)) {
                        E.preventDefault();
                    }
                    break;
                case r0:
                    if (U0 && E.changedLength <= z.options.dragMaxTouches) {
                        z.trigger(X0 + 'end', E);
                        U0 = false;
                    }
                    break;
                case t0:
                    U0 = false;
                    break;
            }
        }
        H0.gestures.Drag = {
            name: X0,
            index: 50,
            handler: q0,
            defaults: {
                dragMinDistance: 10,
                dragDistanceCorrection: true,
                dragMaxTouches: 1,
                dragBlockHorizontal: false,
                dragBlockVertical: false,
                dragLockToAxis: false,
                dragLockMinDistance: 25
            }
        };
    })('drag');
    H0.gestures.Gesture = {
        name: 'gesture',
        index: 1337,
        handler: function releaseGesture(E, z) {
            z.trigger(this.name, E);
        }
    };
    (function(p0) {
        var G0;

        function Q0(E, z) {
            var T0 = z.options,
                a0 = b0.current;
            switch (E.eventType) {
                case B0:
                    clearTimeout(G0);
                    a0.name = p0;
                    G0 = setTimeout(function() {
                        if (a0 && a0.name == p0) {
                            z.trigger(p0, E);
                        }
                    }, T0.holdTimeout);
                    break;
                case h0:
                    if (E.distance > T0.holdThreshold) {
                        clearTimeout(G0);
                    }
                    break;
                case r0:
                    clearTimeout(G0);
                    break;
            }
        }
        H0.gestures.Hold = {
            name: p0,
            index: 10,
            defaults: {
                holdTimeout: 500,
                holdThreshold: 2
            },
            handler: Q0
        };
    })('hold');
    H0.gestures.Release = {
        name: 'release',
        index: Infinity,
        handler: function releaseGesture(E, z) {
            if (E.eventType == r0) {
                z.trigger(this.name, E);
            }
        }
    };
    H0.gestures.Swipe = {
        name: 'swipe',
        index: 40,
        defaults: {
            swipeMinTouches: 1,
            swipeMaxTouches: 1,
            swipeVelocityX: 0.6,
            swipeVelocityY: 0.6
        },
        handler: function swipeGesture(E, z) {
            if (E.eventType == r0) {
                var T0 = E.touches.length,
                    a0 = z.options;
                if (T0 < a0.swipeMinTouches || T0 > a0.swipeMaxTouches) {
                    return;
                }
                if (E.velocityX > a0.swipeVelocityX || E.velocityY > a0.swipeVelocityY) {
                    z.trigger(this.name, E);
                    z.trigger(this.name + E.direction, E);
                }
            }
        }
    };
    (function(X0) {
        var U0 = false;

        function q0(E, z) {
            var T0 = z.options,
                a0 = b0.current,
                p0 = b0.previous,
                G0, Q0;
            switch (E.eventType) {
                case B0:
                    U0 = false;
                    break;
                case h0:
                    U0 = U0 || (E.distance > T0.tapMaxDistance);
                    break;
                case t0:
                    if (!c0.inStr(E.srcEvent.type, 'cancel') && E.deltaTime < T0.tapMaxTime && !U0) {
                        G0 = p0 && p0.lastEvent && E.timeStamp - p0.lastEvent.timeStamp;
                        Q0 = false;
                        if (p0 && p0.name == X0 && (G0 && G0 < T0.doubleTapInterval) && E.distance < T0.doubleTapDistance) {
                            z.trigger('doubletap', E);
                            Q0 = true;
                        }
                        if (!Q0 || T0.tapAlways) {
                            a0.name = X0;
                            z.trigger(a0.name, E);
                        }
                    }
                    break;
            }
        }
        H0.gestures.Tap = {
            name: X0,
            index: 100,
            handler: q0,
            defaults: {
                tapMaxTime: 250,
                tapMaxDistance: 10,
                tapAlways: true,
                doubleTapDistance: 20,
                doubleTapInterval: 300
            }
        };
    })('tap');
    H0.gestures.Touch = {
        name: 'touch',
        index: -Infinity,
        defaults: {
            preventDefault: true,
            preventMouse: false
        },
        handler: function touchGesture(E, z) {
            if (z.options.preventMouse && E.pointerType == R0) {
                E.stopDetect();
                return;
            }
            if (z.options.preventDefault) {
                E.preventDefault();
            }
            if (E.eventType == S0) {
                z.trigger('touch', E);
            }
        }
    };
    (function(p0) {
        var G0 = false;

        function Q0(E, z) {
            switch (E.eventType) {
                case B0:
                    G0 = false;
                    break;
                case h0:
                    if (E.touches.length < 2) {
                        return;
                    }
                    var T0 = Math.abs(1 - E.scale),
                        a0 = Math.abs(E.rotation);
                    if (T0 < z.options.transformMinScale && a0 < z.options.transformMinRotation) {
                        return;
                    }
                    b0.current.name = p0;
                    if (!G0) {
                        z.trigger(p0 + 'start', E);
                        G0 = true;
                    }
                    z.trigger(p0, E);
                    if (a0 > z.options.transformMinRotation) {
                        z.trigger('rotate', E);
                    }
                    if (T0 > z.options.transformMinScale) {
                        z.trigger('pinch', E);
                        z.trigger('pinch' + (E.scale < 1 ? 'in' : 'out'), E);
                    }
                    break;
                case r0:
                    if (G0 && E.changedLength < 2) {
                        z.trigger(p0 + 'end', E);
                        G0 = false;
                    }
                    break;
            }
        }
        H0.gestures.Transform = {
            name: p0,
            index: 45,
            defaults: {
                transformMinScale: 0.01,
                transformMinRotation: 1
            },
            handler: Q0
        };
    })('transform');
    if (typeof define == 'function' && define.amd) {
        define(function() {
            return H0;
        });
    } else if (typeof module !== 'undefined' && module.exports) {
        module.exports = H0;
    } else {
        O0.Hammer = H0;
    }
})(window);;
(function() {
    'use strict';
    var K0 = null,
        W0 = true,
        R0 = false;
    X4();
    if (W0) {
        var E0 = (typeof K0.createGain === 'undefined') ? K0.createGainNode() : K0.createGain();
        E0.gain.value = 1;
        E0.connect(K0.destination);
    }
    var v0 = function() {
        this.init();
    };
    v0.prototype = {
        init: function() {
            var E = this || B0;
            E._codecs = {};
            E._howls = [];
            E._muted = false;
            E._volume = 1;
            E.noAudio = R0;
            E.usingWebAudio = W0;
            E.ctx = K0;
            if (!R0) {
                E._setupCodecs();
            }
            return E;
        },
        volume: function(E) {
            var z = this || B0;
            E = parseFloat(E);
            if (typeof E !== 'undefined' && E >= 0 && E <= 1) {
                z._volume = E;
                if (W0) {
                    E0.gain.value = E;
                }
                for (var T0 = 0; T0 < z._howls.length; T0++) {
                    if (!z._howls[T0]._webAudio) {
                        var a0 = z._howls[T0]._getSoundIds();
                        for (var p0 = 0; p0 < a0.length; p0++) {
                            var G0 = z._howls[T0]._soundById(a0[p0]);
                            if (G0 && G0._node) {
                                G0._node.volume = G0._volume * E;
                            }
                        }
                    }
                }
                return z;
            }
            return z._volume;
        },
        mute: function(E) {
            var z = this || B0;
            z._muted = E;
            if (W0) {
                E0.gain.value = E ? 0 : z._volume;
            }
            for (var T0 = 0; T0 < z._howls.length; T0++) {
                if (!z._howls[T0]._webAudio) {
                    var a0 = z._howls[T0]._getSoundIds();
                    for (var p0 = 0; p0 < a0.length; p0++) {
                        var G0 = z._howls[T0]._soundById(a0[p0]);
                        if (G0 && G0._node) {
                            G0._node.muted = (E) ? true : G0._muted;
                        }
                    }
                }
            }
            return z;
        },
        unload: function() {
            var E = this || B0;
            for (var z = E._howls.length - 1; z >= 0; z--) {
                E._howls[z].unload();
            }
            return E;
        },
        codecs: function(E) {
            return (this || B0)._codecs[E];
        },
        _setupCodecs: function() {
            var E = this || B0,
                z = new Audio(),
                T0 = z.canPlayType('audio/mpeg;').replace(/^no$/, ''),
                a0 = /OPR\//.test(navigator.userAgent);
            E._codecs = {
                mp3: !!(!a0 && (T0 || z.canPlayType('audio/mp3;').replace(/^no$/, ''))),
                mpeg: !!T0,
                opus: !!z.canPlayType('audio/ogg; codecs="opus"').replace(/^no$/, ''),
                ogg: !!z.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/, ''),
                wav: !!z.canPlayType('audio/wav; codecs="1"').replace(/^no$/, ''),
                aac: !!z.canPlayType('audio/aac;').replace(/^no$/, ''),
                m4a: !!(z.canPlayType('audio/x-m4a;') || z.canPlayType('audio/m4a;') || z.canPlayType('audio/aac;')).replace(/^no$/, ''),
                mp4: !!(z.canPlayType('audio/x-mp4;') || z.canPlayType('audio/mp4;') || z.canPlayType('audio/aac;')).replace(/^no$/, ''),
                weba: !!z.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, ''),
                webm: !!z.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/, '')
            };
            return E;
        },
    };
    var B0 = new v0(),
        h0 = function(E) {
            var z = this;
            if (!E.src || E.src.length === 0) {
                console.error('An array of source files must be passed with any new Howl.');
                return;
            }
            z.init(E);
        };
    h0.prototype = {
        init: function(E) {
            var z = this;
            z._onends = [];
            z._autoplay = E.autoplay || false;
            z._ext = E.ext || null;
            z._html5 = E.html5 || false;
            z._muted = E.mute || false;
            z._loop = E.loop || false;
            z._pool = E.pool || 5;
            z._preload = (typeof E.preload === 'boolean') ? E.preload : true;
            z._rate = E.rate || 1;
            z._sprite = E.sprite || {};
            z._src = (typeof E.src !== 'string') ? E.src : [E.src];
            z._volume = E.volume !== undefined ? E.volume : 1;
            z._duration = E.duration || 0;
            z._loaded = false;
            z._sounds = [];
            z._endTimers = {};
            z._onend = E.onend ? [{
                fn: E.onend
            }] : [];
            z._onfaded = E.onfaded ? [{
                fn: E.onfaded
            }] : [];
            z._onload = E.onload ? [{
                fn: E.onload
            }] : [];
            z._onloaderror = E.onloaderror ? [{
                fn: E.onloaderror
            }] : [];
            z._onpause = E.onpause ? [{
                fn: E.onpause
            }] : [];
            z._onplay = E.onplay ? [{
                fn: E.onplay
            }] : [];
            z._onstop = E.onstop ? [{
                fn: E.onstop
            }] : [];
            z._webAudio = W0 && !z._html5;
            B0._howls.push(z);
            if (z._preload) {
                z.load();
            }
            return z;
        },
        load: function() {
            var E = this,
                z = null;
            if (R0) {
                E._emit('loaderror');
                return;
            }
            if (typeof E._src === 'string') {
                E._src = [E._src];
            }
            for (var T0 = 0; T0 < E._src.length; T0++) {
                var a0, p0;
                if (E._ext && E._ext[T0]) {
                    a0 = E._ext[T0];
                } else {
                    p0 = E._src[T0];
                    a0 = /^data:audio\/([^;,]+);/i.exec(p0);
                    if (!a0) {
                        a0 = /\.([^.]+)$/.exec(p0.split('?', 1)[0]);
                    }
                    if (a0) {
                        a0 = a0[1].toLowerCase();
                    }
                } if (B0.codecs(a0)) {
                    z = E._src[T0];
                    break;
                }
            }
            if (!z) {
                E._emit('loaderror');
                return;
            }
            E._src = z;
            new t0(E);
            if (E._webAudio) {
                S0(E);
            }
            return E;
        },
        play: function(z, T0) {
            var a0 = this,
                p0 = arguments,
                G0 = null;
            if (typeof z === 'number') {
                G0 = z;
                z = null;
            } else if (typeof z === 'undefined') {
                z = '__default';
                var Q0 = 0;
                for (var X0 = 0; X0 < a0._sounds.length; X0++) {
                    if (a0._sounds[X0]._paused && !a0._sounds[X0]._ended) {
                        Q0++;
                        G0 = a0._sounds[X0]._id;
                    }
                }
                if (Q0 === 1) {
                    z = null;
                } else {
                    G0 = null;
                }
            }
            var U0 = G0 ? a0._soundById(G0) : a0._inactiveSound();
            if (!U0) {
                return null;
            }
            if (G0 && !z) {
                z = U0._sprite || '__default';
            }
            if (z && T0) {
                a0._onends[U0._id] = T0;
            }
            if (!a0._loaded && !a0._sprite[z]) {
                a0.once('load', function() {
                    a0.play(a0._soundById(U0._id) ? U0._id : undefined);
                });
                return U0._id;
            }
            if (G0 && !U0._paused) {
                return U0._id;
            }
            var q0 = U0._seek > 0 ? U0._seek : a0._sprite[z][0] / 1000,
                O0 = ((a0._sprite[z][0] + a0._sprite[z][1]) / 1000) - q0,
                I0 = (O0 * 1000) / Math.abs(U0._rate);
            a0._endTimers[U0._id] = setTimeout(a0._ended.bind(a0, U0), I0);
            U0._paused = false;
            U0._ended = false;
            U0._sprite = z;
            U0._seek = q0;
            U0._start = a0._sprite[z][0] / 1000;
            U0._stop = (a0._sprite[z][0] + a0._sprite[z][1]) / 1000;
            U0._loop = !!(U0._loop || a0._sprite[z][2]);
            var H0 = U0._node;
            if (a0._webAudio) {
                var l0 = function() {
                    a0._refreshBuffer(U0);
                    var E = (U0._muted || a0._muted) ? 0 : U0._volume * B0.volume();
                    H0.gain.setValueAtTime(E, K0.currentTime);
                    U0._playStart = K0.currentTime;
                    if (typeof H0.bufferSource.start === 'undefined') {
                        U0._loop ? H0.bufferSource.noteGrainOn(0, q0, 86400) : H0.bufferSource.noteGrainOn(0, q0, O0);
                    } else {
                        U0._loop ? H0.bufferSource.start(0, q0, 86400) : H0.bufferSource.start(0, q0, O0);
                    } if (!a0._endTimers[U0._id]) {
                        a0._endTimers[U0._id] = setTimeout(a0._ended.bind(a0, U0), I0);
                    }
                    if (!p0[1]) {
                        setTimeout(function() {
                            a0._emit('play', U0._id);
                        }, 0);
                    }
                };
                if (a0._loaded) {
                    l0();
                } else {
                    a0.once('load', l0);
                    a0._clearTimer(U0._id);
                }
            } else {
                var n0 = function() {
                    H0.currentTime = q0;
                    H0.muted = U0._muted || a0._muted || B0._muted || H0.muted;
                    H0.volume = U0._volume * B0.volume();
                    H0.playbackRate = U0._rate;
                    setTimeout(function() {
                        H0.play();
                        if (!p0[1]) {
                            a0._emit('play', U0._id);
                        }
                    }, 0);
                };
                if (H0.readyState === 4 || !H0.readyState && navigator.isCocoonJS) {
                    n0();
                } else {
                    var u0 = function() {
                        a0._endTimers[U0._id] = setTimeout(a0._ended.bind(a0, U0), I0);
                        n0();
                        H0.removeEventListener('canplaythrough', u0, false);
                    };
                    H0.addEventListener('canplaythrough', u0, false);
                    a0._clearTimer(U0._id);
                }
            }
            return U0._id;
        },
        pause: function(E) {
            var z = this;
            if (!z._loaded) {
                z.once('play', function() {
                    z.pause(E);
                });
                return z;
            }
            var T0 = z._getSoundIds(E);
            for (var a0 = 0; a0 < T0.length; a0++) {
                z._clearTimer(T0[a0]);
                var p0 = z._soundById(T0[a0]);
                if (p0 && !p0._paused) {
                    p0._seek = z.seek(T0[a0]);
                    p0._paused = true;
                    z._stopFade(T0[a0]);
                    if (z._webAudio) {
                        if (!p0._node.bufferSource) {
                            return z;
                        }
                        if (typeof p0._node.bufferSource.stop === 'undefined') {
                            p0._node.bufferSource.noteOff(0);
                        } else {
                            p0._node.bufferSource.stop(0);
                        }
                        p0._node.bufferSource = null;
                    } else if (!isNaN(p0._node.duration)) {
                        p0._node.pause();
                    }
                    if (!arguments[1]) {
                        z._emit('pause', p0._id);
                    }
                }
            }
            return z;
        },
        stop: function(E) {
            var z = this;
            if (!z._loaded) {
                if (typeof z._sounds[0]._sprite !== 'undefined') {
                    z.once('play', function() {
                        z.stop(E);
                    });
                }
                return z;
            }
            var T0 = z._getSoundIds(E);
            for (var a0 = 0; a0 < T0.length; a0++) {
                z._clearTimer(T0[a0]);
                var p0 = z._soundById(T0[a0]);
                if (p0 && !p0._paused) {
                    p0._seek = p0._start || 0;
                    p0._paused = true;
                    p0._ended = true;
                    z._stopFade(T0[a0]);
                    if (z._webAudio && p0._node) {
                        if (!p0._node.bufferSource) {
                            return z;
                        }
                        if (typeof p0._node.bufferSource.stop === 'undefined') {
                            p0._node.bufferSource.noteOff(0);
                        } else {
                            p0._node.bufferSource.stop(0);
                        }
                        p0._node.bufferSource = null;
                    } else if (p0._node && !isNaN(p0._node.duration)) {
                        p0._node.pause();
                        p0._node.currentTime = p0._start || 0;
                    }
                    z._emit('stop', p0._id);
                }
            }
            return z;
        },
        mute: function(E, z) {
            var T0 = this;
            if (!T0._loaded) {
                T0.once('play', function() {
                    T0.mute(E, z);
                });
                return T0;
            }
            if (typeof z === 'undefined') {
                if (typeof E === 'boolean') {
                    T0._muted = E;
                } else {
                    return T0._muted;
                }
            }
            var a0 = T0._getSoundIds(z);
            for (var p0 = 0; p0 < a0.length; p0++) {
                var G0 = T0._soundById(a0[p0]);
                if (G0) {
                    G0._muted = E;
                    if (T0._webAudio && G0._node) {
                        G0._node.gain.setValueAtTime(E ? 0 : G0._volume * B0.volume(), K0.currentTime);
                    } else if (G0._node) {
                        G0._node.muted = B0._muted ? true : E;
                    }
                }
            }
            return T0;
        },
        _stopFade: function(E) {
            var z = this,
                T0 = z._soundById(E);
            if (T0._interval) {
                clearInterval(T0._interval);
                delete T0._interval;
                z._emit('faded', E);
            } else if (T0._timeout) {
                clearTimeout(T0._timeout);
                delete T0._timeout;
                T0._node.gain.cancelScheduledValues(K0.currentTime);
                z._emit('faded', E);
            }
            return z;
        },
        loop: function() {
            var E = this,
                z = arguments,
                T0, a0, p0;
            if (z.length === 0) {
                return E._loop;
            } else if (z.length === 1) {
                if (typeof z[0] === 'boolean') {
                    T0 = z[0];
                    E._loop = T0;
                } else {
                    p0 = E._soundById(parseInt(z[0], 10));
                    return p0 ? p0._loop : false;
                }
            } else if (z.length === 2) {
                T0 = z[0];
                a0 = parseInt(z[1], 10);
            }
            var G0 = E._getSoundIds(a0);
            for (var Q0 = 0; Q0 < G0.length; Q0++) {
                p0 = E._soundById(G0[Q0]);
                if (p0) {
                    p0._loop = T0;
                    if (E._webAudio && p0._node && p0._node.bufferSource) {
                        p0._node.bufferSource.loop = T0;
                    }
                }
            }
            return E;
        },
        playing: function(E) {
            var z = this,
                T0 = z._soundById(E) || z._sounds[0];
            return T0 ? !T0._paused : false;
        },
        duration: function() {
            return this._duration;
        },
        unload: function() {
            var E = this,
                z = E._sounds;
            for (var T0 = 0; T0 < z.length; T0++) {
                if (!z[T0]._paused) {
                    E.stop(z[T0]._id);
                    E._emit('end', z[T0]._id);
                }
                if (!E._webAudio) {
                    z[T0]._node.src = '';
                    z[T0]._node.removeEventListener('error', z[T0]._errorFn, false);
                    z[T0]._node.removeEventListener('canplaythrough', z[T0]._loadFn, false);
                }
                delete z[T0]._node;
                E._clearTimer(z[T0]._id);
                var a0 = B0._howls.indexOf(E);
                if (a0 >= 0) {
                    B0._howls.splice(a0, 1);
                }
            }
            if (r0) {
                delete r0[E._src];
            }
            E = null;
            return null;
        },
        on: function(E, z, T0, a0) {
            var p0 = this,
                G0 = p0['_on' + E];
            if (typeof z === 'function') {
                G0.push(a0 ? {
                    id: T0,
                    fn: z,
                    once: a0
                } : {
                    id: T0,
                    fn: z
                });
            }
            return p0;
        },
        off: function(E, z, T0) {
            var a0 = this,
                p0 = a0['_on' + E];
            if (z) {
                for (var G0 = 0; G0 < p0.length; G0++) {
                    if (z === p0[G0].fn && T0 === p0[G0].id) {
                        p0.splice(G0, 1);
                        break;
                    }
                }
            } else {
                a0['on' + E] = [];
            }
            return a0;
        },
        once: function(E, z, T0) {
            var a0 = this;
            a0.on(E, z, T0, 1);
            return a0;
        },
        _emit: function(z, T0, a0) {
            var p0 = this,
                G0 = p0['_on' + z];
            for (var Q0 = 0; Q0 < G0.length; Q0++) {
                if (!G0[Q0].id || G0[Q0].id === T0) {
                    setTimeout(function(E) {
                        E.call(this, T0, a0);
                    }.bind(p0, G0[Q0].fn), 0);
                    if (G0[Q0].once) {
                        p0.off(z, G0[Q0].fn, T0);
                    }
                }
            }
            return p0;
        },
        _ended: function(E) {
            var z = this,
                T0 = E._sprite,
                a0 = !!(E._loop || z._sprite[T0][2]);
            z._emit('end', E._id);
            if (z._onends[E._id]) {
                z._onends[E._id]();
                delete z._onends[E._id];
            }
            if (!z._webAudio && a0) {
                z.stop(E._id).play(E._id);
            }
            if (z._webAudio && a0) {
                z._emit('play', E._id);
                E._seek = E._start || 0;
                E._playStart = K0.currentTime;
                var p0 = ((E._stop - E._start) * 1000) / Math.abs(E._rate);
                z._endTimers[E._id] = setTimeout(z._ended.bind(z, E), p0);
            }
            if (z._webAudio && !a0) {
                E._paused = true;
                E._ended = true;
                E._seek = E._start || 0;
                z._clearTimer(E._id);
                E._node.bufferSource = null;
            }
            if (!z._webAudio && !a0) {
                z.stop(E._id);
            }
            return z;
        },
        _clearTimer: function(E) {
            var z = this;
            if (z._endTimers[E]) {
                clearTimeout(z._endTimers[E]);
                delete z._endTimers[E];
            }
            return z;
        },
        _soundById: function(E) {
            var z = this;
            for (var T0 = 0; T0 < z._sounds.length; T0++) {
                if (E === z._sounds[T0]._id) {
                    return z._sounds[T0];
                }
            }
            return null;
        },
        _inactiveSound: function() {
            var E = this;
            E._drain();
            for (var z = 0; z < E._sounds.length; z++) {
                if (E._sounds[z]._ended) {
                    return E._sounds[z].reset();
                }
            }
            return new t0(E);
        },
        _drain: function() {
            var E = this,
                z = E._pool,
                T0 = 0,
                a0 = 0;
            if (E._sounds.length < z) {
                return;
            }
            for (a0 = 0; a0 < E._sounds.length; a0++) {
                if (E._sounds[a0]._ended) {
                    T0++;
                }
            }
            for (a0 = E._sounds.length - 1; a0 >= 0; a0--) {
                if (T0 <= z) {
                    return;
                }
                if (E._sounds[a0]._ended) {
                    if (E._webAudio && E._sounds[a0]._node) {
                        E._sounds[a0]._node.disconnect(0);
                    }
                    E._sounds.splice(a0, 1);
                    T0--;
                }
            }
        },
        _getSoundIds: function(E) {
            var z = this;
            if (typeof E === 'undefined') {
                var T0 = [];
                for (var a0 = 0; a0 < z._sounds.length; a0++) {
                    T0.push(z._sounds[a0]._id);
                }
                return T0;
            } else {
                return [E];
            }
        },
        _refreshBuffer: function(E) {
            var z = this;
            E._node.bufferSource = K0.createBufferSource();
            E._node.bufferSource.buffer = r0[z._src];
            if (E._panner) {
                E._node.bufferSource.connect(E._panner);
            } else {
                E._node.bufferSource.connect(E._node);
            }
            E._node.bufferSource.loop = E._loop;
            if (E._loop) {
                E._node.bufferSource.loopStart = E._start || 0;
                E._node.bufferSource.loopEnd = E._stop;
            }
            E._node.bufferSource.playbackRate.value = z._rate;
            return z;
        }
    };
    var t0 = function(E) {
        this._parent = E;
        this.init();
    };
    t0.prototype = {
        init: function() {
            var E = this,
                z = E._parent;
            E._muted = z._muted;
            E._loop = z._loop;
            E._volume = z._volume;
            E._muted = z._muted;
            E._rate = z._rate;
            E._seek = 0;
            E._paused = true;
            E._ended = true;
            E._id = Math.round(Date.now() * Math.random());
            z._sounds.push(E);
            E.create();
            return E;
        },
        create: function() {
            var E = this,
                z = E._parent,
                T0 = (B0._muted || E._muted || E._parent._muted) ? 0 : E._volume * B0.volume();
            if (z._webAudio) {
                E._node = (typeof K0.createGain === 'undefined') ? K0.createGainNode() : K0.createGain();
                E._node.gain.setValueAtTime(T0, K0.currentTime);
                E._node.paused = true;
                E._node.connect(E0);
            } else {
                E._node = new Audio();
                E._errorFn = E._errorListener.bind(E);
                E._node.addEventListener('error', E._errorFn, false);
                E._loadFn = E._loadListener.bind(E);
                E._node.addEventListener('canplaythrough', E._loadFn, false);
                E._node.src = z._src;
                E._node.preload = 'auto';
                E._node.volume = T0;
                E._node.load();
            }
            return E;
        },
        reset: function() {
            var E = this,
                z = E._parent;
            E._muted = z._muted;
            E._loop = z._loop;
            E._volume = z._volume;
            E._muted = z._muted;
            E._rate = z._rate;
            E._seek = 0;
            E._paused = true;
            E._ended = true;
            E._sprite = null;
            E._id = Math.round(Date.now() * Math.random());
            return E;
        },
        _errorListener: function() {
            var E = this;
            if (E._node.error && E._node.error.code === 4) {
                B0.noAudio = true;
            }
            E._parent._emit('loaderror', E._id, E._node.error ? E._node.error.code : 0);
            E._node.removeEventListener('error', E._errorListener, false);
        },
        _loadListener: function() {
            var E = this,
                z = E._parent;
            if (z._duration == 0) {
                z._duration = Math.ceil(E._node.duration * 10) / 10;
            }
            if (Object.keys(z._sprite).length === 0) {
                z._sprite = {
                    __default: [0, z._duration * 1000]
                };
            }
            if (!z._loaded) {
                z._loaded = true;
                z._emit('load');
            }
            if (z._autoplay) {
                z.play();
            }
            E._node.removeEventListener('canplaythrough', E._loadFn, false);
        }
    };
    if (W0) {
        var r0 = {},
            S0 = function(U0) {
                var q0 = U0._src;
                if (r0[q0]) {
                    U0._duration = r0[q0].duration;
                    P0(U0);
                    return;
                }
                if (/^data:[^;]+;base64,/.test(q0)) {
                    window.atob = window.atob || function(E) {
                        var z = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
                        var T0 = String(E).replace(/=+$/, '');
                        for (var a0 = 0, p0, G0, Q0 = 0, X0 = ''; G0 = T0.charAt(Q0++); ~G0 && (p0 = a0 % 4 ? p0 * 64 + G0 : G0, a0++ % 4) ? X0 += String.fromCharCode(255 & p0 >> (-2 * a0 & 6)) : 0) {
                            G0 = z.indexOf(G0);
                        }
                        return X0;
                    };
                    var O0 = atob(q0.split(',')[1]);
                    var I0 = new Uint8Array(O0.length);
                    for (var H0 = 0; H0 < O0.length; ++H0) {
                        I0[H0] = O0.charCodeAt(H0);
                    }
                    c0(I0.buffer, U0);
                } else {
                    var l0 = new XMLHttpRequest();
                    l0.open('GET', q0, true);
                    l0.responseType = 'arraybuffer';
                    l0.onload = function() {
                        c0(l0.response, U0);
                    };
                    l0.onerror = function() {
                        if (U0._webAudio) {
                            U0._html5 = true;
                            U0._webAudio = false;
                            U0._sounds = [];
                            delete r0[q0];
                            U0.load();
                        }
                    };
                    Z4(l0);
                }
            },
            Z4 = function(z) {
                try {
                    z.send();
                } catch (E) {
                    z.onerror();
                }
            },
            c0 = function(z, T0) {
                K0.decodeAudioData(z, function(E) {
                    if (E) {
                        r0[T0._src] = E;
                        P0(T0, E);
                    }
                }, function() {
                    T0._emit('loaderror');
                });
            },
            P0 = function(E, z) {
                if (z && !E._duration) {
                    E._duration = z.duration;
                }
                if (Object.keys(E._sprite).length === 0) {
                    E._sprite = {
                        __default: [0, E._duration * 1000]
                    };
                }
                if (!E._loaded) {
                    E._loaded = true;
                    E._emit('load');
                }
                if (E._autoplay) {
                    E.play();
                }
            };
    }

    function X4() {
        try {
            if (typeof AudioContext !== 'undefined') {
                K0 = new AudioContext();
            } else if (typeof webkitAudioContext !== 'undefined') {
                K0 = new webkitAudioContext();
            } else {
                W0 = false;
            }
        } catch (E) {
            W0 = false;
        }
        if (!W0) {
            if (typeof Audio !== 'undefined') {
                try {
                    new Audio();
                } catch (E) {
                    R0 = true;
                }
            } else {
                R0 = true;
            }
        }
        var z = new Audio();
        if (z.muted) {
            R0 = true;
        }
    }
    if (typeof define === 'function' && define.amd) {
        define('howler', function() {
            return {
                Howler: B0,
                Howl: h0
            };
        });
    }
    if (typeof exports !== 'undefined') {
        exports.Howler = B0;
        exports.Howl = h0;
    }
    if (typeof window !== 'undefined') {
        window.HowlerGlobal = v0;
        window.Howler = B0;
        window.Howl = h0;
        window.Sound = t0;
    }
})();;
(function(p0, G0) {
    var Q0 = 'pageshow',
        X0 = 'pagehide',
        U0 = 'mousewheel',
        q0 = 'DOMMouseScroll',
        O0 = 'keydown',
        I0 = 'mousedown',
        H0 = 'mousemove',
        l0 = 'msvisibilitychange',
        n0 = 'mozvisibilitychange',
        u0 = 'webkitvisibilitychange',
        K0 = 'visibilitychange',
        W0 = GameConfig.idleTimeout ? GameConfig.idleTimeout : m5i.s64,
        R0, E0 = m5i.C14,
        v0, B0, h0 = {
            hidden: K0,
            webkitHidden: u0,
            mozHidden: n0,
            msHidden: l0
        };

    function t0(E, z) {
        var T0 = 'Events';
        if ((!E0 && E == m5i.J6) || (E0 && E == m5i.B5)) return;
        E0 = E == m5i.B5;
        z = z || p0;
        var a0 = G0.createEvent(T0);
        a0.initEvent(E, m5i.R3b, m5i.R3b);
        z.dispatchEvent(a0);
    }

    function r0() {
        R0 = p0.setTimeout(function() {
            t0(m5i.B5);
        }, W0 * m5i.S14);
    }

    function S0() {
        p0.clearTimeout(R0);
        t0(m5i.J6);
        r0();
    }
    p0.addEventListener(H0, S0, m5i.C14);
    p0.addEventListener(I0, S0, m5i.C14);
    p0.addEventListener(m5i.p64, S0, m5i.C14);
    p0.addEventListener(O0, S0, m5i.C14);
    p0.addEventListener(q0, S0, m5i.C14);
    p0.addEventListener(U0, S0, m5i.C14);
    p0.addEventListener(m5i.F0b, S0, m5i.C14);
    p0.addEventListener(m5i.C6b, S0, m5i.C14);
    p0.addEventListener(X0, function() {
        p0.clearTimeout(R0);
        t0(m5i.B5);
    }, m5i.C14);
    p0.addEventListener(Q0, S0, m5i.C14);
    for (v0 in h0) {
        if (v0 in G0) {
            B0 = h0[v0];
            break;
        }
    }
    G0.addEventListener(B0, function() {
        if (G0[v0]) {
            p0.clearTimeout(R0);
        } else {
            r0();
        }
        t0(G0[v0] ? m5i.B5 : m5i.J6);
    });
    r0();
})(window, document);;
(function() {
    'use strict';
    var Q0 = typeof module !== 'undefined' && module.exports,
        X0 = typeof Element !== 'undefined' && 'ALLOW_KEYBOARD_INPUT' in Element,
        U0 = (function() {
            var E;
            var z;
            var T0 = [
                ['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'],
                ['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'],
                ['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'],
                ['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'],
                ['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError']
            ];
            var a0 = 0;
            var p0 = T0.length;
            var G0 = {};
            for (; a0 < p0; a0++) {
                E = T0[a0];
                if (E && E[1] in document) {
                    for (a0 = 0, z = E.length; a0 < z; a0++) {
                        G0[T0[0][a0]] = E[a0];
                    }
                    return G0;
                }
            }
            return false;
        })(),
        q0 = {
            request: function(E) {
                var z = U0.requestFullscreen;
                E = E || document.documentElement;
                if (/5\.1[\.\d]* Safari/.test(navigator.userAgent)) {
                    E[z]();
                } else {
                    E[z](X0 && Element.ALLOW_KEYBOARD_INPUT);
                }
            },
            exit: function() {
                document[U0.exitFullscreen]();
            },
            toggle: function(E) {
                if (this.isFullscreen) {
                    this.exit();
                } else {
                    this.request(E);
                }
            },
            onchange: function() {},
            onerror: function() {},
            raw: U0
        };
    if (!U0) {
        if (Q0) {
            module.exports = false;
        } else {
            window.screenfull = false;
        }
        return;
    }
    Object.defineProperties(q0, {
        isFullscreen: {
            get: function() {
                return !!document[U0.fullscreenElement];
            }
        },
        element: {
            enumerable: true,
            get: function() {
                return document[U0.fullscreenElement];
            }
        },
        enabled: {
            enumerable: true,
            get: function() {
                var E = navigator.userAgent;
                return !!document[U0.fullscreenEnabled] && E.indexOf('SAMSUNG GT-I9505') == -1 && E.indexOf('Silk/') == -1;
            }
        }
    });
    document.addEventListener(U0.fullscreenchange, function(E) {
        q0.onchange.call(q0, E);
    });
    document.addEventListener(U0.fullscreenerror, function(E) {
        q0.onerror.call(q0, E);
    });
    if (Q0) {
        module.exports = q0;
    } else {
        window.screenfull = q0;
    }
})();;
(function(p0, G0) {
    var Q0 = "Mobile",
        X0 = "iPad",
        U0 = ".",
        q0 = "unsupported",
        O0 = "windows",
        I0 = "android",
        H0 = "ios",
        l0 = "_",
        n0 = "#ath",
        u0 = 1440,
        K0 = "org.cubiq.addtohome",
        W0 = "如要把應用程式加至主屏幕, 請點擊%icon, 然後<strong>加至主屏幕</strong>.",
        R0 = "如要把应用程式加至主屏幕,请点击%icon, 然后<strong>加至主屏幕</strong>",
        E0 = "För att lägga till denna webbapplikation på hemskärmen: tryck på %icon och därefter <strong>Lägg till på hemskärmen</strong>.",
        v0 = "Om deze webapp op je telefoon te installeren, klik op %icon en dan <strong>Zet in beginscherm</strong>.",
        B0 = "Para adicionar esta app ao ecrã principal: clique %icon e depois <strong>Ecrã principal</strong>.",
        h0 = "Para adicionar este app à tela de início: clique %icon e então <strong>Tela de início</strong>.",
        t0 = "For å installere denne appen på hjem-skjermen: trykk på %icon og deretter <strong>Legg til på Hjem-skjerm</strong>.",
        r0 = 'Per aggiungere questa web app alla schermata iniziale, apri il menu opzioni del browser e premi su <strong>Aggiungi alla homescreen</strong>. <small>Puoi accedere al menu premendo il pulsante hardware delle opzioni se la tua device ne ha uno, oppure premendo l\'icona <span class="ath-action-icon">icon</span> in alto a destra.</small>',
        S0 = "Per aggiungere questa web app alla schermata iniziale: premi %icon e poi <strong>Aggiungi a Home</strong>.",
        Z4 = '<span dir="rtl">להוספת האפליקציה למסך הבית: ללחוץ על %icon ואז <strong>הוסף למסך הבית</strong>.</span>',
        c0 = "Pour ajouter cette application web sur l'écran d'accueil : Appuyez %icon et sélectionnez <strong>Ajouter sur l'écran d'accueil</strong>.",
        P0 = "Para añadir esta aplicación web a la pantalla de inicio: pulsa %icon y selecciona <strong>Añadir a pantalla de inicio</strong>.",
        X4 = "To add this web app to the home screen: tap %icon and then <strong>Add to Home Screen</strong>.",
        b0 = 'To add this web app to the home screen open the browser option menu and tap on <strong>Add to homescreen</strong>. <small>The menu can be accessed by pressing the menu hardware button if your device has one, or by tapping the top right menu icon <span class="ath-action-icon">icon</span>.</small>',
        p4 = "Um diese Web-App zum Home-Bildschirm hinzuzufügen, tippen Sie auf %icon und dann <strong>Zum Home-Bildschirm</strong>.",
        u4 = "load",
        i2 = "addEventListener",
        i4 = i2 in p0,
        o4 = m5i.C14;
    if (G0.readyState === m5i.x04) {
        o4 = m5i.R3b;
    } else if (i4) {
        p0.addEventListener(u4, y4, m5i.C14);
    }

    function y4() {
        p0.removeEventListener(u4, y4, m5i.C14);
        o4 = m5i.R3b;
    }
    var y0 = /\/ath(\/)?$/,
        h4 = /([\?&]ath=[^&]*$|&ath=[^&]*(&))/,
        U4;

    function C0(E) {
        U4 = U4 || new C0.Class(E);
        return U4;
    }
    C0.intl = {
        de_de: {
            ios: p4,
            android: b0
        },
        en_us: {
            ios: X4,
            android: b0
        },
        es_es: {
            ios: P0,
            android: b0
        },
        fr_fr: {
            ios: c0,
            android: b0
        },
        he_il: {
            ios: Z4,
            android: b0
        },
        it_it: {
            ios: S0,
            android: r0
        },
        nb_no: {
            ios: t0,
            android: b0
        },
        pt_br: {
            ios: h0,
            android: b0
        },
        pt_pt: {
            ios: B0,
            android: b0
        },
        nl_nl: {
            ios: v0,
            android: b0
        },
        sv_se: {
            ios: E0,
            android: b0
        },
        zh_cn: {
            ios: R0,
            android: b0
        },
        zh_tw: {
            ios: W0,
            android: b0
        }
    };
    for (var f4 in C0.intl) {
        C0.intl[f4.substr(m5i.c4, m5i.C4)] = C0.intl[f4];
    }
    C0.defaults = {
        appID: K0,
        fontSize: m5i.B44,
        debug: m5i.C14,
        modal: m5i.C14,
        mandatory: m5i.C14,
        autostart: m5i.R3b,
        skipFirstVisit: m5i.C14,
        startDelay: m5i.I4,
        lifespan: m5i.B44,
        displayPace: u0,
        maxDisplayCount: m5i.c4,
        icon: m5i.R3b,
        message: m5i.n6b,
        validLocation: [],
        onInit: m5i.V3b,
        onShow: m5i.V3b,
        onRemove: m5i.V3b,
        onAdd: m5i.V3b,
        onPrivate: m5i.V3b,
        privateModeOverride: m5i.C14,
        detectHomescreen: m5i.C14
    };
    var B4 = p0.navigator.userAgent,
        t4 = p0.navigator;
    J2(C0, {
        hasToken: G0.location.hash == n0 || y0.test(G0.location.href) || h4.test(G0.location.search),
        isRetina: p0.devicePixelRatio && p0.devicePixelRatio > m5i.I4,
        isIDevice: /iphone|ipod|ipad/i.test(B4),
        isMobileChrome: B4.indexOf(m5i.f9b) > -m5i.I4 && /Chrome\/[.0-9]*/.test(B4),
        isMobileIE: B4.indexOf(m5i.y2b) > -m5i.I4,
        language: t4.language && t4.language.toLowerCase().replace(m5i.Z9b, l0) || m5i.n6b
    });
    C0.language = C0.language && C0.language in C0.intl ? C0.language : m5i.r8;
    C0.isMobileSafari = C0.isIDevice && B4.indexOf(m5i.I64) > -m5i.I4 && B4.indexOf(m5i.q14) < m5i.c4;
    C0.OS = C0.isIDevice ? H0 : C0.isMobileChrome ? I0 : C0.isMobileIE ? O0 : q0;
    C0.OSVersion = B4.match(/(OS|Android) (\d+[_\.]\d+)/);
    C0.OSVersion = C0.OSVersion && C0.OSVersion[m5i.C4] ? +C0.OSVersion[m5i.C4].replace(l0, U0) : m5i.c4;
    C0.isStandalone = p0.navigator.standalone || C0.isMobileChrome && screen.height - G0.documentElement.clientHeight < 40;
    C0.isTablet = C0.isMobileSafari && B4.indexOf(X0) > -m5i.I4 || C0.isMobileChrome && B4.indexOf(Q0) < m5i.c4;
    C0.isCompatible = C0.isMobileSafari && C0.OSVersion >= m5i.L4 || C0.isMobileChrome;
    var j4 = {
        lastDisplayTime: m5i.c4,
        returningVisitor: m5i.C14,
        displayCount: m5i.c4,
        optedout: m5i.C14,
        added: m5i.C14
    };
    C0.removeSession = function(z) {
        try {
            localStorage.removeItem(z || C0.defaults.appID);
        } catch (E) {}
    };
    C0.Class = function(z) {
        this.options = J2({}, C0.defaults);
        J2(this.options, z);
        if (!i4) {
            return;
        }
        this.options.mandatory = this.options.mandatory && ("standalone" in p0.navigator || this.options.debug);
        this.options.modal = this.options.modal || this.options.mandatory;
        if (this.options.mandatory) {
            this.options.startDelay = -.5;
        }
        this.options.detectHomescreen = this.options.detectHomescreen === true ? "hash" : this.options.detectHomescreen;
        if (this.options.debug) {
            C0.isCompatible = true;
            C0.OS = typeof this.options.debug == "string" ? this.options.debug : C0.OS == "unsupported" ? "android" : C0.OS;
            C0.OSVersion = C0.OS == "ios" ? "8" : "4";
        }
        this.container = G0.documentElement;
        this.session = localStorage.getItem(this.options.appID);
        this.session = this.session ? JSON.parse(this.session) : undefined;
        if (C0.hasToken && (!C0.isCompatible || !this.session)) {
            C0.hasToken = false;
            Y2();
        }
        if (!C0.isCompatible) {
            return;
        }
        this.session = this.session || j4;
        try {
            localStorage.setItem(this.options.appID, JSON.stringify(this.session));
            C0.hasLocalStorage = true;
        } catch (E) {
            C0.hasLocalStorage = false;
            if (this.options.onPrivate) {
                this.options.onPrivate.call(this);
            }
        }
        var T0 = !this.options.validLocation.length;
        for (var a0 = this.options.validLocation.length; a0--;) {
            if (this.options.validLocation[a0].test(G0.location.href)) {
                T0 = true;
                break;
            }
        }
        if (localStorage.getItem("addToHome")) {
            this.optOut();
        }
        if (this.session.optedout || this.session.added || !T0) {
            return;
        }
        if (C0.isStandalone) {
            if (!this.session.added) {
                this.session.added = true;
                this.updateSession();
                if (this.options.onAdd && C0.hasLocalStorage) {
                    this.options.onAdd.call(this);
                }
            }
            return;
        }
        if (this.options.detectHomescreen) {
            if (C0.hasToken) {
                Y2();
                if (!this.session.added) {
                    this.session.added = true;
                    this.updateSession();
                    if (this.options.onAdd && C0.hasLocalStorage) {
                        this.options.onAdd.call(this);
                    }
                }
                return;
            }
            if (this.options.detectHomescreen == "hash") {
                history.replaceState("", p0.document.title, G0.location.href + "#ath");
            } else if (this.options.detectHomescreen == "smartURL") {
                history.replaceState("", p0.document.title, G0.location.href.replace(/(\/)?$/, "/ath$1"));
            } else {
                history.replaceState("", p0.document.title, G0.location.href + (G0.location.search ? "&" : "?") + "ath=");
            }
        }
        if (!this.session.returningVisitor) {
            this.session.returningVisitor = true;
            this.updateSession();
            if (this.options.skipFirstVisit) {
                return;
            }
        }
        if (!this.options.privateModeOverride && !C0.hasLocalStorage) {
            return;
        }
        this.ready = true;
        if (this.options.onInit) {
            this.options.onInit.call(this);
        }
        if (this.options.autostart) {
            this.show();
        }
    };
    C0.Class.prototype = {
        events: {
            load: "_delayedShow",
            error: "_delayedShow",
            orientationchange: "resize",
            resize: "resize",
            scroll: "resize",
            click: "remove",
            touchmove: "_preventDefault",
            transitionend: "_removeElements",
            webkitTransitionEnd: "_removeElements",
            MSTransitionEnd: "_removeElements"
        },
        handleEvent: function(E) {
            var z = this.events[E.type];
            if (z) {
                this[z](E);
            }
        },
        show: function(E) {
            if (this.options.autostart && !o4) {
                setTimeout(this.show.bind(this), 50);
                return;
            }
            if (this.shown) {
                return;
            }
            var z = Date.now(),
                T0 = this.session.lastDisplayTime;
            if (E !== true) {
                if (!this.ready) {
                    return;
                }
                if (z - T0 < this.options.displayPace * 6e4) {
                    return;
                }
                if (this.options.maxDisplayCount && this.session.displayCount >= this.options.maxDisplayCount) {
                    return;
                }
            }
            this.shown = true;
            this.session.lastDisplayTime = z;
            this.session.displayCount++;
            this.updateSession();
            if (!this.applicationIcon) {
                if (C0.OS == "ios") {
                    this.applicationIcon = G0.querySelector('head link[rel^=apple-touch-icon][sizes="152x152"],head link[rel^=apple-touch-icon][sizes="144x144"],head link[rel^=apple-touch-icon][sizes="120x120"],head link[rel^=apple-touch-icon][sizes="114x114"],head link[rel^=apple-touch-icon]');
                } else {
                    this.applicationIcon = G0.querySelector('head link[rel^="shortcut icon"][sizes="196x196"],head link[rel^=apple-touch-icon]');
                }
            }
            var a0 = "";
            if (this.options.message in C0.intl) {
                a0 = C0.intl[this.options.message][C0.OS];
            } else if (this.options.message !== "") {
                a0 = this.options.message;
            } else {
                a0 = C0.intl[C0.language][C0.OS];
            }
            a0 = "<p>" + a0.replace("%icon", '<span class="ath-action-icon">icon</span>') + "</p>";
            this.viewport = G0.createElement("div");
            this.viewport.className = "ath-viewport";
            if (this.options.modal) {
                this.viewport.className += " ath-modal";
            }
            if (this.options.mandatory) {
                this.viewport.className += " ath-mandatory";
            }
            this.viewport.style.position = "absolute";
            this.element = G0.createElement("div");
            this.element.className = "ath-container ath-" + C0.OS + " ath-" + C0.OS + (C0.OSVersion + "").substr(0, 1) + " ath-" + (C0.isTablet ? "tablet" : "phone");
            this.element.style.cssText = "-webkit-transition-property:-webkit-transform,opacity;-webkit-transition-duration:0s;-webkit-transition-timing-function:ease-out;transition-property:transform,opacity;transition-duration:0s;transition-timing-function:ease-out;";
            this.element.style.webkitTransform = "translate3d(0,-" + p0.innerHeight + "px,0)";
            this.element.style.transform = "translate3d(0,-" + p0.innerHeight + "px,0)";
            if (this.options.icon && this.applicationIcon) {
                this.element.className += " ath-icon";
                this.img = G0.createElement("img");
                this.img.className = "ath-application-icon";
                this.img.addEventListener("load", this, false);
                this.img.addEventListener("error", this, false);
                this.img.src = this.applicationIcon.href;
                this.element.appendChild(this.img);
            }
            this.element.innerHTML += a0;
            this.viewport.style.left = "-99999em";
            this.viewport.appendChild(this.element);
            this.container.appendChild(this.viewport);
            if (!this.img) {
                this._delayedShow();
            }
        },
        _delayedShow: function(E) {
            setTimeout(this._show.bind(this), this.options.startDelay * 1e3 + 500);
        },
        _show: function() {
            var E = this;
            this.updateViewport();
            p0.addEventListener("resize", this, false);
            p0.addEventListener("scroll", this, false);
            p0.addEventListener("orientationchange", this, false);
            if (this.options.modal) {
                G0.addEventListener("touchmove", this, true);
            }
            if (!this.options.mandatory) {
                setTimeout(function() {
                    E.element.addEventListener("click", E, true);
                }, 1e3);
            }
            setTimeout(function() {
                E.element.style.webkitTransitionDuration = "1.2s";
                E.element.style.transitionDuration = "1.2s";
                E.element.style.webkitTransform = "translate3d(0,0,0)";
                E.element.style.transform = "translate3d(0,0,0)";
            }, 0);
            if (this.options.lifespan) {
                this.removeTimer = setTimeout(this.remove.bind(this), this.options.lifespan * 1e3);
            }
            if (this.options.onShow) {
                this.options.onShow.call(this);
            }
        },
        remove: function() {
            clearTimeout(this.removeTimer);
            if (this.img) {
                this.img.removeEventListener("load", this, false);
                this.img.removeEventListener("error", this, false);
            }
            p0.removeEventListener("resize", this, false);
            p0.removeEventListener("scroll", this, false);
            p0.removeEventListener("orientationchange", this, false);
            G0.removeEventListener("touchmove", this, true);
            this.element.removeEventListener("click", this, true);
            this.element.addEventListener("transitionend", this, false);
            this.element.addEventListener("webkitTransitionEnd", this, false);
            this.element.addEventListener("MSTransitionEnd", this, false);
            this.element.style.webkitTransitionDuration = "0.3s";
            this.element.style.opacity = "0";
        },
        _removeElements: function() {
            this.element.removeEventListener("transitionend", this, false);
            this.element.removeEventListener("webkitTransitionEnd", this, false);
            this.element.removeEventListener("MSTransitionEnd", this, false);
            this.container.removeChild(this.viewport);
            this.shown = false;
            if (this.options.onRemove) {
                this.options.onRemove.call(this);
            }
        },
        updateViewport: function() {
            if (!this.shown) {
                return;
            }
            this.viewport.style.width = p0.innerWidth + "px";
            this.viewport.style.height = p0.innerHeight + "px";
            this.viewport.style.left = p0.scrollX + "px";
            this.viewport.style.top = p0.scrollY + "px";
            var E = G0.documentElement.clientWidth;
            this.orientation = E > G0.documentElement.clientHeight ? "landscape" : "portrait";
            var z = C0.OS == "ios" ? this.orientation == "portrait" ? screen.width : screen.height : screen.width;
            this.scale = screen.width > E ? 1 : z / p0.innerWidth;
            this.element.style.fontSize = this.options.fontSize / this.scale + "px";
        },
        resize: function() {
            clearTimeout(this.resizeTimer);
            this.resizeTimer = setTimeout(this.updateViewport.bind(this), 100);
        },
        updateSession: function() {
            if (C0.hasLocalStorage === false) {
                return;
            }
            localStorage.setItem(this.options.appID, JSON.stringify(this.session));
        },
        clearSession: function() {
            this.session = j4;
            this.updateSession();
        },
        optOut: function() {
            this.session.optedout = true;
            this.updateSession();
        },
        optIn: function() {
            this.session.optedout = false;
            this.updateSession();
        },
        clearDisplayCount: function() {
            this.session.displayCount = 0;
            this.updateSession();
        },
        _preventDefault: function(E) {
            E.preventDefault();
            E.stopPropagation();
        }
    };

    function J2(E, z) {
        for (var T0 in z) {
            E[T0] = z[T0];
        }
        return E;
    }

    function Y2() {
        var E = "$2",
            z = "$1",
            T0 = "#";
        if (G0.location.hash == n0) {
            history.replaceState(m5i.n6b, p0.document.title, G0.location.href.split(T0)[m5i.c4]);
        }
        if (y0.test(G0.location.href)) {
            history.replaceState(m5i.n6b, p0.document.title, G0.location.href.replace(y0, z));
        }
        if (h4.test(G0.location.search)) {
            history.replaceState(m5i.n6b, p0.document.title, G0.location.href.replace(h4, E));
        }
    }
    p0.addToHomescreen = C0;
})(window, document);
document.addEventListener(m5i.g5, function(E) {
    var z = 'nl.zygomatic.';
    addToHomescreen({
        appID: z + E.gameName,
        maxDisplayCount: m5i.I4,
        skipFirstVisit: m5i.R3b
    });
}, m5i.C14);;
var languageData = {
        d_ContinuePreviousGame: [m5i.k3, m5i.k3, m5i.b2b, m5i.g64, m5i.a04, m5i.s7, m5i.s7, m5i.s7, m5i.o4b, m5i.o4b, m5i.y7b, m5i.K4b, m5i.t44, m5i.Z3b, m5i.J9, m5i.l7],
        d_StartNewGame: [m5i.u1b, m5i.u1b, m5i.m24, m5i.e8, m5i.n9, m5i.Y1, m5i.Y1, m5i.Y1, m5i.A64, m5i.A64, m5i.F6b, m5i.h6b, m5i.Z2b, m5i.z7b, m5i.m64, m5i.s04],
        d_Play: [m5i.r3b, m5i.r3b, m5i.r3b, m5i.Z5b, m5i.C7b, m5i.D1b, m5i.D1b, m5i.D1b, m5i.d2b, m5i.d2b, m5i.N8, m5i.c3, m5i.S9b, m5i.Q4, m5i.t1, m5i.u6b],
        d_Help: [m5i.F44, m5i.F44, m5i.F8b, m5i.F44, m5i.E1, m5i.W2b, m5i.W2b, m5i.W2b, m5i.b7b, m5i.b7b, m5i.i0b, m5i.G2, m5i.A1b, m5i.s9b, m5i.W6, m5i.Z84],
        d_HighScore: [m5i.c0b, m5i.c0b, m5i.x0, m5i.G9, m5i.F4, m5i.o2, m5i.o2, m5i.o2, m5i.D2, m5i.D2, m5i.u7, m5i.B14, m5i.x0b, m5i.z0, m5i.Z8, m5i.j94],
        d_More: [m5i.w5b, m5i.w5b, m5i.R2b, m5i.u8, m5i.X1b, m5i.y5b, m5i.y5b, m5i.y5b, m5i.P5b, m5i.P5b, m5i.T5, m5i.u64, m5i.q7, m5i.Y7b, m5i.y6b, m5i.c94],
        d_Howtoplay: [m5i.Y2b, m5i.Y2b, m5i.u9, m5i.R7b, m5i.b8, m5i.D14, m5i.D14, m5i.D14, m5i.i9, m5i.i9, m5i.Q2, m5i.t2b, m5i.N14, m5i.J4, m5i.h9b, m5i.P7b],
        d_HowtoplayText: [m5i.K94, m5i.K94, m5i.R94, m5i.z14, m5i.z4b, m5i.D64, m5i.D64, m5i.D64, m5i.t7b, m5i.S2, m5i.o6, m5i.g4b, m5i.O84, m5i.R4, m5i.n3b, m5i.c2],
        d_111: [m5i.C2b, m5i.C2b, m5i.C2b, m5i.C2b, m5i.C2b, m5i.C2b, m5i.C2b, m5i.C2b, m5i.C2b, m5i.C2b, m5i.C2b, m5i.C2b, m5i.C2b, m5i.C2b, m5i.C2b, m5i.C2b],
        d_Back: [m5i.y74, m5i.y74, m5i.P8, m5i.P24, m5i.k1, m5i.Q5b, m5i.Q5b, m5i.Q5b, m5i.q0b, m5i.q0b, m5i.e3b, m5i.q84, m5i.l9b, m5i.G44, m5i.E4b, m5i.L1],
        d_Endgame: [m5i.g2b, m5i.g2b, m5i.a94, m5i.X24, m5i.a8, m5i.A5, m5i.A5, m5i.A5, m5i.Y8, m5i.Y8, m5i.M6b, m5i.x7, m5i.v5, m5i.X7, m5i.U8b, m5i.J1],
        d_Timeout: [m5i.Q14, m5i.Q14, m5i.h0b, m5i.d7, m5i.T1b, m5i.b1b, m5i.b1b, m5i.b1b, m5i.j3, m5i.j3, m5i.x8b, m5i.P1b, m5i.n5b, m5i.F3b, m5i.h64, m5i.L7b],
        d_LevelCompleted: [m5i.A0b, m5i.A0b, m5i.r74, m5i.R6, m5i.T2, m5i.l0b, m5i.l0b, m5i.l0b, m5i.k2, m5i.k2, m5i.Z1b, m5i.G14, m5i.B6b, m5i.Z1, m5i.G7, m5i.K1],
        d_Bonus: [m5i.e24, m5i.e24, m5i.e24, m5i.e24, m5i.n14, m5i.Q5, m5i.Q5, m5i.Q5, m5i.b24, m5i.G1, m5i.e24, m5i.e24, m5i.e24, m5i.A6, m5i.z8, m5i.e24],
        d_TimeBonus: [m5i.X9, m5i.X9, m5i.e0b, m5i.L9, m5i.F0, m5i.N3b, m5i.N3b, m5i.N3b, m5i.d1b, m5i.j1b, m5i.R7, m5i.O0b, m5i.D5, m5i.t5, m5i.y64, m5i.l64],
        d_NextLevel: [m5i.H3, m5i.H3, m5i.p14, m5i.T5b, m5i.U6, m5i.S04, m5i.S04, m5i.S04, m5i.x44, m5i.x44, m5i.k9b, m5i.G64, m5i.w7b, m5i.F4b, m5i.r44, m5i.d5b],
        d_Score: [m5i.W24, m5i.W24, m5i.W24, m5i.W24, m5i.J8, m5i.O3, m5i.O3, m5i.O3, m5i.f74, m5i.f74, m5i.W24, m5i.T74, m5i.A3, m5i.D6, m5i.V1b, m5i.n4b],
        d_Time: [m5i.L2b, m5i.L2b, m5i.g0, m5i.C74, m5i.w8, m5i.H4b, m5i.H4b, m5i.H4b, m5i.v6, m5i.v6, m5i.w14, m5i.v6, m5i.U5, m5i.n74, m5i.c6b, m5i.x5b],
        d_Level: [m5i.Z0b, m5i.Z0b, m5i.i1b, m5i.Z0b, m5i.D94, m5i.s3, m5i.s3, m5i.s3, m5i.H5, m5i.H5, m5i.N0, m5i.q3, m5i.Z0b, m5i.J1b, m5i.H2b, m5i.J3],
        d_Hint: [m5i.t3, m5i.t3, m5i.h5, m5i.t3, m5i.M64, m5i.Z64, m5i.Z64, m5i.Z64, m5i.T6, m5i.T6, m5i.B5b, m5i.Q44, m5i.K3, m5i.d74, m5i.Q8b, m5i.o2b],
        d_Shuffle: [m5i.r1b, m5i.r1b, m5i.f8b, m5i.P2, m5i.n94, m5i.g8, m5i.g8, m5i.g8, m5i.o8b, m5i.a2, m5i.F94, m5i.k14, m5i.P6, m5i.u6, m5i.U3, m5i.d24],
        d_Pause: [m5i.s0b, m5i.s0b, m5i.F24, m5i.M3b, m5i.O8, m5i.S3, m5i.S3, m5i.S3, m5i.S3, m5i.S3, m5i.s0b, m5i.S3, m5i.s0b, m5i.c04, m5i.Q04, m5i.D4b],
        d_Goal: [m5i.Z2, m5i.Z2, m5i.e64, m5i.X0b, m5i.N1, m5i.f1b, m5i.f1b, m5i.f1b, m5i.t9b, m5i.t9b, m5i.W5, m5i.t2, m5i.r6b, m5i.J74, m5i.C8, m5i.K4],
        d_Continue: [m5i.C8b, m5i.C8b, m5i.Z6b, m5i.S0b, m5i.g74, m5i.V1, m5i.V1, m5i.V1, m5i.V1, m5i.V1, m5i.L04, m5i.i64, m5i.Y44, m5i.Z7, m5i.A24, m5i.I7],
        d_Menu: [m5i.S5, m5i.S5, m5i.S5, m5i.S5, m5i.D2b, m5i.p2b, m5i.p2b, m5i.p2b, m5i.S5, m5i.S5, m5i.S5, m5i.S5, m5i.z2b, m5i.m6b, m5i.S5, m5i.z2b],
        d_SubmitScore: [m5i.v4, m5i.v4, m5i.h44, m5i.k1b, m5i.a9, m5i.S4, m5i.S4, m5i.S4, m5i.y6, m5i.p7b, m5i.M44, m5i.r5b, m5i.h9, m5i.y8b, m5i.J8b, m5i.T44],
        d_PlayAgain: [m5i.o14, m5i.o14, m5i.M4, m5i.H7, m5i.L44, m5i.s6b, m5i.s6b, m5i.s6b, m5i.p4b, m5i.p4b, m5i.c6, m5i.F5b, m5i.z7, m5i.k8b, m5i.C44, m5i.f2],
        d_YourScore: [m5i.y1b, m5i.y1b, m5i.n5, m5i.P44, m5i.J64, m5i.t5b, m5i.t5b, m5i.t5b, m5i.U7, m5i.d0b, m5i.w1b, m5i.I44, m5i.H5b, m5i.m74, m5i.X1, m5i.W8b]
    },
    GameSound = {
        ua: navigator.userAgent,
        useWebAudioBGM: m5i.R3b,
        playSoundFX: m5i.R3b,
        soundHowl: m5i.V3b,
        musicHowl: m5i.V3b,
        musicMuted: m5i.C14,
        soundMuted: m5i.C14,
        loopSoundId: m5i.V3b,
        musicPlaying: m5i.C14,
        loopPlaying: m5i.V3b,
        sprite: m5i.V3b,
        loadScript: function(E, z) {
            var T0, a0 = document.getElementsByTagName(m5i.U2b)[m5i.c4];
            T0 = document.createElement(m5i.U2b);
            if (z) {
                T0.addEventListener(m5i.A44, z, m5i.C14);
            }
            T0.src = E;
            a0.parentNode.insertBefore(T0, a0);
        },
        init: function(E) {
            var z = 'static/sprite.js',
                T0 = 'static/sprite.m4a',
                a0 = 'static/sprite.ogg';
            this.soundMuted = GameLib.getStorage(m5i.A6b) === m5i.R3b;
            this.musicMuted = GameLib.getStorage(m5i.V64) === m5i.R3b;
            this.sprite = E;
            var p0 = /http/.test(location.protocol);
            if (!p0 || /(Trident|MSIE|IEMobile|Silk)/.test(this.ua) || (/Android/.test(this.ua) && !/(Chrome|Firefox|Opera)/.test(this.ua))) {
                this.useWebAudioBGM = m5i.C14;
            }
            if (/Silk/.test(this.ua) || (/Android/.test(this.ua) && !/(Chrome|Firefox|Opera)/.test(this.ua))) {
                this.playSoundFX = m5i.C14;
            }
            this.musicHowl = new Howl({
                src: ['static/Game.ogg', 'static/Game.m4a'],
                loop: true,
                duration: GameConfig.BGMduration || 0
            });
            if (this.playSoundFX) {
                if (Howler.usingWebAudio) {
                    GameSound.soundHowl = new Howl({
                        src: [a0, T0],
                        sprite: E
                    });
                } else {
                    this.loadScript(z, function() {
                        GameSound.soundHowl = new Howl({
                            src: [soundSprite, T0, a0],
                            sprite: E
                        });
                    });
                }
            }
        },
        ping: function() {
            var E = 22050;
            if (!Howler.usingWebAudio) return;
            var z = Howler.ctx,
                T0 = z.createBuffer(m5i.I4, m5i.I4, E),
                a0 = z.createBufferSource();
            a0.buffer = T0;
            a0.connect(z.destination);
            if (typeof a0.start === m5i.E2b) {
                a0.noteOn(m5i.c4);
            } else {
                a0.start(m5i.c4);
            }
        },
        playSound: function(E, z, T0) {
            var a0 = this;
            if (z && this.loopPlaying) {
                this.soundHowl.stop(this.loopPlaying);
                this.loopPlaying = m5i.V3b;
            }
            if (!this.sprite[E] || !this.playSoundFX || this.soundMuted) {
                if (!z && T0) {
                    T0(m5i.C14);
                }
                return;
            }
            var p0 = this.soundHowl.play(E, T0);
            if (z) {
                a0.loopPlaying = p0;
            }
        },
        playMusic: function() {
            if (this.musicPlaying) return;
            this.musicHowl.play();
            if (this.musicMuted) {
                this.musicHowl.mute(m5i.R3b);
            }
            this.musicPlaying = m5i.R3b;
        },
        stopMusic: function() {
            if (this.musicPlaying) {
                this.musicHowl.stop();
                this.musicPlaying = m5i.C14;
            }
        },
        muteMusic: function(E) {
            this.musicMuted = E;
            this.musicHowl.mute(E);
            GameLib.setStorage(m5i.V64, E);
        },
        muteSound: function(E) {
            this.soundMuted = E;
            if (E) this.soundHowl.mute(m5i.R3b);
            else this.soundHowl.mute(m5i.C14);
            GameLib.setStorage(m5i.A6b, E);
        },
        setIdle: function(E) {
            Howler.mute(E);
        }
    };
document.addEventListener(m5i.g5, function(E) {
    GameSound.init(GameConfig.soundSprite);
}, m5i.C14);;
var GameHiscore = {
    gameName: m5i.e9b,
    lang: m5i.R2,
    salt1: m5i.x7b,
    salt2: m5i.A8,
    apiDomain: m5i.V3b,
    apiUrl: m5i.V3b,
    init: function(E) {
        var z = '/highscore.php',
            T0 = 'http://www.',
            a0 = '/hiscore',
            p0 = 'api.zygomatic.nl',
            G0 = 'dev.api.zygomatic.nl';
        this.gameName = E;
        this.apiDomain = GameConfig.debug ? G0 : p0;
        this.apiUrl = location.protocol + m5i.o8 + this.apiDomain + a0;
        if (/(leukstespellen\.nl|gamesonly\.net)$/i.test(GameLib.getHostDomain())) {
            this.apiDomain = RegExp.$1.toLowerCase();
            this.apiUrl = T0 + this.apiDomain + z;
        }
    },
    set: function(E, z) {
        if (typeof E === m5i.Y94) {
            for (var T0 in E) {
                this[T0] = E[T0];
            }
        } else {
            this[E] = z;
        }
    },
    md5: function(d6) {
        function x2(E, z) {
            var T0 = (E & 0xFFFF) + (z & 0xFFFF),
                a0 = (E >> m5i.K44) + (z >> m5i.K44) + (T0 >> m5i.K44);
            return (a0 << m5i.K44) | (T0 & 0xFFFF);
        }

        function M6(E, z) {
            return (E << z) | (E >>> (m5i.U44 - z));
        }

        function V6(E, z, T0, a0, p0, G0) {
            return x2(M6(x2(x2(z, E), x2(a0, G0)), p0), T0);
        }

        function g4(E, z, T0, a0, p0, G0, Q0) {
            return V6((z & T0) | ((~z) & a0), E, z, p0, G0, Q0);
        }

        function w4(E, z, T0, a0, p0, G0, Q0) {
            return V6((z & a0) | (T0 & (~a0)), E, z, p0, G0, Q0);
        }

        function d4(E, z, T0, a0, p0, G0, Q0) {
            return V6(z ^ T0 ^ a0, E, z, p0, G0, Q0);
        }

        function E4(E, z, T0, a0, p0, G0, Q0) {
            return V6(T0 ^ (z | (~a0)), E, z, p0, G0, Q0);
        }

        function I6(E, z) {
            var T0 = 343485551,
                a0 = 718787259,
                p0 = 1120210379,
                G0 = 145523070,
                Q0 = 1309151649,
                X0 = 1560198380,
                U0 = 30611744,
                q0 = 1873313359,
                O0 = 2054922799,
                I0 = 1051523,
                H0 = 1894986606,
                l0 = 1700485571,
                n0 = 57434055,
                u0 = 21,
                K0 = 1416354905,
                W0 = 1126891415,
                R0 = 198630844,
                E0 = 995338651,
                v0 = 530742520,
                B0 = 421815835,
                h0 = 640364487,
                t0 = 76029189,
                r0 = 722521979,
                S0 = 358537222,
                Z4 = 681279174,
                c0 = 1094730640,
                P0 = 155497632,
                X4 = 1272893353,
                b0 = 1530992060,
                p4 = 35309556,
                u4 = 1839030562,
                i2 = 2022574463,
                i4 = 378558,
                o4 = 1926607734,
                y4 = 1735328473,
                y0 = 51403784,
                h4 = 1444681467,
                U4 = 1163531501,
                C0 = 187363961,
                f4 = 1019803690,
                B4 = 568446438,
                t4 = 405537848,
                j4 = 660478335,
                J2 = 38016083,
                Y2 = 701558691,
                C2 = 373897302,
                l2 = 643717713,
                M2 = 1069501632,
                W2 = 165796510,
                q2 = 1236535329,
                g2 = 1502002290,
                Y6 = 40341101,
                s2 = 1804603682,
                r2 = 1990404162,
                I2 = 42063,
                m2 = 1958414417,
                L2 = 1770035416,
                h2 = 45705983,
                p6 = 1473231341,
                m4 = 1200080426,
                Y4 = 176418897,
                a6 = 1044525330,
                e4 = 22,
                C6 = 606105819,
                G6 = 389564586,
                K2 = 680876936,
                Q6 = 271733878,
                M0 = 1732584194,
                O2 = 271733879,
                e2 = 1732584193;
            E[z >> m5i.A4] |= 0x80 << (z % m5i.U44);
            E[(((z + m5i.L64) >>> m5i.n4) << m5i.s4) + m5i.b44] = z;
            var f0, X2, K6, s6, f6, L0 = e2,
                k0 = -O2,
                D0 = -M0,
                V0 = Q6;
            for (f0 = m5i.c4; f0 < E.length; f0 += m5i.K44) {
                X2 = L0;
                K6 = k0;
                s6 = D0;
                f6 = V0;
                L0 = g4(L0, k0, D0, V0, E[f0], m5i.D4, -K2);
                V0 = g4(V0, L0, k0, D0, E[f0 + m5i.I4], m5i.v44, -G6);
                D0 = g4(D0, V0, L0, k0, E[f0 + m5i.C4], m5i.f44, C6);
                k0 = g4(k0, D0, V0, L0, E[f0 + m5i.O4], e4, -a6);
                L0 = g4(L0, k0, D0, V0, E[f0 + m5i.s4], m5i.D4, -Y4);
                V0 = g4(V0, L0, k0, D0, E[f0 + m5i.A4], m5i.v44, m4);
                D0 = g4(D0, V0, L0, k0, E[f0 + m5i.L4], m5i.f44, -p6);
                k0 = g4(k0, D0, V0, L0, E[f0 + m5i.D4], e4, -h2);
                L0 = g4(L0, k0, D0, V0, E[f0 + m5i.x4], m5i.D4, L2);
                V0 = g4(V0, L0, k0, D0, E[f0 + m5i.n4], m5i.v44, -m2);
                D0 = g4(D0, V0, L0, k0, E[f0 + m5i.H24], m5i.f44, -I2);
                k0 = g4(k0, D0, V0, L0, E[f0 + m5i.R44], e4, -r2);
                L0 = g4(L0, k0, D0, V0, E[f0 + m5i.v44], m5i.D4, s2);
                V0 = g4(V0, L0, k0, D0, E[f0 + m5i.n44], m5i.v44, -Y6);
                D0 = g4(D0, V0, L0, k0, E[f0 + m5i.b44], m5i.f44, -g2);
                k0 = g4(k0, D0, V0, L0, E[f0 + m5i.B44], e4, q2);
                L0 = w4(L0, k0, D0, V0, E[f0 + m5i.I4], m5i.A4, -W2);
                V0 = w4(V0, L0, k0, D0, E[f0 + m5i.L4], m5i.n4, -M2);
                D0 = w4(D0, V0, L0, k0, E[f0 + m5i.R44], m5i.b44, l2);
                k0 = w4(k0, D0, V0, L0, E[f0], m5i.w44, -C2);
                L0 = w4(L0, k0, D0, V0, E[f0 + m5i.A4], m5i.A4, -Y2);
                V0 = w4(V0, L0, k0, D0, E[f0 + m5i.H24], m5i.n4, J2);
                D0 = w4(D0, V0, L0, k0, E[f0 + m5i.B44], m5i.b44, -j4);
                k0 = w4(k0, D0, V0, L0, E[f0 + m5i.s4], m5i.w44, -t4);
                L0 = w4(L0, k0, D0, V0, E[f0 + m5i.n4], m5i.A4, B4);
                V0 = w4(V0, L0, k0, D0, E[f0 + m5i.b44], m5i.n4, -f4);
                D0 = w4(D0, V0, L0, k0, E[f0 + m5i.O4], m5i.b44, -C0);
                k0 = w4(k0, D0, V0, L0, E[f0 + m5i.x4], m5i.w44, U4);
                L0 = w4(L0, k0, D0, V0, E[f0 + m5i.n44], m5i.A4, -h4);
                V0 = w4(V0, L0, k0, D0, E[f0 + m5i.C4], m5i.n4, -y0);
                D0 = w4(D0, V0, L0, k0, E[f0 + m5i.D4], m5i.b44, y4);
                k0 = w4(k0, D0, V0, L0, E[f0 + m5i.v44], m5i.w44, -o4);
                L0 = d4(L0, k0, D0, V0, E[f0 + m5i.A4], m5i.s4, -i4);
                V0 = d4(V0, L0, k0, D0, E[f0 + m5i.x4], m5i.R44, -i2);
                D0 = d4(D0, V0, L0, k0, E[f0 + m5i.R44], m5i.K44, u4);
                k0 = d4(k0, D0, V0, L0, E[f0 + m5i.b44], m5i.o04, -p4);
                L0 = d4(L0, k0, D0, V0, E[f0 + m5i.I4], m5i.s4, -b0);
                V0 = d4(V0, L0, k0, D0, E[f0 + m5i.s4], m5i.R44, X4);
                D0 = d4(D0, V0, L0, k0, E[f0 + m5i.D4], m5i.K44, -P0);
                k0 = d4(k0, D0, V0, L0, E[f0 + m5i.H24], m5i.o04, -c0);
                L0 = d4(L0, k0, D0, V0, E[f0 + m5i.n44], m5i.s4, Z4);
                V0 = d4(V0, L0, k0, D0, E[f0], m5i.R44, -S0);
                D0 = d4(D0, V0, L0, k0, E[f0 + m5i.O4], m5i.K44, -r0);
                k0 = d4(k0, D0, V0, L0, E[f0 + m5i.L4], m5i.o04, t0);
                L0 = d4(L0, k0, D0, V0, E[f0 + m5i.n4], m5i.s4, -h0);
                V0 = d4(V0, L0, k0, D0, E[f0 + m5i.v44], m5i.R44, -B0);
                D0 = d4(D0, V0, L0, k0, E[f0 + m5i.B44], m5i.K44, v0);
                k0 = d4(k0, D0, V0, L0, E[f0 + m5i.C4], m5i.o04, -E0);
                L0 = E4(L0, k0, D0, V0, E[f0], m5i.L4, -R0);
                V0 = E4(V0, L0, k0, D0, E[f0 + m5i.D4], m5i.H24, W0);
                D0 = E4(D0, V0, L0, k0, E[f0 + m5i.b44], m5i.B44, -K0);
                k0 = E4(k0, D0, V0, L0, E[f0 + m5i.A4], u0, -n0);
                L0 = E4(L0, k0, D0, V0, E[f0 + m5i.v44], m5i.L4, l0);
                V0 = E4(V0, L0, k0, D0, E[f0 + m5i.O4], m5i.H24, -H0);
                D0 = E4(D0, V0, L0, k0, E[f0 + m5i.H24], m5i.B44, -I0);
                k0 = E4(k0, D0, V0, L0, E[f0 + m5i.I4], u0, -O0);
                L0 = E4(L0, k0, D0, V0, E[f0 + m5i.x4], m5i.L4, q0);
                V0 = E4(V0, L0, k0, D0, E[f0 + m5i.B44], m5i.H24, -U0);
                D0 = E4(D0, V0, L0, k0, E[f0 + m5i.L4], m5i.B44, -X0);
                k0 = E4(k0, D0, V0, L0, E[f0 + m5i.n44], u0, Q0);
                L0 = E4(L0, k0, D0, V0, E[f0 + m5i.s4], m5i.L4, -G0);
                V0 = E4(V0, L0, k0, D0, E[f0 + m5i.R44], m5i.H24, -p0);
                D0 = E4(D0, V0, L0, k0, E[f0 + m5i.C4], m5i.B44, a0);
                k0 = E4(k0, D0, V0, L0, E[f0 + m5i.n4], u0, -T0);
                L0 = x2(L0, X2);
                k0 = x2(k0, K6);
                D0 = x2(D0, s6);
                V0 = x2(V0, f6);
            }
            return [L0, k0, D0, V0];
        }

        function b6(E) {
            var z, T0 = m5i.e9b;
            for (z = m5i.c4; z < E.length * m5i.U44; z += m5i.x4) {
                T0 += String.fromCharCode((E[z >> m5i.A4] >>> (z % m5i.U44)) & 0xFF);
            }
            return T0;
        }

        function L6(E) {
            var z, T0 = [];
            T0[(E.length >> 2) - 1] = undefined;
            for (z = m5i.c4; z < T0.length; z += m5i.I4) {
                T0[z] = m5i.c4;
            }
            for (z = m5i.c4; z < E.length * m5i.x4; z += m5i.x4) {
                T0[z >> m5i.A4] |= (E.charCodeAt(z / m5i.x4) & 0xFF) << (z % m5i.U44);
            }
            return T0;
        }

        function t6(E) {
            return b6(I6(L6(E), E.length * m5i.x4));
        }

        function e6(E, z) {
            var T0 = 128,
                a0 = 512,
                p0, G0 = L6(E),
                Q0 = [],
                X0 = [],
                U0;
            Q0[m5i.B44] = X0[m5i.B44] = undefined;
            if (G0.length > m5i.K44) {
                G0 = I6(G0, E.length * 8);
            }
            for (p0 = m5i.c4; p0 < m5i.K44; p0 += m5i.I4) {
                Q0[p0] = G0[p0] ^ 0x36363636;
                X0[p0] = G0[p0] ^ 0x5C5C5C5C;
            }
            U0 = I6(Q0.concat(L6(z)), 512 + z.length * 8);
            return b6(I6(X0.concat(U0), a0 + T0));
        }

        function h6(E) {
            var z = '0123456789abcdef',
                T0 = z,
                a0 = m5i.e9b,
                p0, G0;
            for (G0 = m5i.c4; G0 < E.length; G0 += m5i.I4) {
                p0 = E.charCodeAt(G0);
                a0 += T0.charAt((p0 >>> m5i.s4) & 0x0F) + T0.charAt(p0 & 0x0F);
            }
            return a0;
        }

        function j6(E) {
            return unescape(encodeURIComponent(E));
        }

        function N6(E) {
            return t6(j6(E));
        }

        function E6(E) {
            return h6(N6(E));
        }
        return E6(d6);
    },
    submitScore: function(z, T0) {
        var a0 = '&hash=',
            p0 = '/submitScore.php?game=',
            G0 = '&otherparam=',
            Q0 = '&score=',
            X0 = 'zygomaticgames',
            U0 = 'www.',
            q0 = 'message',
            O0;
        T0 = T0 || m5i.e9b;
        var I0 = this.gameName + T0;
        window.addEventListener(q0, function(E) {
            if (/api.zygomatic.nl/.test(E.origin)) {
                window.scrollTo(m5i.c4, m5i.c4);
            }
        });
        if (/(leukstespellen\.nl|gamesonly\.net)/.test(this.apiDomain)) {
            O0 = this.md5(U0 + this.apiDomain + I0 + z + X0);
            window.open(this.apiUrl + m5i.b64 + I0 + Q0 + escape(z) + G0 + escape(O0), m5i.N1b);
        } else {
            O0 = this.md5(atob(this.salt1) + I0 + this.lang + z + atob(this.salt2));
            GameLib.showPopup(m5i.V3b, this.apiUrl + p0 + escape(I0) + m5i.Z04 + escape(this.lang) + Q0 + escape(z) + a0 + escape(O0), m5i.O14, m5i.l4, m5i.C14);
        }
    },
    leaderBoard: function(E) {
        // var z = '/leaderBoard.php?game=';
        // E = E || m5i.e9b;
        // var T0 = this.gameName + E;
        // if (/(leukstespellen\.nl|gamesonly\.net)/.test(this.apiDomain)) {
        //     window.open(this.apiUrl + m5i.b64 + T0, m5i.N1b);
        // } else {
        //     GameLib.showPopup(m5i.V3b, this.apiUrl + z + escape(T0) + m5i.Z04 + escape(this.lang), m5i.O14, m5i.l4, m5i.C14);
        // }
    }
};
document.addEventListener(m5i.g5, function(E) {
    GameHiscore.init(E.gameName);
}, m5i.C14);;
var GameAds = {
    config: m5i.V3b,
    adsManager: m5i.V3b,
    adsLoader: m5i.V3b,
    adDisplayContainer: m5i.V3b,
    intervalTimer: m5i.V3b,
    resizeTimer: m5i.V3b,
    gameDiv: m5i.V3b,
    adDiv: m5i.V3b,
    doneFn: m5i.V3b,
    throbber: m5i.V3b,
    hostDomain: m5i.V3b,
    preMidRoll: m5i.V3b,
    init: function() {
        var E = 'static/ima3.js',
            z = 'adContainer';
        if (!GameLib.online) return m5i.C14;
        if (ThirdParty.ads && ThirdParty.ads.adsense) {
            GameAds.config = ThirdParty.ads;
        } else if (GameConfig.ads && GameConfig.ads.adsense) {
            GameAds.config = GameConfig.ads;
        } else {
            return m5i.C14;
        }
        this.gameDiv = document.getElementById(m5i.l5);
        this.adDiv = document.getElementById(z);
        this.hostDomain = GameLib.getHostDomain();
        var T0 = document.createElement(m5i.U2b),
            a0 = document.getElementsByTagName(m5i.U2b)[m5i.c4];
        T0.src = E;
        a0.parentNode.insertBefore(T0, a0);
        return m5i.R3b;
    },
    showAd: function() {
        var E = 3600,
            z = 'lastAdTimestamp',
            T0 = 'midrollSkipGoogleAdDomains',
            a0 = 'prerollSkipGoogleAdDomains',
            p0 = 'Host domain: ',
            G0 = Math.round(m5i.I4 * new Date() / m5i.S14),
            Q0 = !!GameLib.getStorage(m5i.V2b);
        GameLib.setStorage(m5i.V2b, m5i.R3b);
        if (m5i.V3b === GameAds.config) {
            return m5i.C14;
        }
        console.log(p0 + this.hostDomain);
        var X0 = m5i.C14,
            U0 = m5i.C14,
            q0 = m5i.C14;
        if (!window.zygomatic || !window.zygomatic.settings[a0]) {
            X0 = m5i.R3b;
        } else {
            X0 = (m5i.D74 + window.zygomatic.settings[a0].join(m5i.D74) + m5i.D74).indexOf(GameAds.hostDomain) === -m5i.I4;
            if (!X0) {
                U0 = (m5i.D74 + window.zygomatic.settings[T0].join(m5i.D74) + m5i.D74).indexOf(GameAds.hostDomain) === -m5i.I4;
            }
        }
        q0 = X0 || (U0 && Q0);
        if (q0) {
            var O0 = GameLib.getStorage(z),
                I0 = GameAds.config.interval ? GameAds.config.interval : E;
            if (O0 !== m5i.C14) {
                if (G0 - O0 < I0) {
                    return m5i.C14;
                }
            }
            GameLib.setStorage(z, G0);
        }
        return q0;
    },
    showLoading: function(E) {
        var z = '<span class="throbber"></span>',
            T0 = 'throbber';
        if (E) {
            this.throbber = document.createElement(m5i.m44);
            this.throbber.id = T0;
            this.throbber.innerHTML = z;
            this.adDiv.appendChild(this.throbber);
            this.adDiv.style.visibility = m5i.B8b;
        } else {
            this.throbber.parentNode.removeChild(this.throbber);
        }
    },
    requestAd: function(z) {
        var T0 = '&adtest=on',
            a0 = '[description_url]',
            p0 = '/about.html',
            G0 = '.png" style="width:100%;height:100%"><div id="timeLeft"></div>',
            Q0 = '<img src="//cdn.htmlgames.com/banner/adblock-',
            X0 = this;
        if (typeof z == m5i.o9b) {
            X0.doneFn = z;
        }

        function U0() {
            var E = X0.gameDiv.getBoundingClientRect();
            X0.adDiv.style.top = E.top + 'px';
            X0.adDiv.style.left = E.left + 'px';
            X0.adDiv.style.width = E.width + 'px';
            X0.adDiv.style.height = (E.height + 1) + 'px';
        }
        if (typeof google == m5i.E2b) {
            this.adDiv.style.visibility = m5i.B8b;
            this.adDiv.innerHTML = Q0 + GameLib.lang + G0;
            window.addEventListener(m5i.g6, U0, m5i.C14);
            U0();
            var q0 = document.getElementById(m5i.b0b),
                O0 = document.createElement(m5i.m44),
                I0 = m5i.a44,
                H0 = m5i.a44;
            q0.appendChild(O0);
            GameAds.intervalTimer = setInterval(function() {
                H0--;
                O0.style.width = 100 - Math.round(H0 / I0 * 100) + '%';
                if (H0 == -1) {
                    window.removeEventListener('resize', U0, false);
                    GameAds.adDone('timeout');
                }
            }, 1000);
            return;
        }
        this.resize();
        X0.showLoading(m5i.R3b);
        X0.createAdDisplayContainer();
        X0.adDisplayContainer.initialize();
        X0.adsLoader = new google.ima.AdsLoader(X0.adDisplayContainer);
        X0.adsLoader.addEventListener(google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED, X0.onAdsManagerLoaded, m5i.C14);
        X0.adsLoader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, X0.onAdError, m5i.C14);
        var l0 = new google.ima.AdsRequest();
        l0.forceNonLinearFullSlot = m5i.R3b;
        var n0 = location.protocol + location.port + m5i.o8 + location.hostname + location.pathname.substr(m5i.c4, location.pathname.lastIndexOf(m5i.v2)) + p0;
        l0.adTagUrl = GameAds.config.adsense.url.replace(a0, encodeURIComponent(n0));
        if (/games\.(avoid\.org|webgear\.nl)/.test(location.hostname)) {
            l0.adTagUrl += T0;
        }
        l0.linearAdSlotWidth = GameLib.gameWidth;
        l0.linearAdSlotHeight = GameLib.gameHeight;
        l0.nonLinearAdSlotWidth = Math.round(GameLib.gameWidth * GameLib.scale);
        l0.nonLinearAdSlotHeight = Math.round((GameLib.gameHeight - 50) * GameLib.scale);
        X0.adsLoader.requestAds(l0);
    },
    createAdDisplayContainer: function() {
        this.adDisplayContainer = new google.ima.AdDisplayContainer(GameAds.adDiv);
    },
    onAdsManagerLoaded: function(z) {
        var T0 = new google.ima.AdsRenderingSettings();
        T0.loadVideoTimeout = m5i.Y8b;
        GameAds.adsManager = z.getAdsManager(GameAds.gameDiv, T0);
        GameAds.adsManager.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, GameAds.onAdError);
        GameAds.adsManager.addEventListener(google.ima.AdEvent.Type.ALL_ADS_COMPLETED, GameAds.onAdEvent);
        GameAds.adsManager.addEventListener(google.ima.AdEvent.Type.LOADED, GameAds.onAdEvent);
        GameAds.adsManager.addEventListener(google.ima.AdEvent.Type.STARTED, GameAds.onAdEvent);
        GameAds.adsManager.addEventListener(google.ima.AdEvent.Type.COMPLETE, GameAds.onAdEvent);
        GameAds.adsManager.addEventListener(google.ima.AdEvent.Type.SKIPPABLE_STATE_CHANGED, GameAds.onAdEvent);
        GameAds.adsManager.addEventListener(google.ima.AdEvent.Type.SKIPPED, GameAds.onAdEvent);
        GameAds.adsManager.addEventListener(google.ima.AdEvent.Type.USER_CLOSE, GameAds.onAdEvent);
        try {
            GameAds.adsManager.init(GameLib.gameWidth, GameLib.gameHeight, google.ima.ViewMode.NORMAL);
            GameAds.adsManager.start();
        } catch (E) {}
    },
    resize: function(E, z) {
        var T0 = this.gameDiv.getBoundingClientRect(),
            a0;
        for (a0 in {
            left: m5i.c4,
            top: m5i.c4,
            width: m5i.c4,
            height: m5i.c4
        }) {
            this.adDiv.style[a0] = Math.round(T0[a0]) + 'px';
        }
        if (arguments.length == m5i.C4) {
            if (T0.width < E || T0.height < z) {
                this.adDone(m5i.h8);
            } else {
                GameAds.adsManager.resize(Math.ceil(T0.width), Math.ceil(T0.height), google.ima.ViewMode.FULLSCREEN);
            }
        }
    },
    resizeHandler: function() {
        clearTimeout(this.resizeTimer);
        this.resizeTimer = setTimeout(function() {
            GameAds.resize(m5i.c4, m5i.c4);
        }, m5i.P64);
    },
    onAdEvent: function(E) {
        var z = 'skipped',
            T0 = 'complete',
            a0 = 'iframe',
            p0 = E.getAd(),
            G0 = p0.isLinear();
        switch (E.type) {
            case google.ima.AdEvent.Type.LOADED:
                var Q0 = p0.getWidth(),
                    X0 = p0.getHeight(),
                    U0;
                GameAds.showLoading(m5i.C14);
                GameAds.resize(Q0, X0);
                GameAds.adDiv.querySelectorAll(a0)[m5i.c4].style.visibility = m5i.B8b;
                window.addEventListener(m5i.g6, GameAds.resizeHandler, m5i.C14);
                break;
            case google.ima.AdEvent.Type.STARTED:
                var q0 = document.getElementById(m5i.b0b),
                    O0 = document.createElement(m5i.m44);
                q0.appendChild(O0);
                if (G0) {
                    var I0 = p0.getDuration();
                    GameAds.intervalTimer = setInterval(function() {
                        O0.style.width = 100 - Math.round(GameAds.adsManager.getRemainingTime() / I0 * 100) + '%';
                    }, m5i.H94);
                } else {
                    var H0 = m5i.B44,
                        I0 = m5i.B44;
                    GameAds.adDiv.onclick = function() {
                        GameAds.adDone(T0);
                    };
                    GameAds.intervalTimer = setInterval(function() {
                        I0--;
                        O0.style.width = 100 - Math.round(I0 / H0 * 100) + '%';
                        if (I0 == -1) {
                            GameAds.adDone('timeout');
                        }
                    }, 1000);
                }
                break;
            case google.ima.AdEvent.Type.SKIPPABLE_STATE_CHANGED:
                break;
            case google.ima.AdEvent.Type.COMPLETE:
            case google.ima.AdEvent.Type.USER_CLOSE:
                GameAds.adDone(T0);
                break;
            case google.ima.AdEvent.Type.SKIPPED:
                GameAds.adDone(z);
                break;
        }
    },
    adDone: function(z, T0) {
        var a0 = '<div id="timeLeft"></div>';
        if (typeof T0 == m5i.E2b) {
            T0 = m5i.R3b;
        }
        var p0 = this;
        window.removeEventListener(m5i.g6, p0.resizeHandler, m5i.C14);
        if (p0.intervalTimer) {
            clearInterval(p0.intervalTimer);
        }
        p0.adDiv.innerHTML = a0;
        p0.adDiv.style.visibility = m5i.G5b;
        try {
            GameAds.adsManager.destroy();
        } catch (E) {};
        if (T0 && p0.doneFn) {
            p0.doneFn(z);
        }
    },
    onAdError: function(z) {
        console.log(z.getError());
        GameAds.adDone(m5i.h8);
        try {
            GameAds.adsManager.destroy();
        } catch (E) {};
    }
};
document.addEventListener(m5i.g5, function(E) {
    GameAds.init();
}, m5i.C14);;
(function(E, z, T0, a0, p0, G0, Q0) {
    var X0 = 'GoogleAnalyticsObject';
    E[X0] = p0;
    E[p0] = E[p0] || function() {
        (E[p0].q = E[p0].q || []).push(arguments);
    }, E[p0].l = m5i.I4 * new Date();
    G0 = z.createElement(T0), Q0 = z.getElementsByTagName(T0)[m5i.c4];
    G0.async = m5i.I4;
    G0.src = a0;
    Q0.parentNode.insertBefore(G0, Q0);
})(window, document, m5i.U2b, m5i.G94, m5i.N6b);
var GameAnalytics = {
    gaUA: m5i.V3b,
    init: function() {
        var E = 'pageview',
            z = 'create';
        if (!GameLib.online) return;
        if (ThirdParty.gaUA) {
            GameAnalytics.gaUA = ThirdParty.gaUA;
        } else if (GameConfig.gaUA) {
            GameAnalytics.gaUA = GameConfig.gaUA;
        }
        if (GameAnalytics.gaUA !== m5i.V3b) {
            __gaTracker(z, GameAnalytics.gaUA, m5i.M7b);
            __gaTracker(m5i.u9b, E);
        }
    },
    hit: function(E, z) {
        var T0 = 'game',
            a0 = 'event';
        if (m5i.V3b === GameAnalytics.gaUA) return;
        if (undefined === z) {
            __gaTracker(m5i.u9b, a0, T0, E);
        } else {
            __gaTracker(m5i.u9b, a0, T0, E, z);
        }
    }
};
document.addEventListener(m5i.g5, function(E) {
    GameAnalytics.init();
}, m5i.C14);;